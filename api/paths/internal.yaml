/admin/api/v1/balance:
  get:
    tags:
      - Balance
    summary: Get balance for current user's merchant
    description: Get balance for current user's merchant
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/merchant_balance'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/balance/{merchant_id}:
  get:
    tags:
      - Balance
    summary: Get balance for merchant with id passed in url
    description: Get balance for merchant with id passed in url
    parameters:
      - name: merchant_id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/merchant_balance'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/keys/:key_id:
  get:
    tags:
      - Key
      - Onboarding
    summary: Get info about key by ID
    parameters:
      - name: key_id
        in: path
        description: "Key ID"
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Key'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/key-products:
  get:
    tags:
      - Product
    summary: "Get list of key products"
    parameters:
      - name: project_id
        in: query
        description: "Project ID"
        required: false
        schema:
          type: string
      - name: "name"
        in: query
        description: "Filter by name"
        required: false
        schema:
          type: string
      - name: "offset"
        in: query
        description: "Offset list"
        required: false
        schema:
          type: number
      - name: "limit"
        in: query
        description: "Limit list count"
        required: false
        schema:
          type: number
    responses:
      200:
        description: Return list of key products for user
        content:
          application/json:
            schema:
              type: object
              properties:
                total_count:
                  type: integer
                items:
                  type: array
                  items:
                    $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      500:
        $ref: '#/components/responses/InternalError'
  post:
    tags:
      - Product
    summary: "Create new key product"
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateKeyProduct'
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/key-products/:key_product_id/publish:
  post:
    tags:
      - Product
    summary: Publishes product
    parameters:
      - name: key_product_id
        in: path
        description: "Key Product ID"
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/key-products/:key_product_id/unpublish:
  post:
    tags:
      - Product
    summary: Set key product inactive
    parameters:
      - name: key_product_id
        in: path
        description: "Key Product ID"
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/key-products/:key_product_id:
  delete:
    tags:
      - Product
    summary: "Change product"
    parameters:
      - name: key_product_id
        in: path
        description: "Key Product ID"
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
  put:
    tags:
      - Product
    summary: "Change product"
    parameters:
      - name: key_product_id
        in: path
        description: "Key Product ID"
        required: true
        schema:
          type: string
    requestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateKeyProduct'
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
  get:
    tags:
      - product
    summary: "Get product by id"
    parameters:
      - name: key_product_id
        in: path
        description: "Key Product ID"
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyProduct'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/key-products/:key_product_id/platforms/:platform_id/count:
  get:
    tags:
      - Key
      - Onboarding
    summary: Gets count of keys for specified platform and product
    parameters:
      - $ref: '#/components/parameters/KeyProduct'
      - $ref: '#/components/parameters/Platform'
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeysCountResponse'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/key-products/:key_product_id/platforms/:platform_id/file:
  post:
    tags:
      - Key
      - Onboarding
    summary: Send file with keys to process
    parameters:
      - $ref: '#/components/parameters/KeyProduct'
      - $ref: '#/components/parameters/Platform'
    requestBody:
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeysProcessed'
      400:
        $ref: '#/components/responses/BadRequest'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      404:
        $ref: '#/components/responses/NotFound'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/merchants:
  patch:
    tags:
      - Onboarding
    summary: Change merchant information
    description: Change merchant agreement information
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data for change
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Merchant.ChangeAgreementDataRequest'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/{id}/change-status:
  put:
    tags:
      - Onboarding
    summary: Change merchant status
    description: Change merchant status
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Data required to change status
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Merchant.ChangeStatus'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/manual_payout/enable:
  put:
    tags:
      - Onboarding
    summary: Enable merchant manual payouts
    description: Enable merchant manual payouts
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/manual_payout/disable:
  put:
    tags:
      - Onboarding
    summary: Disable merchant manual payouts
    description: Disable merchant manual payouts
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/notifications:
  get:
    tags:
      - Onboarding
    summary: Get list of notifications to merchant
    description: Get list of notifications to merchant
    parameters:
      - name: user
        in: query
        description: user who sent notification
        schema:
          type: string
      - name: is_system
        in: query
        description: 'flag to filter return notification: 0 - return only notification;
        1 - return only history'
        schema:
          type: integer
      - name: limit
        in: query
        description: limit of returning records
        schema:
          type: integer
      - name: offset
        in: query
        description: offset of returning records
        schema:
          type: integer
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/onboarding.Merchant.Notifications'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/notifications/{notification_id}:
  get:
    tags:
      - Onboarding
    summary: Get notification by identifier
    description: Get notification by identifier
    parameters:
      - name: notification_id
        in: path
        description: notification identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.Notification'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/notifications/{notification_id}/mark-as-read:
  put:
    tags:
      - Onboarding
    summary: Mark notification as readed
    description: Mark notification as readed
    parameters:
      - name: notification_id
        in: path
        description: notification identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.Notification'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/{id}/agreement-type:
  patch:
    tags:
      - Onboarding
    summary: Set merchant agreement type
    description: Set merchant agreement type
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data to change agreement type
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Merchant.ChangeAgreementType.Request'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/agreement:
  get:
    tags:
      - Onboarding
    summary: Generate agreement
    description: Generate agreement for merchant and return data about printable
      agreement
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.PrintableAgreementData.Response'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/agreement/document:
  get:
    tags:
      - Onboarding
    summary: Download merchant agreement
    description: Download merchant agreement
    responses:
      200:
        description: OK
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      400:
        description: Invalid request data
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/agreement/signature:
  put:
    tags:
      - Onboarding
    summary: Get data to sign agreement
    description: Get data to sign license agreement with hellosign api
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.merchant.signatureResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/company:
  put:
    tags:
      - Onboarding
    summary: Set company information
    description: Set company information
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Company'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/contacts:
  put:
    tags:
      - Onboarding
    summary: Set contacts information
    description: Set contacts information
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Contacts'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/banking:
  put:
    tags:
      - Onboarding
    summary: Set banking information
    description: Set banking information
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Banking'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/tariffs:
  get:
    tags:
      - Onboarding
    summary: Get tariff rates
    description: Get tariff rates
    parameters:
      - name: region
        in: query
        description: 'merchant home region name. possible values: asia, europe, latin_america,
          russia_and_cis, worldwide'
        required: true
        schema:
          type: string
      - name: payer_region
        in: query
        description: 'payer possible region name. possible values: asia, europe, latin_america,
          russia_and_cis, worldwide'
        schema:
          type: string
      - name: min_amount
        in: query
        description: payment min amount
        schema:
          type: number
      - name: max_amount
        in: query
        description: payment max amount
        schema:
          type: number
      - name: merchant_operations_type
        in: query
        description: merchant operations type. possible values are low-risk, high-risk
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/onboarding.Tariff'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Onboarding
    summary: Set tariff rates to merchant
    description: Set tariff rates to merchant
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Tariff.Set.Request'
      required: true
    responses:
      200:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/merchants/status:
  get:
    tags:
      - Onboarding
    summary: Get data fill status
    description: Get data fill status
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.merchant.fillStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/dashboard/main:
  get:
    tags:
      - Dashboard
    summary: Get main reports data for dashboard
    description: 'Get main reports dashboard block data, ie. next reports: gross
      revenue, total transactions, VAT, ARPU'
    parameters:
      - name: id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
      - name: period
        in: query
        description: 'period name. now possible next values: current_month, previous_month,
        current_quarter, previous_quarter, current_year, previous_year'
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dashboard.main_reports'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/dashboard/revenue_dynamics:
  get:
    tags:
      - Dashboard
    summary: Get revenue dynamic report for dashboard
    description: Get revenue dynamic report for dashboard
    parameters:
      - name: id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
      - name: period
        in: query
        description: 'period name. now possible next values: current_month, previous_month,
        current_quarter, previous_quarter, current_year, previous_year'
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dashboard.revenue_dynamics'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/dashboard/base:
  get:
    tags:
      - Dashboard
    summary: Get base reports data for dashboard
    description: 'Get base reports dashboard block data, ie. next reports: revenue
      by country, sales today, sources'
    parameters:
      - name: id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
      - name: period
        in: query
        description: 'period name. now possible next values: current_day, previous_day,
        current_week, previous_week, current_month, previous_month, current_quarter,
        previous_quarter, current_year, previous_year'
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dashboard.base'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/invite:
  post:
    tags:
      - Merchant user roles
    summary: Send invitation for merchant user
    description: Send invitation to add user as merchant user
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InviteUserMerchant'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/merchants/users/resend:
  post:
    tags:
      - Merchant user roles
    summary: Resend invitation for merchant user
    description: Resend invitation to add user as merchant user
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResendInviteMerchant'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/merchants/users:
  get:
    tags:
      - Merchant user roles
    summary: List of merchant users
    description: List of merchant users
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/users/roles/{role_id}:
  get:
    tags:
      - Merchant user roles
    summary: Get merchant user role
    description: Get merchant user role
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserRoleResponse'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
  put:
    tags:
      - Merchant user roles
    summary: Update merchant user role
    description: Update merchant user role
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserRoleRequest'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
  delete:
    tags:
      - Merchant user roles
    summary: Delete merchant user
    description: Delete merchant user
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/merchants/roles:
  get:
    tags:
      - Merchant user roles
    summary: List of merchant role types
    description: List of merchant role types
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRoleType'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/order:
  get:
    tags:
      - Order
    summary: Get orders
    description: Get orders list
    parameters:
      - name: id
        in: query
        description: order unique identifier
        schema:
          type: string
      - name: project[]
        in: query
        description: query array of list of projects to get orders filtered by they
        schema:
          type: string
      - name: payment_method[]
        in: query
        description: query array of list of payment methods to get orders filtered
          by they
        schema:
          type: string
      - name: country[]
        in: query
        description: query array of list of payer countries to get orders filtered
          by they
        schema:
          type: string
      - name: status[]
        in: query
        description: query array of list of orders statuses to get orders filtered
          by they
        schema:
          type: integer
      - name: account
        in: query
        description: payer account on the any side of payment process. for example
          it may be account in project, account in payment system, payer email and
          etc
        schema:
          type: string
      - name: pm_date_from
        in: query
        description: start date when payment was closed to get orders filtered by
          they
        schema:
          type: integer
      - name: pm_date_to
        in: query
        description: end date when payment was closed to get orders filtered by they
        schema:
          type: integer
      - name: project_date_from
        in: query
        description: start date when payment was created to get orders filtered by
          they
        schema:
          type: integer
      - name: project_date_to
        in: query
        description: end date when payment was closed in project to get orders filtered
          by they
        schema:
          type: integer
      - name: limit
        in: query
        description: maximum number of returning orders. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset from which you want to return the list of orders. default
          value is 0
        schema:
          type: integer
      - name: sort[]
        in: query
        description: query array of fields list for sorting
        schema:
          type: string
      - name: quick_search
        in: query
        description: multiple field search string - order unique identifier, user
          external identifier, project order identifier, project name, payment method
          name
        schema:
          type: string
      - name: merchant
        in: query
        description: query array of merchant identifier list
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.list.public'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/order/{id}:
  get:
    tags:
      - Order
    summary: Get order data
    description: Get full object with order data
    parameters:
      - name: id
        in: path
        description: Order unique identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.public'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/order/{order_id}/refunds:
  get:
    tags:
      - Order
    summary: Get list of refunds to order
    description: Get list of refunds to order
    parameters:
      - name: order_id
        in: path
        description: order identifier
        required: true
        schema:
          type: string
      - name: limit
        in: query
        description: count of records to need to return
        required: true
        schema:
          type: string
      - name: offset
        in: query
        description: number of record which must be first in listing
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/order.Refund'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Order
    summary: Create new refund to order
    description: Create new refund to order
    parameters:
      - name: order_id
        in: path
        description: order identifier
        required: true
        schema:
          type: string
    requestBody:
      description: refund data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/order.Refund.CreateRequest'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.Refund'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/order/{order_id}/refunds/{refund_id}:
  get:
    tags:
      - Order
    summary: Get refund data
    description: Get refund data
    parameters:
      - name: order_id
        in: path
        description: order identifier
        required: true
        schema:
          type: string
      - name: refund_id
        in: path
        description: refund identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.Refund'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/order/{order_id}/replace_code:
  put:
    tags:
      - Order
    summary: Replaces activation code in order
    description: Replaces activation code in order
    parameters:
      - name: order_id
        in: path
        description: order identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Order change request
      content:
        application/json:
          schema:
            type: object
            properties:
              key_product_id:
                type: string
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.public'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/paylinks:
  get:
    tags:
      - Payment links
    summary: Get a list of payment links for current authenticated merchant
    description: Get a list of payment links for current authenticated merchant
    parameters:
      - name: limit
        in: query
        description: maximum number of returning orders. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset from which you want to return the list of orders. default
          value is 0
        schema:
          type: integer
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/grpcPaylinksPaginate'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Payment links
    summary: Create payment link with json request
    description: Create payment link use POST JSON request
    requestBody:
      description: Payment link create data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPaylinkRequest'
      required: true
    responses:
      200:
        description: Object which contain created payment link
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkPaylink'
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/paylinks/{id}:
  get:
    tags:
      - Payment links
    summary: Get a payment link by id for current authenticated merchant
    description: Get a payment link by id for current authenticated merchant
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkPaylink'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  put:
    tags:
      - Payment links
    summary: Create payment link with json request
    description: Create payment link use POST JSON request
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Payment link create data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPaylinkRequest'
      required: true
    responses:
      200:
        description: Object which contain created payment link
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkPaylink'
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
  delete:
    tags:
      - Payment links
    summary: Delete a payment link by id for current authenticated merchant
    description: Delete a payment link by id for current authenticated merchant
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/paylinks/{id}/url:
  get:
    tags:
      - Payment links
    summary: Get a payment link url by id for current authenticated merchant
    description: Get a payment link url by id for current authenticated merchant
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/paylinks/{id}/dashboard/country:
  get:
    tags:
      - Payment links
    summary: Get a grouping stat by country for a payment link by its id for current
      authenticated merchant
    description: Get a grouping stat by country for a payment link by its id for
      current authenticated merchant
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
      - name: period_from
        in: query
        description: period start date in unix timestamp format
        schema:
          type: number
      - name: period_to
        in: query
        description: period end date in unix timestamp format
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkGroupStatCommon'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/paylinks/{id}/dashboard/referrer:
  get:
    tags:
      - Payment links
    summary: Get a grouping stat by referrer for a payment link by its id for current
      authenticated merchant
    description: Get a grouping stat by referrer for a payment link by its id for
      current authenticated merchant
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
      - name: period_from
        in: query
        description: period start date in unix timestamp format
        schema:
          type: number
      - name: period_to
        in: query
        description: period end date in unix timestamp format
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkGroupStatCommon'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/paylinks/{id}/dashboard/date:
  get:
    tags:
      - Payment links
    summary: Get a grouping stat by date for a payment link by its id for current
      authenticated merchant
    description: Get a grouping stat by date for a payment link by its id for current
      authenticated merchant
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
      - name: period_from
        in: query
        description: period start date in unix timestamp format
        schema:
          type: number
      - name: period_to
        in: query
        description: period end date in unix timestamp format
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkGroupStatCommon'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/paylinks/{id}/dashboard/utm:
  get:
    tags:
      - Payment links
    summary: Get a grouping stat by utm for a payment link by its id for current
      authenticated merchant
    description: Get a grouping stat by utm for a payment link by its id for current
      authenticated merchant
    parameters:
      - name: id
        in: path
        description: Payment link identifier
        required: true
        schema:
          type: string
      - name: period_from
        in: query
        description: period start date in unix timestamp format
        schema:
          type: number
      - name: period_to
        in: query
        description: period end date in unix timestamp format
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paylinkGroupStatCommon'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_min_limit_system:
  get:
    tags:
      - Limits
    summary: Get list of payment minimum limits system
    description: Get list of payment minimum limits system
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment_min_limit_system_list'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Limits
    summary: Set payment minimum limits system for currency
    description: Set payment minimum limits system for currency
    requestBody:
      description: minimum limits system for currency
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/payment_min_limit_system'
      required: false
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/payment_costs/channel/system/all:
  get:
    tags:
      - Onboarding
    summary: Get all system costs for payments
    description: Get all system costs for payments
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.system.all'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/channel/merchant/{id}/all:
  get:
    tags:
      - Onboarding
    summary: Get all merchant costs for payments operations
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.merchant.all'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/money_back/system/all:
  get:
    tags:
      - Onboarding
    summary: Get all system costs for money back operations
    description: Get all system costs for money back operations
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.system.all'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/money_back/merchant/{id}/all:
  get:
    tags:
      - Onboarding
    summary: Get all merchant costs for money back operations
    description: Get all merchant costs for money back operations
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.merchant.all'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/channel/system:
  get:
    tags:
      - Onboarding
    summary: Get system costs for payment operations
    description: Get system costs for payment operations
    parameters:
      - name: name
        in: query
        description: payment method name
        required: true
        schema:
          type: string
      - name: region
        in: query
        description: 'region name. possible values: CIS, Russia, West Asia, EU, North
        America, Central America, South America, United Kingdom, Worldwide, South
        Pacific'
        required: true
        schema:
          type: string
      - name: country
        in: query
        description: two-letter country code by ISO 3166-1
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.system'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Onboarding
    summary: Create system costs for payments operations
    description: Create system costs for payments operations
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.payment.system.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.system'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/payment_costs/channel/merchant/{id}:
  get:
    tags:
      - Onboarding
    summary: Get merchant costs for payment operations
    description: Get merchant costs for payment operations
    parameters:
      - name: id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: payment method name
        required: true
        schema:
          type: string
      - name: region
        in: query
        description: 'region name. possible regions: CIS, Russia, West Asia, EU, North
        America, Central America, South America, United Kingdom, Worldwide, South
        Pacific'
        required: true
        schema:
          type: string
      - name: country
        in: query
        description: two-letter country code by ISO 3166-1
        schema:
          type: string
      - name: payout_currency
        in: query
        description: payout currency. 3 lettre code by ISO 4217
        required: true
        schema:
          type: string
      - name: amount
        in: query
        description: min payment amount
        required: true
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Onboarding
    summary: Create merchant costs for payments operations
    description: Create merchant costs for payments operations
    parameters:
      - name: id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.payment.merchant.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
  delete:
    tags:
      - Onboarding
    summary: Delete merchant costs for payment operations
    description: Delete merchant costs for payment operations
    parameters:
      - name: id
        in: path
        description: merchant cost identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/money_back/system:
  get:
    tags:
      - Onboarding
    summary: Get system costs for money back operations
    description: Get system costs for money back operations
    parameters:
      - name: name
        in: query
        description: payment method name
        required: true
        schema:
          type: string
      - name: payout_currency
        in: query
        description: payout currency. 3 lettre code by ISO 4217
        required: true
        schema:
          type: string
      - name: undo_reason
        in: query
        description: 'money back type. available values: refund, reversal, chargeback'
        required: true
        schema:
          type: string
      - name: region
        in: query
        description: region name
        required: true
        schema:
          type: string
      - name: country
        in: query
        description: two-letter country code by ISO 3166-1
        schema:
          type: string
      - name: days
        in: query
        description: number of days after payment operation
        required: true
        schema:
          type: number
      - name: payment_stage
        in: query
        description: payment stage
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.system'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Onboarding
    summary: Create system costs for money back operations
    description: Create system costs for money back operations
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.money_back.system.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.system'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/payment_costs/money_back/merchant/{id}:
  get:
    tags:
      - Onboarding
    summary: Get merchant costs for money back operations
    description: Get merchant costs for money back operations
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: payment method name
        required: true
        schema:
          type: string
      - name: payout_currency
        in: query
        description: payout currency. 3 lettre code by ISO 4217
        required: true
        schema:
          type: string
      - name: undo_reason
        in: query
        description: 'money back type. available values: refund, reversal, chargeback'
        required: true
        schema:
          type: string
      - name: region
        in: query
        description: region name
        required: true
        schema:
          type: string
      - name: country
        in: query
        description: two-letter country code by ISO 3166-1
        schema:
          type: string
      - name: days
        in: query
        description: number of days after payment operation
        required: true
        schema:
          type: number
      - name: payment_stage
        in: query
        description: payment stage
        schema:
          type: number
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Onboarding
    summary: Create merchant costs for money back operations
    description: Create merchant costs for money back operations
    parameters:
      - name: id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.money_back.merchant.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
  delete:
    tags:
      - Onboarding
    summary: Delete merchant costs for money back operations
    description: Delete merchant costs for money back operations
    parameters:
      - name: id
        in: path
        description: merchant cost identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/channel/system/{id}:
  put:
    tags:
      - Onboarding
    summary: Update system costs for payment operations
    description: Update system costs for payment operations
    parameters:
      - name: id
        in: path
        description: cost record identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.payment.system.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.system'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
  delete:
    tags:
      - Onboarding
    summary: Delete system costs for payment operations
    description: Delete system costs for payment operations
    parameters:
      - name: id
        in: path
        description: system cost identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/money_back/system/{id}:
  put:
    tags:
      - Onboarding
    summary: Update system costs for money back operations
    description: Update system costs for money back operations
    parameters:
      - name: id
        in: path
        description: system cost identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.money_back.system.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.system'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
  delete:
    tags:
      - Onboarding
    summary: Delete system costs for money back operations
    description: Delete system costs for money back operations
    parameters:
      - name: id
        in: path
        description: system cost identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/payment_costs/channel/merchant/{merchant_id}/{cost_id}:
  put:
    tags:
      - Onboarding
    summary: Update merchant costs for payments operations
    description: Create merchant costs for payments operations
    parameters:
      - name: merchant_id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
      - name: cost_id
        in: path
        description: cost record unique identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.payment.merchant.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/payment_costs/money_back/merchant/{merchant_id}/{cost_id}:
  put:
    tags:
      - Onboarding
    summary: Update merchant costs for money back operations
    description: Update merchant costs for money back operations
    parameters:
      - name: merchant_id
        in: path
        description: merchant unique identifier
        required: true
        schema:
          type: string
      - name: cost_id
        in: path
        description: cost record unique identifier
        required: true
        schema:
          type: string
    requestBody:
      description: data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.cost.money_back.merchant.create'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/payout_documents:
  get:
    tags:
      - Payouts
    summary: Get list of payout documents, matched to filters (if any)
    description: Get list of payout documents, matched to filters (if any)
    parameters:
      - name: payout_document_id
        in: query
        description: payout document unique identifier
        schema:
          type: string
      - name: status
        in: query
        description: filter by document's status
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: merchant_id
        in: query
        description: filter by document's merchant
        schema:
          type: string
      - name: signed
        in: query
        description: filter only signed documents, if true
        schema:
          type: boolean
      - name: limit
        in: query
        description: limit documents per page
        schema:
          type: number
      - name: offset
        in: query
        description: offset documents per page
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payout_documents_list'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Payouts
    summary: Create a payout document POST JSON request
    description: Create a payout document POST JSON request
    requestBody:
      description: merchant identificator to create payout document for
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payout_documents_create'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/billingPayoutDocument'
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/payout_documents/{id}:
  get:
    tags:
      - Payouts
    summary: Get payout document by id
    description: Get payout document by id
    parameters:
      - name: id
        in: path
        description: payout document unique identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billingPayoutDocument'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Payouts
    summary: Update a payout document POST JSON request
    description: Update a payout document POST JSON request
    parameters:
      - name: id
        in: path
        description: payout document unique identifier
        required: true
        schema:
          type: string
    requestBody:
      description: update params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payout_documents_update'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/billingPayoutDocument'
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/products/:id/prices:
  get:
    tags:
      - Products
    summary: Get product prices
    description: Get product prices
    parameters:
      - name: id
        in: query
        description: id of product
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/product.Price'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    security:
      - XAPISignatureHeader: []
  put:
    tags:
      - Products
    summary: Set product prices
    description: Set product prices
    requestBody:
      description: price properties
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/product.PutPrice'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    security:
      - XAPISignatureHeader: []
    x-codegen-request-body-name: body
/admin/api/v1/products:
  get:
    tags:
      - Products
    summary: Get a list of products for a merchant in which the owner is an authorized
      user
    description: Get products list for authorised user
    parameters:
      - name: name
        in: query
        description: product name
        schema:
          type: string
      - name: sku
        in: query
        description: product sku
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of returning products. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset products per page
        schema:
          type: integer
      - name: project_id
        in: query
        description: project identifier for which need get products list
        schema:
          type: string
      - name: enabled
        in: query
        description: enabled status (all, true, false)
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/product'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Products
    summary: Create product with json request
    description: Create product
    requestBody:
      description: Product create data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/product.create_or_update'
      required: true
    responses:
      200:
        description: Created product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/products/{id}:
  get:
    tags:
      - Products
    summary: Get a product by it's id for authorised user
    description: Get a product by it's id for authorised user
    parameters:
      - name: id
        in: path
        description: Product identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  put:
    tags:
      - Products
    summary: Update product with json request
    description: Update product
    parameters:
      - name: id
        in: path
        description: Product identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Product create data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/product.create_or_update'
      required: true
    responses:
      200:
        description: Updated product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      400:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
  delete:
    tags:
      - Products
    summary: Delete product
    description: Delete product by it's id for authorised user
    parameters:
      - name: id
        in: path
        description: Product identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/products/merchant/{id}:
  get:
    tags:
      - Products
    summary: Get products list for any merchant
    description: Get products list for any merchant
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
      - name: name
        in: query
        description: product name
        schema:
          type: string
      - name: sku
        in: query
        description: product sku
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of returning products. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset products per page
        schema:
          type: integer
      - name: project_id
        in: query
        description: project identifier for which need get products list
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/product'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/projects:
  get:
    tags:
      - Project
    summary: List projects
    description: Get list of project for authenticated merchant
    parameters:
      - name: merchant_id
        in: query
        description: merchant identifier
        schema:
          type: string
      - name: quick_search
        in: query
        description: string to quick search by project name
        schema:
          type: string
      - name: status
        in: query
        description: array of project statuses
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: sort
        in: query
        description: fields list for sorting
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: limit
        in: query
        description: maximum number of returning records. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset from which you want to return the list of records. default
          value is 0
        schema:
          type: integer
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/model.Project'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Project
    summary: Create project
    description: Create new project for authenticated merchant
    requestBody:
      description: Creating project data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/projects.CreateRequest'
      required: true
    responses:
      201:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Project'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/projects/{id}:
  get:
    tags:
      - Project
    summary: Get project
    description: '"Get data about project"'
    parameters:
      - name: id
        in: path
        description: Project identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Project'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Project not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  delete:
    tags:
      - Project
    summary: Delete project
    description: Deactivation project for authenticated merchant
    parameters:
      - name: id
        in: path
        description: Project identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: string
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  patch:
    tags:
      - Project
    summary: Update project
    description: Update project for authenticated merchant
    parameters:
      - name: id
        in: path
        description: Project identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Project object with new data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/model.Project'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Project'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/projects/{id}/sku:
  post:
    tags:
      - Project
    summary: Check sku+project unique
    description: Update project for authenticated merchant
    parameters:
      - name: id
        in: path
        description: Project identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Project object with new data
      content:
        application/json:
          schema:
            type: object
            properties:
              sku:
                type: string
                example: my_awesome_sku_001
      required: true
    responses:
      200:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/platforms:
  get:
    tags:
      - Product
    summary: "Get available platform list"
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object
              properties:
                count:
                  type: integer
                platforms:
                  type: array
                  items:
                    $ref: '#/components/schemas/Platform'
      401:
        $ref: '#/components/responses/Unauthorized'
      403:
        $ref: '#/components/responses/Forbidden'
      500:
        $ref: '#/components/responses/InternalError'
/admin/api/v1/report_file:
  post:
    tags:
      - Report file
    summary: Create report file
    description: Create report file
    requestBody:
      description: report file params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/report_file.CreateReportFileParams'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: object
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/report_file/download/{file}:
  get:
    tags:
      - Report file
    summary: Download report file
    description: Download report file
    parameters:
      - name: file
        in: path
        description: filename
        required: true
        schema:
          type: string
      - name: file
        in: query
        description: identity of file and file type
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/pdf:
            schema:
              type: string
              format: binary
          text/csv:
            schema:
              type: string
              format: binary
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              type: string
              format: binary
      400:
        description: Invalid request data
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
          text/csv:
            schema:
              $ref: '#/components/schemas/model.Error'
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
          text/csv:
            schema:
              $ref: '#/components/schemas/model.Error'
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
          text/csv:
            schema:
              $ref: '#/components/schemas/model.Error'
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
          text/csv:
            schema:
              $ref: '#/components/schemas/model.Error'
          application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/royalty_reports:
  get:
    tags:
      - Royalty reports
    summary: Get a list of royalty reports, matching to filters
    description: Get a list of royalty reports, matching to filters
    parameters:
      - name: period_from
        in: query
        description: period start date
        schema:
          type: string
      - name: period_to
        in: query
        description: period end date
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of returning reports per page. default value is
          100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset reports per page
        schema:
          type: integer
      - name: merchant_id
        in: query
        description: merchant id
        schema:
          type: string
      - name: status[]
        in: query
        description: matching status list
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/grpcRoyaltyReportsPaginate'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/royalty_reports/{id}:
  get:
    tags:
      - Royalty reports
    summary: Get an royalty reports by it's id
    description: Get an royalty reports by it's id
    parameters:
      - name: id
        in: path
        description: Report identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/billingRoyaltyReport'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/royalty_reports/{id}/transactions:
  get:
    tags:
      - Royalty reports
    summary: Get a list of transactions, included in royalty report
    description: Get a list of transactions, included in royalty report
    parameters:
      - name: id
        in: path
        description: Report identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.list.public'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/royalty_reports/{id}/accept:
  post:
    tags:
      - Royalty reports
    summary: Accept royalty report by merchant
    description: Accept royalty report by merchant
    parameters:
      - name: id
        in: path
        description: Report identifier
        required: true
        schema:
          type: string
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/royalty_reports/{id}/decline:
  post:
    tags:
      - Royalty reports
    summary: Start royalty report dispute
    description: Start royalty report dispute
    parameters:
      - name: id
        in: path
        description: Report identifier
        required: true
        schema:
          type: string
    requestBody:
      description: dispute reason
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              dispute_reason:
                type: string
      required: false
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/royalty_reports/{id}/change:
  post:
    tags:
      - Royalty reports
    summary: Change royalty report
    description: Change royalty report
    parameters:
      - name: id
        in: path
        description: Report identifier
        required: true
        schema:
          type: string
    requestBody:
      description: changes
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/grpcChangeRoyaltyReport'
      required: false
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/admin/api/v1/taxes:
  get:
    tags:
      - Tax
    summary: List all available tax rates in the system
    description: List all available tax rates in the system
    parameters:
      - name: country
        in: query
        description: country to filter response
        schema:
          type: string
      - name: city
        in: query
        description: city to filter response
        schema:
          type: string
      - name: state
        in: query
        description: state to filter response
        schema:
          type: string
      - name: zip
        in: query
        description: zip to filter response
        schema:
          type: string
      - name: limit
        in: query
        description: maximum number of returning orders. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset from which you want to return the list of orders. default
          value is 0
        schema:
          type: integer
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/taxes.TaxRate'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Tax
    summary: Upsert tax rate data.
    description: Create or update tax rate data.
    requestBody:
      description: Object to upsert
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/taxes.TaxRate'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/taxes.TaxRate'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/admin/api/v1/taxes/{id}:
  delete:
    tags:
      - Tax
    summary: Delete tax rate object
    description: Mark tax rate object as deleted
    parameters:
      - name: id
        in: path
        description: tax rate object id
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: string
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/vat_reports/country/{country}:
  get:
    tags:
      - VAT reports
    summary: Get a VAT reports list by country
    description: Get a VAT reports list by country
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/grpcVatReportsPaginate'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/vat_reports/details/{id}:
  get:
    tags:
      - VAT reports
    summary: Get a VAT report transaction
    description: Get a VAT report transaction
    parameters:
      - name: id
        in: path
        description: VAT report id
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.list.public'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/admin/api/v1/vat_reports/status/{id}:
  post:
    tags:
      - VAT reports
    summary: Change a VAT report status
    description: Change a VAT report status
    parameters:
      - name: id
        in: path
        description: VAT report id
        required: true
        schema:
          type: string
    requestBody:
      description: status
      content:
        application/x-www-form-urlencoded:
          schema:
            type: object
            properties:
              status:
                type: string
      required: false
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/system/api/v1/merchant/{id}/tariffs:
  post:
    tags:
      - Onboarding
    summary: Set tariff rates to merchant
    description: Set tariff rates to merchant
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Tariff.Set.Request'
      required: true
    responses:
      200:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/system/api/v1/merchants:
  get:
    tags:
      - Onboarding
    summary: Get list of merchants
    description: Get list of merchants
    parameters:
      - name: quick_search
        in: query
        description: string to quick search by merchant name or user owner email
        schema:
          type: string
      - name: name
        in: query
        description: merchant name
        schema:
          type: string
      - name: is_signed
        in: query
        description: query parameter to return merchants with full signed agreement
        schema:
          type: boolean
      - name: last_payout_date_from
        in: query
        description: start date to filter merchants by last payout date. parameter
          format must be a unix timestamp
        schema:
          type: integer
      - name: last_payout_date_to
        in: query
        description: end date to filter merchants by last payout date. parameter format
          must be a unix timestamp
        schema:
          type: integer
      - name: last_payout_amount
        in: query
        description: last payout amount
        schema:
          type: integer
      - name: status
        in: query
        description: array of merchant statuses
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      - name: limit
        in: query
        description: maximum number of returning orders. default value is 100
        schema:
          type: integer
      - name: offset
        in: query
        description: offset from which you want to return the list of orders. default
          value is 0
        schema:
          type: integer
      - name: sort[]
        in: query
        description: fields list for sorting
        schema:
          type: string
      - name: registration_date_from
        in: query
        description: start date to filter merchants by owner regiatration date. unix
          timestamp value in seconds
        schema:
          type: integer
      - name: registration_date_to
        in: query
        description: end date to filter merchants by owner regiatration date. unix
          timestamp value in seconds
        schema:
          type: integer
      - name: received_date_from
        in: query
        description: start date to filter merchants by date when licanse agreement
          was signed by merchant owner. unix timestamp value in seconds
        schema:
          type: integer
      - name: received_date_to
        in: query
        description: end date to filter merchants by date when licanse agreement was
          signed by merchant owner. unix timestamp value in seconds
        schema:
          type: integer
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/merchants/{id}:
  get:
    tags:
      - Onboarding
    summary: Get merchant by identifier
    description: Get list of merchants
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/merchants/{merchant_id}/notifications:
  get:
    tags:
      - Onboarding
    summary: Get list of notifications to merchant
    description: Get list of notifications to merchant
    parameters:
      - name: merchant_id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
      - name: user
        in: query
        description: user who sent notification
        schema:
          type: string
      - name: is_system
        in: query
        description: 'flag to filter return notification: 0 - return only notification;
        1 - return only history'
        schema:
          type: integer
      - name: limit
        in: query
        description: limit of returning records
        schema:
          type: integer
      - name: offset
        in: query
        description: offset of returning records
        schema:
          type: integer
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/onboarding.Merchant.Notifications'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Onboarding
    summary: Create new notification
    description: Create new notification
    parameters:
      - name: merchant_id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: Notification data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Merchant.Notification.CreateRequest'
      required: true
    responses:
      201:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.Notification'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/system/api/v1/merchants/{merchant_id}/agreement:
  get:
    tags:
      - Onboarding
    summary: Generate agreement
    description: Generate agreement for merchant and return data about printable
      agreement
    parameters:
      - name: merchant_id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.PrintableAgreementData.Response'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/merchants/{merchant_id}/agreement/document:
  get:
    tags:
      - Onboarding
    summary: Download merchant agreement
    description: Download merchant agreement
    parameters:
      - name: merchant_id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/pdf:
            schema:
              type: string
              format: binary
      400:
        description: Invalid request data
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/pdf:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/merchants/{merchant_id}/agreement/signature:
  put:
    tags:
      - Onboarding
    summary: Get data to sign agreement
    description: Get data to sign license agreement with hellosign api
    parameters:
      - name: merchant_id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.merchant.signatureResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/merchants/{id}/company:
  put:
    tags:
      - Onboarding
    summary: Set company information
    description: Set company information
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Company'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/system/api/v1/merchants/{id}/contacts:
  put:
    tags:
      - Onboarding
    summary: Set contacts information
    description: Set contacts information
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Contacts'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/system/api/v1/merchants/{id}/banking:
  put:
    tags:
      - Onboarding
    summary: Set banking information
    description: Set banking information
    parameters:
      - name: id
        in: path
        description: merchant identifier
        required: true
        schema:
          type: string
    requestBody:
      description: request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/onboarding.Banking'
      required: true
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: data
/system/api/v1/merchants/{id}/set_operating_company:
  post:
    tags:
      - Onboarding
    summary: Set merchant operating company
    description: Set merchant operating company
    parameters:
      - name: id
        in: path
        description: merchant id
        required: true
        schema:
          type: string
    requestBody:
      description: status
      content:
        application/json:
          schema:
            type: object
            properties:
              operating_company_id:
                type: string
                description: id of operation company for which this cost is applicable
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/system/api/v1/payment_method:
  post:
    tags:
      - Payment method
    summary: Create a payment method for payment system
    description: Create a payment method for payment system
    requestBody:
      description: product method properties
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment_method.PostProductMethod'
      required: false
    responses:
      200:
        description: OK
        content:
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/payment_method.ChangePaymentMethodResponse'
      400:
        description: Error description
        content:
          text/html:
            schema:
              type: string
    x-codegen-request-body-name: body
/system/api/v1/payment_method/{id}:
  put:
    tags:
      - Payment method
    summary: Update a payment method for payment system
    description: Update a payment method for payment system
    parameters:
      - name: id
        in: path
        description: paymentmethod identifier
        required: true
        schema:
          type: string
    requestBody:
      description: product method properties
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment_method.PutProductMethod'
      required: false
    responses:
      200:
        description: OK
        content:
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/payment_method.ChangePaymentMethodResponse'
      400:
        description: Error description
        content:
          text/html:
            schema:
              type: string
    x-codegen-request-body-name: body
/system/api/v1/payment_method/{id}/production:
  get:
    tags:
      - Payment method
    summary: Get production settings to the payment method
    description: Get production settings to the payment method
    parameters:
      - name: id
        in: path
        description: payment method identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/payment_method.PaymentMethodParams'
      400:
        description: Error description
        content:
          text/html:
            schema:
              type: string
  put:
    tags:
      - Payment method
    summary: Update production settings to the payment method
    description: Update production settings to the payment method
    parameters:
      - name: id
        in: path
        description: payment method identifier
        required: true
        schema:
          type: string
    requestBody:
      description: payment method params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment_method.UpdatePaymentMethodParams'
      required: false
    responses:
      200:
        description: OK
        content:
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/payment_method.ChangePaymentMethodParamsResponse'
      400:
        description: Error description
        content:
          text/html:
            schema:
              type: string
    x-codegen-request-body-name: body
  post:
    tags:
      - Payment method
    summary: Add production settings to the payment method
    description: Add production settings to the payment method
    parameters:
      - name: id
        in: path
        description: paymentmethod identifier
        required: true
        schema:
          type: string
    requestBody:
      description: payment method params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/payment_method.UpdatePaymentMethodParams'
      required: false
    responses:
      200:
        description: OK
        content:
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/payment_method.ChangePaymentMethodParamsResponse'
      400:
        description: Error description
        content:
          text/html:
            schema:
              type: string
    x-codegen-request-body-name: body
  delete:
    tags:
      - Payment method
    summary: Delete production settings to the payment method
    description: Delete production settings to the payment method
    parameters:
      - name: id
        in: path
        description: payment method identifier
        required: true
        schema:
          type: string
      - name: currency_a3
        in: query
        description: code of currency
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          text/html:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/payment_method.ChangePaymentMethodParamsResponse'
      400:
        description: Error description
        content:
          text/html:
            schema:
              type: string
/system/api/v1/operating_company:
  get:
    tags:
      - Operating company
    summary: Get operating companies list
    description: Get operating companies list
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/operating_company_list'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Operating company
    summary: Add new operating company
    description: Add new operating company
    requestBody:
      description: new operating company params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/operating_company'
      required: false
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/system/api/v1/operating_company/{id}:
  get:
    tags:
      - Operating company
    summary: Get operating company
    description: Get operating company
    parameters:
      - name: id
        in: path
        description: operating company id
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/operating_company'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  post:
    tags:
      - Operating company
    summary: Add new operating company
    description: Add new operating company
    parameters:
      - name: id
        in: path
        description: operating company id
        required: true
        schema:
          type: string
    requestBody:
      description: updating operating company params
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/operating_company'
      required: false
    responses:
      204:
        description: OK
        content: {}
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/system/api/v1/user/profile/{id}:
  get:
    tags:
      - User profile
    summary: Get user profile by proifile identifier
    description: Get user profile by profile identifier
    parameters:
      - name: id
        in: path
        description: profile identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userProfile.response'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      404:
        description: Object not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Some unknown error on server side
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/users/invite:
  post:
    tags:
      - Admin user roles
    summary: Send invitation for admin user
    description: Send invitation to add user as administrator
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InviteUserAdmin'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/system/api/v1/users:
  get:
    tags:
      - Admin user roles
    summary: List of admin users
    description: List of admin users
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListUsersResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/users/resend:
  post:
    tags:
      - Admin user roles
    summary: Resend invitation for admin user
    description: Resend invitation to add user as administrator
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResendInviteAdmin'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
/system/api/v1/users/roles:
  get:
    tags:
      - Admin user roles
    summary: List of admin role types
    description: List of admin role types
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListRoleType'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
/system/api/v1/users/roles/{role_id}:
  get:
    tags:
      - Admin user roles
    summary: Get admin user role
    description: Get admin user role
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRoleResponse'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
  put:
    tags:
      - Admin user roles
    summary: Update admin user role
    description: Update admin user role
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    requestBody:
      description: JSON request body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUserRoleRequest'
      required: false
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
    x-codegen-request-body-name: body
  delete:
    tags:
      - Admin user roles
    summary: Delete admin user
    description: Delete admin user
    parameters:
      - name: role_id
        in: path
        description: User role identifier
        required: true
        schema:
          type: string
    responses:
      200:
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmptyResponseWithStatus'
      400:
        description: Invalid request data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      401:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      403:
        description: Access denied
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'
      500:
        description: Object with error message
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Error'