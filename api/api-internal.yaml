openapi: 3.0.1
info:
  title: PaySuper internal API specification
  description: PaySuper internal API specification
  license:
    name: GPL v3
    url: https://www.gnu.org/licenses/gpl-3.0
  version: "1.0"
servers:
  - url: https://api.pay.super.com
    description: Production server (uses live data)
  - url: https://p1payapi.tst.protocol.one
    description: Sandbox server (uses test data)
tags:
  - name: Admin user roles
  - name: Balance
  - name: Country
  - name: Dashboard
  - name: Key
  - name: Limits
  - name: Merchant user roles
  - name: Onboarding
  - name: Operating company
  - name: Order
    description: |
      You can create a payment order with details about your customer and sales option data.
  
      ### Statuses
  
      |Name|Description|
      |---|---|
      |`created`|It’s an initial state of the requested order but it is not processed in a payment system yet. The `created` order can become one of the statuses: `processed`, `canceled`, `rejected`.|
      |`processed`|The order is successfully processed in the payment system. The `processed` order can become `refunded` or `chargeback`.|
      |`rejected`|The order is rejected by a payment system with any reasons.|
      |`canceled`|The order is canceled by a user.|
      |`refunded`|The processed order is refunded by a merchant request.|
      |`chargeback`|The processed order is refunded by a payment system with any reasons.|
  
      > The Order object example:
  
      ```json
      {
        "id": "726d9e07-1dc8-4159-8d52-f95941066bc8",
        "transaction": "2978077",
        "object": "order",
        "status": "created",
        "description": "A summary for the purchase",
        "created_at": "2019-07-10T14:27:54.691Z",
        "canceled": false,
        "cancellation": null,
        "refunded": false,
        "receipt_email": "user.email@example.com",
        "receipt_phone": "",
        "receipt_number": "",
        "receipt_url": "https://dashboard.pay.super.com/receipt/purchase/efefc5d3-c2e2-415",
        "agreement_version": "",
        "agreement_accepted": false,
        "notify_sale": false,
        "notify_sale_email": "",
        "issuer": {
            "url": "https://domain.com",
            "embedded": false,
            "reference": "",
            "reference_type": "",
            "utm_source": "",
            "utm_medium": "",
            "utm_campaign": "",
            "referrer_host": "domain.com"
        },
        "amount": 595,
        "currency": "RUB",
        "user": {
            "id": "5dcf8b24b5a6990001bac2b6",
            "object": "user",
            "external_id": "0000000000001",
            "name": "User Name",
            "email": "user.email@example.com",
            "email_verified": true,
            "phone": "0639597531",
            "phone_verified": true,
            "ip": "79.137.163.2",
            "locale": "ru-RU",
            "address": {
              "country": "RU",
              "city": "Moscow",
              "postal_code": "127221",
              "state": "MOW"
            },
            "metadata": {
              "user.param1": "user.val1",
              "user.param2": "user.val2",
              "user.param3": "user.val3"
            },
            "notify_new_region": false,
            "notify_new_region_email": ""
        },
        "billing_address": {
            "country": "DE"
        },
        "tax": {
            "type": "vat",
            "rate": 0.19,
            "amount": 95,
            "currency": "RUB"
        },
        "method": {
            "title": "Bank card",
            "external_id": "BANKCARD",
            "payment_system_id": "5be2d0b4b0b30d0007383ce5",
            "saved": false,
            "card": {
              "first6": "400000",
              "last4": "0002",
              "masked": "400000...0002",
              "expiry_month": "11",
              "expiry_year": "2023",
              "brand": "VISA",
              "fingerprint": "$2a$04$9VRouYlBC.qMYQrLpmlXOeGbL2WFZDGGq/KdTeeHSfWkosgJgrWw2",
              "secure3d": true
            },
            "wallet": null,
            "crypto_currency": null,
            "refund_allowed": true
        },
        "items": null,
        "refund": null,
        "metadata": {
            "param1": "val1",
            "param2": "val2",
            "param3": "val3"
        },
        "original_amount": 500,
        "country": "DE",
        "type": "simple",
        "platform_id": "",
        "receipt_id": "efefc5d3-c2e2-4157-8789-4bfb7c1eec34",
        "virtual_currency_amount": 0,
        "is_buy_for_virtual_currency": false
      }
      ```
  
      ### The Order object:
  
      |Attribute|Type|Description|
      |---|---|---|
      |`id`|string|The unique identifier for the object.|
      |`transaction`|string|The unique identifier for the transaction in the payment system.|
      |`object`|string|The string representing the object’s type. Value: `order`.|
      |`status`|string|The current status of the order.|
      |`description`|string|An arbitrary string attached to the object. If this field was not sent, the PaySuper generates it automatically.|
      |`created_at`|string|The date and time in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) at which the order was created.|
      |`canceled_at`|string|The date and time in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) at which the order was cancelled.|
      |`canceled`|boolean|Has the value `true` if the current order was canceled.|
      |`cancellation`|object|The cancellation reason. Has the value `null` if the order is not canceled.|
      |`· code`|string|The cancellation reason code.|
      |`· reason`|string|The cancellation description.|
      |`refunded`|boolean|Has the value `true` if the current order was refunded.|
      |`refunded_at`|string|The date and time in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) at which the order was refunded.|
      |`receipt_email`|string|The customer's email for receipt information.|
      |`receipt_phone`|string|The customer's phone for receipt information.|
      |`receipt_number`|string|The unique identifier for a receipt. Has a non-empty value if the order has `refunded` status.|
      |`receipt_url`|string|The URL in PaySuper service for online access to the receipt.|
      |`agreement_version`|string|The EULA agreement accepted by payment.|
      |`agreement_accepted`|boolean|Has the value `true` if the agreement was accepted.|
      |`notify_sale`|boolean|Has the value `true` if a user confirmed to be informed about feature sales or discounts.|
      |`notify_sale_email`|string|The customer's email for sales or discounts.|
      |`issuer`|object|Details about an issuer.|
      |`· url`|string|The referer URL.|
      |`· embedded`|boolean|Has the value `true` if the PaySuper form was embedded to collect payment.|
      |`· reference`|string|The unique identifier of an entity linked to the order, for instance `paylink ID`.|
      |`· reference_type`|string|The type of an entity linked to the order, for instance `paylink`.|
      |`· utm_source`|string|The UTM-tag of the advertising system, for example: Bing Ads, Google Adwords.|
      |`· utm_medium`|string|The UTM-tag of the traffic type, e.g.: cpc, cpm, email newsletter.|
      |`· utm_campaign`|string|The UTM-tag of the advertising campaign, for example: Online games, Simulation game.|
      |`· referrer_host`|string|The host of the referrer URL.|
      |`amount`|float|The total amount for the order. A positive float with two decimal points (e.g., 1.00 to charge $1.00).|
      |`currency`|string|The currency for the order. Three-letter Currency Code ISO 4217, in uppercase.|
      |`user`|object|Details about a customer.|
      |`· id`|string|The user unique identifier on the PaySuper side.|
      |`· object`|string|The string representing the object’s type. Value: `user`.|
      |`· external_id`|string|The user unique identifier in the merchant project.|
      |`· name`|string|The user's name.|
      |`· email`|string|The user's email.|
      |`· email_verified`|boolean|Whether the user’s email address has been verified in the merchant project.|
      |`· phone`|string|The user’s phone number.|
      |`· phone_verified`|boolean|Whether the user’s phone number has been verified in the merchant project.|
      |`· ip`|string|	The user’s IP address.|
      |`· locale`|string|The user’s locale name. Four-letter language code by ISO 639, for instance en-US.|
      |`· address`|object|Details about a user's address.|
      |`·· country`|string|The user’s country. Two-letter language code by ISO 3166-1, in uppercase.|
      |`·· city`|string|The user’s city.|
      |`·· postal_code`|string|The user’s postal code.|
      |`·· state`|string|The user’s state code by ISO 3166-2.|
      |`· metadata`|string|A key-value description that you can attach to the user object. It can be useful for storing additional information about your customer's payment. The key and value have the string type.|
      |`· notify_new_region`|boolean|Has the value `true` if a user confirmed to receive the PaySuper newsletter about the beginning of payment acceptance in new regions.|
      |`· notify_new_region_email`|string|The customer's email for a newsletter about the beginning of payment acceptance in new regions.|
      |`billing_address`||Details about a user's billing addres. Has a non-empty value if the user was asked to fill it on a payment form. For all countries has a `country` value and for the USA has `country`, `state` and `zip`.|
      |`· country`|string|The user's country. Two-letter language code by ISO 3166-1, in uppercase.|
      |`tax`|object|Details about a tax.|
      |`· type`|string|The tax type (Sales tax for USA, VAT for EU and Russia).|
      |`· rate`|float|The current user's location taxes. A positive float with two decimal points.|
      |`· amount`|float|The tax amount. A positive float with two decimal points (e.g., 1.00 to charge $1.00).|
      |`· currency`|string|The currency for the tax. Three-letter Currency Code ISO 4217, in uppercase.|
      |`method`||Details about a payment method.|
      |`· title`|string|The human readable method name.|
      |`· external_id`|string|The unique identifier of the payment method.|
      |`· payment_system_id`|string|The unique identifier of payment system on the PaySuper side.|
      |`· saved`|boolean|Has a value `true` if a payment method was saved by a user for a future usage.|
      |`· card`|object|Details about a user's card.|
      |`·· first6`|string|The first 6 digits of the card. Available only for a card method.|
      |`·· last4`|string|The last 4 digits of the card. Available only for a card method.|
      |`·· masked`|string|The mask for a user's card. Available only for a card method.|
      |`·· expiry_month`|string|The validity month of the card. Available only for a card method.|
      |`·· expiry_year`|string|The validity year of the card. Available only for a card method.|
      |`·· brand`|string|The brand of the card issuer. Available only for a card method.|
      |`·· fingerprint`|string|The internal fingerprint for given card. Available only for a card method.|
      |`·· secure3d`|string|Has a value `true` if 3D-secure was used during payment. Available only for a card method.|
      |`· wallet`|object|The name of the wallet. Available only for an integrated wallet payment systems.|
      |`·· brand`|string|The name of the wallet.|
      |`·· account`|string|The customer identity in the wallet.|
      |`· crypto_currency`|object|The name of the crypto currency. Available only for a crypto currency.|
      |`·· brand`|string|The name of the crypto currency.|
      |`·· address`|string|The customer's address in the crypto currency.|
      |`· refund_allowed`|boolean|Has a value `true` if a refund is allowed.|
      |`items`|object[]|An array of OrderItem objects associated with current Order.|
      |`· id`|string|The unique identifier of the object.|
      |`· sku`|string|The stock keeping unit.|
      |`· name`|string|A localized name of the object.|
      |`· description`|string|A localized description of the object.|
      |`· images`|string[]|Image urls associated with the object.|
      |`· metadata`|object|A set of key-value pairs that attached to an object on creating a product.|
      |`· code`|string|An activation code of the object. Can be ommited if the order is not processed or type of the order does not equal `key`.|
      |`· platform`|string|A platform for an activation code. Can be ommited if the order is not processed or type of the order does not equal `key`.|
      |`refund`|object|Details about a refund.|
      |`· amount`|float|The refund amount. A positive float with two decimal points (e.g., 1.00 to charge $1.00).|
      |`· currency`|string|The currency for the tax. Three-letter Currency Code ISO 4217, in uppercase.|
      |`· reason`|string|The refund reason.|
      |`· code`|string|The PaySuper internal identity for the refund reason.|
      |`· receipt_number`|string|The unique identifier of the refund receipt.|
      |`· receipt_url`|string|The URL in PaySuper service for online access to given refund receipt.|
      |`metadata`|object|A set of key-value pairs of description that you can attach to the order object. It can be useful for storing additional information about your customer payment..|
      |`original_amount`|float|The order amount excluding any taxes and commissions.|
      |`country`|string|Two-letter language code by ISO 3166-1, in uppercase.|
      |`type`|string|The order type. It depends on your sales option (Game Keys, Virtual Items, the simple checkout). For products created as Game Keys use the `key` type, as Virtual Items - the `product` type, for a simple checkout - the `simple` type. **Enum values:** key, products, simple.|
      |`platform_id`|string|The default platform identifier for which customer buys the in-game key. This field used only for a payment type `key`. **Enum values:** steam, gog, uplay, origin, psn, xbox, nintendo, itch, egs.|
      |`receipt_id`|string|The receipt unique identifier.|
      |`virtual_currency_amount`|float|The virtual currancy amount for the order.|
      |`is_buy_for_virtual_currency`|boolean|Has a value `true` if the order created for a virtual currency.|
  - name: Report file
  - name: Royalty reports
  - name: Payment links
  - name: Payment method
  - name: Payment order
  - name: Payouts
  - name: Pricing
  - name: Price group
  - name: Project
  - name: Product
  - name: Products
  - name: Public
  - name: Saved card
  - name: Token
    description: |
        A token is an encrypted string that represents certain details of your customer (such as the user ID, email and others), a game and purchase parameters.
  - name: Tax
  - name: VAT reports
  - name: User
  - name: User profile
paths:
  /admin/api/v1/balance:
    get:
      tags:
        - Balance
      summary: Get balance for current user's merchant
      description: Get balance for current user's merchant
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/merchant_balance'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/balance/{merchant_id}:
    get:
      tags:
        - Balance
      summary: Get balance for merchant with id passed in url
      description: Get balance for merchant with id passed in url
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/merchant_balance'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/keys/:key_id:
    get:
      tags:
        - Key
        - Onboarding
      summary: Get info about key by ID
      parameters:
        - name: key_id
          in: path
          description: "Key ID"
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/key-products:
    get:
      tags:
        - Product
      summary: "Get list of key products"
      parameters:
        - name: project_id
          in: query
          description: "Project ID"
          required: false
          schema:
            type: string
        - name: "name"
          in: query
          description: "Filter by name"
          required: false
          schema:
            type: string
        - name: "offset"
          in: query
          description: "Offset list"
          required: false
          schema:
            type: number
        - name: "limit"
          in: query
          description: "Limit list count"
          required: false
          schema:
            type: number
      responses:
        200:
          description: Return list of key products for user
          content:
            application/json:
              schema:
                type: object
                properties:
                  total_count:
                    type: integer
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalError'
    post:
      tags:
        - Product
      summary: "Create new key product"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeyProduct'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/key-products/:key_product_id/publish:
    post:
      tags:
        - Product
      summary: Publishes product
      parameters:
        - name: key_product_id
          in: path
          description: "Key Product ID"
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/key-products/:key_product_id/unpublish:
    post:
      tags:
        - Product
      summary: Set key product inactive
      parameters:
        - name: key_product_id
          in: path
          description: "Key Product ID"
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/key-products/:key_product_id:
    delete:
      tags:
        - Product
      summary: "Change product"
      parameters:
        - name: key_product_id
          in: path
          description: "Key Product ID"
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
    put:
      tags:
        - Product
      summary: "Change product"
      parameters:
        - name: key_product_id
          in: path
          description: "Key Product ID"
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateKeyProduct'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
    get:
      tags:
        - product
      summary: "Get product by id"
      parameters:
        - name: key_product_id
          in: path
          description: "Key Product ID"
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyProduct'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/key-products/:key_product_id/platforms/:platform_id/count:
    get:
      tags:
        - Key
        - Onboarding
      summary: Gets count of keys for specified platform and product
      parameters:
        - $ref: '#/components/parameters/KeyProduct'
        - $ref: '#/components/parameters/Platform'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeysCountResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/key-products/:key_product_id/platforms/:platform_id/file:
    post:
      tags:
        - Key
        - Onboarding
      summary: Send file with keys to process
      parameters:
        - $ref: '#/components/parameters/KeyProduct'
        - $ref: '#/components/parameters/Platform'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeysProcessed'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/merchants:
    patch:
      tags:
        - Onboarding
      summary: Change merchant information
      description: Change merchant agreement information
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data for change
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.ChangeAgreementDataRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/{id}/change-status:
    put:
      tags:
        - Onboarding
      summary: Change merchant status
      description: Change merchant status
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Data required to change status
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.ChangeStatus'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/manual_payout/enable:
    put:
      tags:
        - Onboarding
      summary: Enable merchant manual payouts
      description: Enable merchant manual payouts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/manual_payout/disable:
    put:
      tags:
        - Onboarding
      summary: Disable merchant manual payouts
      description: Disable merchant manual payouts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/notifications:
    get:
      tags:
        - Onboarding
      summary: Get list of notifications to merchant
      description: Get list of notifications to merchant
      parameters:
        - name: user
          in: query
          description: user who sent notification
          schema:
            type: string
        - name: is_system
          in: query
          description: 'flag to filter return notification: 0 - return only notification;
          1 - return only history'
          schema:
            type: integer
        - name: limit
          in: query
          description: limit of returning records
          schema:
            type: integer
        - name: offset
          in: query
          description: offset of returning records
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/onboarding.Merchant.Notifications'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/notifications/{notification_id}:
    get:
      tags:
        - Onboarding
      summary: Get notification by identifier
      description: Get notification by identifier
      parameters:
        - name: notification_id
          in: path
          description: notification identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant.Notification'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/notifications/{notification_id}/mark-as-read:
    put:
      tags:
        - Onboarding
      summary: Mark notification as readed
      description: Mark notification as readed
      parameters:
        - name: notification_id
          in: path
          description: notification identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant.Notification'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/{id}/agreement-type:
    patch:
      tags:
        - Onboarding
      summary: Set merchant agreement type
      description: Set merchant agreement type
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data to change agreement type
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.ChangeAgreementType.Request'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/agreement:
    get:
      tags:
        - Onboarding
      summary: Generate agreement
      description: Generate agreement for merchant and return data about printable
        agreement
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant.PrintableAgreementData.Response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/agreement/document:
    get:
      tags:
        - Onboarding
      summary: Download merchant agreement
      description: Download merchant agreement
      responses:
        200:
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/agreement/signature:
    put:
      tags:
        - Onboarding
      summary: Get data to sign agreement
      description: Get data to sign license agreement with hellosign api
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.merchant.signatureResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/company:
    put:
      tags:
        - Onboarding
      summary: Set company information
      description: Set company information
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Company'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/contacts:
    put:
      tags:
        - Onboarding
      summary: Set contacts information
      description: Set contacts information
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Contacts'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/banking:
    put:
      tags:
        - Onboarding
      summary: Set banking information
      description: Set banking information
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Banking'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/tariffs:
    get:
      tags:
        - Onboarding
      summary: Get tariff rates
      description: Get tariff rates
      parameters:
        - name: region
          in: query
          description: 'merchant home region name. possible values: asia, europe, latin_america,
            russia_and_cis, worldwide'
          required: true
          schema:
            type: string
        - name: payer_region
          in: query
          description: 'payer possible region name. possible values: asia, europe, latin_america,
            russia_and_cis, worldwide'
          schema:
            type: string
        - name: min_amount
          in: query
          description: payment min amount
          schema:
            type: number
        - name: max_amount
          in: query
          description: payment max amount
          schema:
            type: number
        - name: merchant_operations_type
          in: query
          description: merchant operations type. possible values are low-risk, high-risk
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/onboarding.Tariff'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Onboarding
      summary: Set tariff rates to merchant
      description: Set tariff rates to merchant
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Tariff.Set.Request'
        required: true
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/merchants/status:
    get:
      tags:
        - Onboarding
      summary: Get data fill status
      description: Get data fill status
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.merchant.fillStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/dashboard/main:
    get:
      tags:
        - Dashboard
      summary: Get main reports data for dashboard
      description: 'Get main reports dashboard block data, ie. next reports: gross
        revenue, total transactions, VAT, ARPU'
      parameters:
        - name: id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: 'period name. now possible next values: current_month, previous_month,
          current_quarter, previous_quarter, current_year, previous_year'
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard.main_reports'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/dashboard/revenue_dynamics:
    get:
      tags:
        - Dashboard
      summary: Get revenue dynamic report for dashboard
      description: Get revenue dynamic report for dashboard
      parameters:
        - name: id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: 'period name. now possible next values: current_month, previous_month,
          current_quarter, previous_quarter, current_year, previous_year'
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard.revenue_dynamics'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/dashboard/base:
    get:
      tags:
        - Dashboard
      summary: Get base reports data for dashboard
      description: 'Get base reports dashboard block data, ie. next reports: revenue
        by country, sales today, sources'
      parameters:
        - name: id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
        - name: period
          in: query
          description: 'period name. now possible next values: current_day, previous_day,
          current_week, previous_week, current_month, previous_month, current_quarter,
          previous_quarter, current_year, previous_year'
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dashboard.base'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/invite:
    post:
      tags:
        - Merchant user roles
      summary: Send invitation for merchant user
      description: Send invitation to add user as merchant user
      requestBody:
        description: JSON request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserMerchant'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/merchants/users/resend:
    post:
      tags:
        - Merchant user roles
      summary: Resend invitation for merchant user
      description: Resend invitation to add user as merchant user
      requestBody:
        description: JSON request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendInviteMerchant'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseWithStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/merchants/users:
    get:
      tags:
        - Merchant user roles
      summary: List of merchant users
      description: List of merchant users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/users/roles/{role_id}:
    get:
      tags:
        - Merchant user roles
      summary: Get merchant user role
      description: Get merchant user role
      parameters:
        - name: role_id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    put:
      tags:
        - Merchant user roles
      summary: Update merchant user role
      description: Update merchant user role
      parameters:
        - name: role_id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
      requestBody:
        description: JSON request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRoleRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseWithStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Merchant user roles
      summary: Delete merchant user
      description: Delete merchant user
      parameters:
        - name: role_id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseWithStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/merchants/roles:
    get:
      tags:
        - Merchant user roles
      summary: List of merchant role types
      description: List of merchant role types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleType'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/order:
    get:
      tags:
        - Order
      summary: Get orders
      description: Get orders list
      parameters:
        - name: id
          in: query
          description: order unique identifier
          schema:
            type: string
        - name: project[]
          in: query
          description: query array of list of projects to get orders filtered by they
          schema:
            type: string
        - name: payment_method[]
          in: query
          description: query array of list of payment methods to get orders filtered
            by they
          schema:
            type: string
        - name: country[]
          in: query
          description: query array of list of payer countries to get orders filtered
            by they
          schema:
            type: string
        - name: status[]
          in: query
          description: query array of list of orders statuses to get orders filtered
            by they
          schema:
            type: integer
        - name: account
          in: query
          description: payer account on the any side of payment process. for example
            it may be account in project, account in payment system, payer email and
            etc
          schema:
            type: string
        - name: pm_date_from
          in: query
          description: start date when payment was closed to get orders filtered by
            they
          schema:
            type: integer
        - name: pm_date_to
          in: query
          description: end date when payment was closed to get orders filtered by they
          schema:
            type: integer
        - name: project_date_from
          in: query
          description: start date when payment was created to get orders filtered by
            they
          schema:
            type: integer
        - name: project_date_to
          in: query
          description: end date when payment was closed in project to get orders filtered
            by they
          schema:
            type: integer
        - name: limit
          in: query
          description: maximum number of returning orders. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from which you want to return the list of orders. default
            value is 0
          schema:
            type: integer
        - name: sort[]
          in: query
          description: query array of fields list for sorting
          schema:
            type: string
        - name: quick_search
          in: query
          description: multiple field search string - order unique identifier, user
            external identifier, project order identifier, project name, payment method
            name
          schema:
            type: string
        - name: merchant
          in: query
          description: query array of merchant identifier list
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.list.public'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/order/{id}:
    get:
      tags:
        - Order
      summary: Get order data
      description: Get full object with order data
      parameters:
        - name: id
          in: path
          description: Order unique identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.public'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/order/{order_id}/refunds:
    get:
      tags:
        - Order
      summary: Get list of refunds to order
      description: Get list of refunds to order
      parameters:
        - name: order_id
          in: path
          description: order identifier
          required: true
          schema:
            type: string
        - name: limit
          in: query
          description: count of records to need to return
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: number of record which must be first in listing
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/order.Refund'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Order
      summary: Create new refund to order
      description: Create new refund to order
      parameters:
        - name: order_id
          in: path
          description: order identifier
          required: true
          schema:
            type: string
      requestBody:
        description: refund data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/order.Refund.CreateRequest'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.Refund'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/order/{order_id}/refunds/{refund_id}:
    get:
      tags:
        - Order
      summary: Get refund data
      description: Get refund data
      parameters:
        - name: order_id
          in: path
          description: order identifier
          required: true
          schema:
            type: string
        - name: refund_id
          in: path
          description: refund identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.Refund'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/order/{order_id}/replace_code:
    put:
      tags:
        - Order
      summary: Replaces activation code in order
      description: Replaces activation code in order
      parameters:
        - name: order_id
          in: path
          description: order identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Order change request
        content:
          application/json:
            schema:
              type: object
              properties:
                key_product_id:
                  type: string
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.public'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/paylinks:
    get:
      tags:
        - Payment links
      summary: Get a list of payment links for current authenticated merchant
      description: Get a list of payment links for current authenticated merchant
      parameters:
        - name: limit
          in: query
          description: maximum number of returning orders. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from which you want to return the list of orders. default
            value is 0
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpcPaylinksPaginate'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Payment links
      summary: Create payment link with json request
      description: Create payment link use POST JSON request
      requestBody:
        description: Payment link create data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPaylinkRequest'
        required: true
      responses:
        200:
          description: Object which contain created payment link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkPaylink'
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/paylinks/{id}:
    get:
      tags:
        - Payment links
      summary: Get a payment link by id for current authenticated merchant
      description: Get a payment link by id for current authenticated merchant
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkPaylink'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    put:
      tags:
        - Payment links
      summary: Create payment link with json request
      description: Create payment link use POST JSON request
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Payment link create data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPaylinkRequest'
        required: true
      responses:
        200:
          description: Object which contain created payment link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkPaylink'
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
    delete:
      tags:
        - Payment links
      summary: Delete a payment link by id for current authenticated merchant
      description: Delete a payment link by id for current authenticated merchant
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/paylinks/{id}/url:
    get:
      tags:
        - Payment links
      summary: Get a payment link url by id for current authenticated merchant
      description: Get a payment link url by id for current authenticated merchant
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/paylinks/{id}/dashboard/country:
    get:
      tags:
        - Payment links
      summary: Get a grouping stat by country for a payment link by its id for current
        authenticated merchant
      description: Get a grouping stat by country for a payment link by its id for
        current authenticated merchant
      parameters:
        - name: id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
        - name: period_from
          in: query
          description: period start date in unix timestamp format
          schema:
            type: number
        - name: period_to
          in: query
          description: period end date in unix timestamp format
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkGroupStatCommon'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/paylinks/{id}/dashboard/referrer:
    get:
      tags:
        - Payment links
      summary: Get a grouping stat by referrer for a payment link by its id for current
        authenticated merchant
      description: Get a grouping stat by referrer for a payment link by its id for
        current authenticated merchant
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
        - name: period_from
          in: query
          description: period start date in unix timestamp format
          schema:
            type: number
        - name: period_to
          in: query
          description: period end date in unix timestamp format
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkGroupStatCommon'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/paylinks/{id}/dashboard/date:
    get:
      tags:
        - Payment links
      summary: Get a grouping stat by date for a payment link by its id for current
        authenticated merchant
      description: Get a grouping stat by date for a payment link by its id for current
        authenticated merchant
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
        - name: period_from
          in: query
          description: period start date in unix timestamp format
          schema:
            type: number
        - name: period_to
          in: query
          description: period end date in unix timestamp format
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkGroupStatCommon'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/paylinks/{id}/dashboard/utm:
    get:
      tags:
        - Payment links
      summary: Get a grouping stat by utm for a payment link by its id for current
        authenticated merchant
      description: Get a grouping stat by utm for a payment link by its id for current
        authenticated merchant
      parameters:
        - name: id
          in: path
          description: Payment link identifier
          required: true
          schema:
            type: string
        - name: period_from
          in: query
          description: period start date in unix timestamp format
          schema:
            type: number
        - name: period_to
          in: query
          description: period end date in unix timestamp format
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paylinkGroupStatCommon'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_min_limit_system:
    get:
      tags:
        - Limits
      summary: Get list of payment minimum limits system
      description: Get list of payment minimum limits system
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payment_min_limit_system_list'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Limits
      summary: Set payment minimum limits system for currency
      description: Set payment minimum limits system for currency
      requestBody:
        description: minimum limits system for currency
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/payment_min_limit_system'
        required: false
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/payment_costs/channel/system/all:
    get:
      tags:
        - Onboarding
      summary: Get all system costs for payments
      description: Get all system costs for payments
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.system.all'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/channel/merchant/{id}/all:
    get:
      tags:
        - Onboarding
      summary: Get all merchant costs for payments operations
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.merchant.all'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/money_back/system/all:
    get:
      tags:
        - Onboarding
      summary: Get all system costs for money back operations
      description: Get all system costs for money back operations
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.system.all'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/money_back/merchant/{id}/all:
    get:
      tags:
        - Onboarding
      summary: Get all merchant costs for money back operations
      description: Get all merchant costs for money back operations
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.merchant.all'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/channel/system:
    get:
      tags:
        - Onboarding
      summary: Get system costs for payment operations
      description: Get system costs for payment operations
      parameters:
        - name: name
          in: query
          description: payment method name
          required: true
          schema:
            type: string
        - name: region
          in: query
          description: 'region name. possible values: CIS, Russia, West Asia, EU, North
          America, Central America, South America, United Kingdom, Worldwide, South
          Pacific'
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: two-letter country code by ISO 3166-1
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.system'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Onboarding
      summary: Create system costs for payments operations
      description: Create system costs for payments operations
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.system.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.system'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/payment_costs/channel/merchant/{id}:
    get:
      tags:
        - Onboarding
      summary: Get merchant costs for payment operations
      description: Get merchant costs for payment operations
      parameters:
        - name: id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: payment method name
          required: true
          schema:
            type: string
        - name: region
          in: query
          description: 'region name. possible regions: CIS, Russia, West Asia, EU, North
          America, Central America, South America, United Kingdom, Worldwide, South
          Pacific'
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: two-letter country code by ISO 3166-1
          schema:
            type: string
        - name: payout_currency
          in: query
          description: payout currency. 3 lettre code by ISO 4217
          required: true
          schema:
            type: string
        - name: amount
          in: query
          description: min payment amount
          required: true
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Onboarding
      summary: Create merchant costs for payments operations
      description: Create merchant costs for payments operations
      parameters:
        - name: id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.merchant.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
    delete:
      tags:
        - Onboarding
      summary: Delete merchant costs for payment operations
      description: Delete merchant costs for payment operations
      parameters:
        - name: id
          in: path
          description: merchant cost identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/money_back/system:
    get:
      tags:
        - Onboarding
      summary: Get system costs for money back operations
      description: Get system costs for money back operations
      parameters:
        - name: name
          in: query
          description: payment method name
          required: true
          schema:
            type: string
        - name: payout_currency
          in: query
          description: payout currency. 3 lettre code by ISO 4217
          required: true
          schema:
            type: string
        - name: undo_reason
          in: query
          description: 'money back type. available values: refund, reversal, chargeback'
          required: true
          schema:
            type: string
        - name: region
          in: query
          description: region name
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: two-letter country code by ISO 3166-1
          schema:
            type: string
        - name: days
          in: query
          description: number of days after payment operation
          required: true
          schema:
            type: number
        - name: payment_stage
          in: query
          description: payment stage
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.system'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Onboarding
      summary: Create system costs for money back operations
      description: Create system costs for money back operations
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.system.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.system'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/payment_costs/money_back/merchant/{id}:
    get:
      tags:
        - Onboarding
      summary: Get merchant costs for money back operations
      description: Get merchant costs for money back operations
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: payment method name
          required: true
          schema:
            type: string
        - name: payout_currency
          in: query
          description: payout currency. 3 lettre code by ISO 4217
          required: true
          schema:
            type: string
        - name: undo_reason
          in: query
          description: 'money back type. available values: refund, reversal, chargeback'
          required: true
          schema:
            type: string
        - name: region
          in: query
          description: region name
          required: true
          schema:
            type: string
        - name: country
          in: query
          description: two-letter country code by ISO 3166-1
          schema:
            type: string
        - name: days
          in: query
          description: number of days after payment operation
          required: true
          schema:
            type: number
        - name: payment_stage
          in: query
          description: payment stage
          schema:
            type: number
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Onboarding
      summary: Create merchant costs for money back operations
      description: Create merchant costs for money back operations
      parameters:
        - name: id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.merchant.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
    delete:
      tags:
        - Onboarding
      summary: Delete merchant costs for money back operations
      description: Delete merchant costs for money back operations
      parameters:
        - name: id
          in: path
          description: merchant cost identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/channel/system/{id}:
    put:
      tags:
        - Onboarding
      summary: Update system costs for payment operations
      description: Update system costs for payment operations
      parameters:
        - name: id
          in: path
          description: cost record identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.system.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.system'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
    delete:
      tags:
        - Onboarding
      summary: Delete system costs for payment operations
      description: Delete system costs for payment operations
      parameters:
        - name: id
          in: path
          description: system cost identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/money_back/system/{id}:
    put:
      tags:
        - Onboarding
      summary: Update system costs for money back operations
      description: Update system costs for money back operations
      parameters:
        - name: id
          in: path
          description: system cost identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.system.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.system'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
    delete:
      tags:
        - Onboarding
      summary: Delete system costs for money back operations
      description: Delete system costs for money back operations
      parameters:
        - name: id
          in: path
          description: system cost identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/payment_costs/channel/merchant/{merchant_id}/{cost_id}:
    put:
      tags:
        - Onboarding
      summary: Update merchant costs for payments operations
      description: Create merchant costs for payments operations
      parameters:
        - name: merchant_id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
        - name: cost_id
          in: path
          description: cost record unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.payment.merchant.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.payment.merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/payment_costs/money_back/merchant/{merchant_id}/{cost_id}:
    put:
      tags:
        - Onboarding
      summary: Update merchant costs for money back operations
      description: Update merchant costs for money back operations
      parameters:
        - name: merchant_id
          in: path
          description: merchant unique identifier
          required: true
          schema:
            type: string
        - name: cost_id
          in: path
          description: cost record unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.cost.money_back.merchant.create'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/payout_documents:
    get:
      tags:
        - Payouts
      summary: Get list of payout documents, matched to filters (if any)
      description: Get list of payout documents, matched to filters (if any)
      parameters:
        - name: payout_document_id
          in: query
          description: payout document unique identifier
          schema:
            type: string
        - name: status
          in: query
          description: filter by document's status
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: merchant_id
          in: query
          description: filter by document's merchant
          schema:
            type: string
        - name: signed
          in: query
          description: filter only signed documents, if true
          schema:
            type: boolean
        - name: limit
          in: query
          description: limit documents per page
          schema:
            type: number
        - name: offset
          in: query
          description: offset documents per page
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/payout_documents_list'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Payouts
      summary: Create a payout document POST JSON request
      description: Create a payout document POST JSON request
      requestBody:
        description: merchant identificator to create payout document for
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payout_documents_create'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/billingPayoutDocument'
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/payout_documents/{id}:
    get:
      tags:
        - Payouts
      summary: Get payout document by id
      description: Get payout document by id
      parameters:
        - name: id
          in: path
          description: payout document unique identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billingPayoutDocument'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Payouts
      summary: Update a payout document POST JSON request
      description: Update a payout document POST JSON request
      parameters:
        - name: id
          in: path
          description: payout document unique identifier
          required: true
          schema:
            type: string
      requestBody:
        description: update params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payout_documents_update'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/billingPayoutDocument'
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/products/:id/prices:
    get:
      tags:
        - Products
      summary: Get product prices
      description: Get product prices
      parameters:
        - name: id
          in: query
          description: id of product
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product.Price'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      security:
        - XAPISignatureHeader: []
    put:
      tags:
        - Products
      summary: Set product prices
      description: Set product prices
      requestBody:
        description: price properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product.PutPrice'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      security:
        - XAPISignatureHeader: []
      x-codegen-request-body-name: body
  /admin/api/v1/products:
    get:
      tags:
        - Products
      summary: Get a list of products for a merchant in which the owner is an authorized
        user
      description: Get products list for authorised user
      parameters:
        - name: name
          in: query
          description: product name
          schema:
            type: string
        - name: sku
          in: query
          description: product sku
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of returning products. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset products per page
          schema:
            type: integer
        - name: project_id
          in: query
          description: project identifier for which need get products list
          schema:
            type: string
        - name: enabled
          in: query
          description: enabled status (all, true, false)
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Products
      summary: Create product with json request
      description: Create product
      requestBody:
        description: Product create data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product.create_or_update'
        required: true
      responses:
        200:
          description: Created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/products/{id}:
    get:
      tags:
        - Products
      summary: Get a product by it's id for authorised user
      description: Get a product by it's id for authorised user
      parameters:
        - name: id
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    put:
      tags:
        - Products
      summary: Update product with json request
      description: Update product
      parameters:
        - name: id
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Product create data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product.create_or_update'
        required: true
      responses:
        200:
          description: Updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
        400:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Products
      summary: Delete product
      description: Delete product by it's id for authorised user
      parameters:
        - name: id
          in: path
          description: Product identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/products/merchant/{id}:
    get:
      tags:
        - Products
      summary: Get products list for any merchant
      description: Get products list for any merchant
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
        - name: name
          in: query
          description: product name
          schema:
            type: string
        - name: sku
          in: query
          description: product sku
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of returning products. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset products per page
          schema:
            type: integer
        - name: project_id
          in: query
          description: project identifier for which need get products list
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/product'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/projects:
    get:
      tags:
        - Project
      summary: List projects
      description: Get list of project for authenticated merchant
      parameters:
        - name: merchant_id
          in: query
          description: merchant identifier
          schema:
            type: string
        - name: quick_search
          in: query
          description: string to quick search by project name
          schema:
            type: string
        - name: status
          in: query
          description: array of project statuses
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: sort
          in: query
          description: fields list for sorting
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of returning records. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from which you want to return the list of records. default
            value is 0
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/model.Project'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Project
      summary: Create project
      description: Create new project for authenticated merchant
      requestBody:
        description: Creating project data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/projects.CreateRequest'
        required: true
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Project'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/projects/{id}:
    get:
      tags:
        - Project
      summary: Get project
      description: '"Get data about project"'
      parameters:
        - name: id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Project'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Project not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    delete:
      tags:
        - Project
      summary: Delete project
      description: Deactivation project for authenticated merchant
      parameters:
        - name: id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    patch:
      tags:
        - Project
      summary: Update project
      description: Update project for authenticated merchant
      parameters:
        - name: id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Project object with new data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/model.Project'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Project'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/projects/{id}/sku:
    post:
      tags:
        - Project
      summary: Check sku+project unique
      description: Update project for authenticated merchant
      parameters:
        - name: id
          in: path
          description: Project identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Project object with new data
        content:
          application/json:
            schema:
              type: object
              properties:
                sku:
                  type: string
                  example: my_awesome_sku_001
        required: true
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/platforms:
    get:
      tags:
        - Product
      summary: "Get available platform list"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                  platforms:
                    type: array
                    items:
                      $ref: '#/components/schemas/Platform'
        401:
          $ref: '#/components/responses/Unauthorized'
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalError'
  /admin/api/v1/report_file:
    post:
      tags:
        - Report file
      summary: Create report file
      description: Create report file
      requestBody:
        description: report file params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/report_file.CreateReportFileParams'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/report_file/download/{file}:
    get:
      tags:
        - Report file
      summary: Download report file
      description: Download report file
      parameters:
        - name: file
          in: path
          description: filename
          required: true
          schema:
            type: string
        - name: file
          in: query
          description: identity of file and file type
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            text/csv:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        400:
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
            text/csv:
              schema:
                $ref: '#/components/schemas/model.Error'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
            text/csv:
              schema:
                $ref: '#/components/schemas/model.Error'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
            text/csv:
              schema:
                $ref: '#/components/schemas/model.Error'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
            text/csv:
              schema:
                $ref: '#/components/schemas/model.Error'
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/royalty_reports:
    get:
      tags:
        - Royalty reports
      summary: Get a list of royalty reports, matching to filters
      description: Get a list of royalty reports, matching to filters
      parameters:
        - name: period_from
          in: query
          description: period start date
          schema:
            type: string
        - name: period_to
          in: query
          description: period end date
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of returning reports per page. default value is
            100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset reports per page
          schema:
            type: integer
        - name: merchant_id
          in: query
          description: merchant id
          schema:
            type: string
        - name: status[]
          in: query
          description: matching status list
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/grpcRoyaltyReportsPaginate'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/royalty_reports/{id}:
    get:
      tags:
        - Royalty reports
      summary: Get an royalty reports by it's id
      description: Get an royalty reports by it's id
      parameters:
        - name: id
          in: path
          description: Report identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/billingRoyaltyReport'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/royalty_reports/{id}/transactions:
    get:
      tags:
        - Royalty reports
      summary: Get a list of transactions, included in royalty report
      description: Get a list of transactions, included in royalty report
      parameters:
        - name: id
          in: path
          description: Report identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.list.public'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/royalty_reports/{id}/accept:
    post:
      tags:
        - Royalty reports
      summary: Accept royalty report by merchant
      description: Accept royalty report by merchant
      parameters:
        - name: id
          in: path
          description: Report identifier
          required: true
          schema:
            type: string
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/royalty_reports/{id}/decline:
    post:
      tags:
        - Royalty reports
      summary: Start royalty report dispute
      description: Start royalty report dispute
      parameters:
        - name: id
          in: path
          description: Report identifier
          required: true
          schema:
            type: string
      requestBody:
        description: dispute reason
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                dispute_reason:
                  type: string
        required: false
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/royalty_reports/{id}/change:
    post:
      tags:
        - Royalty reports
      summary: Change royalty report
      description: Change royalty report
      parameters:
        - name: id
          in: path
          description: Report identifier
          required: true
          schema:
            type: string
      requestBody:
        description: changes
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/grpcChangeRoyaltyReport'
        required: false
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /admin/api/v1/taxes:
    get:
      tags:
        - Tax
      summary: List all available tax rates in the system
      description: List all available tax rates in the system
      parameters:
        - name: country
          in: query
          description: country to filter response
          schema:
            type: string
        - name: city
          in: query
          description: city to filter response
          schema:
            type: string
        - name: state
          in: query
          description: state to filter response
          schema:
            type: string
        - name: zip
          in: query
          description: zip to filter response
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of returning orders. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from which you want to return the list of orders. default
            value is 0
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/taxes.TaxRate'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Tax
      summary: Upsert tax rate data.
      description: Create or update tax rate data.
      requestBody:
        description: Object to upsert
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/taxes.TaxRate'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/taxes.TaxRate'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /admin/api/v1/taxes/{id}:
    delete:
      tags:
        - Tax
      summary: Delete tax rate object
      description: Mark tax rate object as deleted
      parameters:
        - name: id
          in: path
          description: tax rate object id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: string
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/vat_reports/country/{country}:
    get:
      tags:
        - VAT reports
      summary: Get a VAT reports list by country
      description: Get a VAT reports list by country
      parameters:
        - name: country
          in: path
          description: Country
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/grpcVatReportsPaginate'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/vat_reports/details/{id}:
    get:
      tags:
        - VAT reports
      summary: Get a VAT report transaction
      description: Get a VAT report transaction
      parameters:
        - name: id
          in: path
          description: VAT report id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/order.list.public'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /admin/api/v1/vat_reports/status/{id}:
    post:
      tags:
        - VAT reports
      summary: Change a VAT report status
      description: Change a VAT report status
      parameters:
        - name: id
          in: path
          description: VAT report id
          required: true
          schema:
            type: string
      requestBody:
        description: status
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                status:
                  type: string
        required: false
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /system/api/v1/merchant/{id}/tariffs:
    post:
      tags:
        - Onboarding
      summary: Set tariff rates to merchant
      description: Set tariff rates to merchant
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Tariff.Set.Request'
        required: true
      responses:
        200:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /system/api/v1/merchants:
    get:
      tags:
        - Onboarding
      summary: Get list of merchants
      description: Get list of merchants
      parameters:
        - name: quick_search
          in: query
          description: string to quick search by merchant name or user owner email
          schema:
            type: string
        - name: name
          in: query
          description: merchant name
          schema:
            type: string
        - name: is_signed
          in: query
          description: query parameter to return merchants with full signed agreement
          schema:
            type: boolean
        - name: last_payout_date_from
          in: query
          description: start date to filter merchants by last payout date. parameter
            format must be a unix timestamp
          schema:
            type: integer
        - name: last_payout_date_to
          in: query
          description: end date to filter merchants by last payout date. parameter format
            must be a unix timestamp
          schema:
            type: integer
        - name: last_payout_amount
          in: query
          description: last payout amount
          schema:
            type: integer
        - name: status
          in: query
          description: array of merchant statuses
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - name: limit
          in: query
          description: maximum number of returning orders. default value is 100
          schema:
            type: integer
        - name: offset
          in: query
          description: offset from which you want to return the list of orders. default
            value is 0
          schema:
            type: integer
        - name: sort[]
          in: query
          description: fields list for sorting
          schema:
            type: string
        - name: registration_date_from
          in: query
          description: start date to filter merchants by owner regiatration date. unix
            timestamp value in seconds
          schema:
            type: integer
        - name: registration_date_to
          in: query
          description: end date to filter merchants by owner regiatration date. unix
            timestamp value in seconds
          schema:
            type: integer
        - name: received_date_from
          in: query
          description: start date to filter merchants by date when licanse agreement
            was signed by merchant owner. unix timestamp value in seconds
          schema:
            type: integer
        - name: received_date_to
          in: query
          description: end date to filter merchants by date when licanse agreement was
            signed by merchant owner. unix timestamp value in seconds
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/merchants/{id}:
    get:
      tags:
        - Onboarding
      summary: Get merchant by identifier
      description: Get list of merchants
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/merchants/{merchant_id}/notifications:
    get:
      tags:
        - Onboarding
      summary: Get list of notifications to merchant
      description: Get list of notifications to merchant
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
        - name: user
          in: query
          description: user who sent notification
          schema:
            type: string
        - name: is_system
          in: query
          description: 'flag to filter return notification: 0 - return only notification;
          1 - return only history'
          schema:
            type: integer
        - name: limit
          in: query
          description: limit of returning records
          schema:
            type: integer
        - name: offset
          in: query
          description: offset of returning records
          schema:
            type: integer
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/onboarding.Merchant.Notifications'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Onboarding
      summary: Create new notification
      description: Create new notification
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: Notification data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Merchant.Notification.CreateRequest'
        required: true
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant.Notification'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /system/api/v1/merchants/{merchant_id}/agreement:
    get:
      tags:
        - Onboarding
      summary: Generate agreement
      description: Generate agreement for merchant and return data about printable
        agreement
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant.PrintableAgreementData.Response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/merchants/{merchant_id}/agreement/document:
    get:
      tags:
        - Onboarding
      summary: Download merchant agreement
      description: Download merchant agreement
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Invalid request data
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/merchants/{merchant_id}/agreement/signature:
    put:
      tags:
        - Onboarding
      summary: Get data to sign agreement
      description: Get data to sign license agreement with hellosign api
      parameters:
        - name: merchant_id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.merchant.signatureResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/merchants/{id}/company:
    put:
      tags:
        - Onboarding
      summary: Set company information
      description: Set company information
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Company'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /system/api/v1/merchants/{id}/contacts:
    put:
      tags:
        - Onboarding
      summary: Set contacts information
      description: Set contacts information
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Contacts'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /system/api/v1/merchants/{id}/banking:
    put:
      tags:
        - Onboarding
      summary: Set banking information
      description: Set banking information
      parameters:
        - name: id
          in: path
          description: merchant identifier
          required: true
          schema:
            type: string
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/onboarding.Banking'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: data
  /system/api/v1/merchants/{id}/set_operating_company:
    post:
      tags:
        - Onboarding
      summary: Set merchant operating company
      description: Set merchant operating company
      parameters:
        - name: id
          in: path
          description: merchant id
          required: true
          schema:
            type: string
      requestBody:
        description: status
        content:
          application/json:
            schema:
              type: object
              properties:
                operating_company_id:
                  type: string
                  description: id of operation company for which this cost is applicable
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/onboarding.Merchant'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /system/api/v1/payment_method:
    post:
      tags:
        - Payment method
      summary: Create a payment method for payment system
      description: Create a payment method for payment system
      requestBody:
        description: product method properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment_method.PostProductMethod'
        required: false
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_method.ChangePaymentMethodResponse'
        400:
          description: Error description
          content:
            text/html:
              schema:
                type: string
      x-codegen-request-body-name: body
  /system/api/v1/payment_method/{id}:
    put:
      tags:
        - Payment method
      summary: Update a payment method for payment system
      description: Update a payment method for payment system
      parameters:
        - name: id
          in: path
          description: paymentmethod identifier
          required: true
          schema:
            type: string
      requestBody:
        description: product method properties
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment_method.PutProductMethod'
        required: false
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_method.ChangePaymentMethodResponse'
        400:
          description: Error description
          content:
            text/html:
              schema:
                type: string
      x-codegen-request-body-name: body
  /system/api/v1/payment_method/{id}/production:
    get:
      tags:
        - Payment method
      summary: Get production settings to the payment method
      description: Get production settings to the payment method
      parameters:
        - name: id
          in: path
          description: payment method identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_method.PaymentMethodParams'
        400:
          description: Error description
          content:
            text/html:
              schema:
                type: string
    put:
      tags:
        - Payment method
      summary: Update production settings to the payment method
      description: Update production settings to the payment method
      parameters:
        - name: id
          in: path
          description: payment method identifier
          required: true
          schema:
            type: string
      requestBody:
        description: payment method params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment_method.UpdatePaymentMethodParams'
        required: false
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_method.ChangePaymentMethodParamsResponse'
        400:
          description: Error description
          content:
            text/html:
              schema:
                type: string
      x-codegen-request-body-name: body
    post:
      tags:
        - Payment method
      summary: Add production settings to the payment method
      description: Add production settings to the payment method
      parameters:
        - name: id
          in: path
          description: paymentmethod identifier
          required: true
          schema:
            type: string
      requestBody:
        description: payment method params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/payment_method.UpdatePaymentMethodParams'
        required: false
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_method.ChangePaymentMethodParamsResponse'
        400:
          description: Error description
          content:
            text/html:
              schema:
                type: string
      x-codegen-request-body-name: body
    delete:
      tags:
        - Payment method
      summary: Delete production settings to the payment method
      description: Delete production settings to the payment method
      parameters:
        - name: id
          in: path
          description: payment method identifier
          required: true
          schema:
            type: string
        - name: currency_a3
          in: query
          description: code of currency
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/payment_method.ChangePaymentMethodParamsResponse'
        400:
          description: Error description
          content:
            text/html:
              schema:
                type: string
  /system/api/v1/operating_company:
    get:
      tags:
        - Operating company
      summary: Get operating companies list
      description: Get operating companies list
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operating_company_list'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Operating company
      summary: Add new operating company
      description: Add new operating company
      requestBody:
        description: new operating company params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/operating_company'
        required: false
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /system/api/v1/operating_company/{id}:
    get:
      tags:
        - Operating company
      summary: Get operating company
      description: Get operating company
      parameters:
        - name: id
          in: path
          description: operating company id
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/operating_company'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    post:
      tags:
        - Operating company
      summary: Add new operating company
      description: Add new operating company
      parameters:
        - name: id
          in: path
          description: operating company id
          required: true
          schema:
            type: string
      requestBody:
        description: updating operating company params
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/operating_company'
        required: false
      responses:
        204:
          description: OK
          content: {}
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /system/api/v1/user/profile/{id}:
    get:
      tags:
        - User profile
      summary: Get user profile by proifile identifier
      description: Get user profile by profile identifier
      parameters:
        - name: id
          in: path
          description: profile identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userProfile.response'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        404:
          description: Object not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Some unknown error on server side
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/users/invite:
    post:
      tags:
        - Admin user roles
      summary: Send invitation for admin user
      description: Send invitation to add user as administrator
      requestBody:
        description: JSON request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InviteUserAdmin'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InviteUserResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /system/api/v1/users:
    get:
      tags:
        - Admin user roles
      summary: List of admin users
      description: List of admin users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsersResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/users/resend:
    post:
      tags:
        - Admin user roles
      summary: Resend invitation for admin user
      description: Resend invitation to add user as administrator
      requestBody:
        description: JSON request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendInviteAdmin'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseWithStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
  /system/api/v1/users/roles:
    get:
      tags:
        - Admin user roles
      summary: List of admin role types
      description: List of admin role types
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRoleType'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
  /system/api/v1/users/roles/{role_id}:
    get:
      tags:
        - Admin user roles
      summary: Get admin user role
      description: Get admin user role
      parameters:
        - name: role_id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRoleResponse'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
    put:
      tags:
        - Admin user roles
      summary: Update admin user role
      description: Update admin user role
      parameters:
        - name: role_id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
      requestBody:
        description: JSON request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRoleRequest'
        required: false
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseWithStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
      x-codegen-request-body-name: body
    delete:
      tags:
        - Admin user roles
      summary: Delete admin user
      description: Delete admin user
      parameters:
        - name: role_id
          in: path
          description: User role identifier
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyResponseWithStatus'
        400:
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        403:
          description: Access denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
        500:
          description: Object with error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.Error'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    KeyProduct:
      name: key_product_id
      in: path
      description: "Key Product ID"
      required: true
      schema:
        type: string
    Platform:
      name: platform_id
      in: path
      description: "Platform id"
      required: true
      example: steam
      schema:
        type: string
  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: Internal Server Error
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 409
            message: "Resource with same unique id already exists"
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 422
            message: "Fields required: 'title, description'"
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    # Common schemas
    model.Error:
      type: object
      properties:
        message:
          type: string
          description: |
            text error description
        code:
          type: string
          description: error code
    
    # Public schemas
    model.Country:
      type: object
      properties:
        code_a2:
          type: string
          description: |
            2 chars ISO 3166-1 country code
        code_a3:
          type: string
          description: |
            3 chars ISO 3166-1 country code
        code_int:
          type: integer
          description: |
            numeric ISO 3166-1 country code
        created_at:
          type: string
          description: |
            date of create country in system
        is_active:
          type: boolean
          description: |
            is country active
        name:
          $ref: '#/components/schemas/model.Name'
    model.JsonOrderCreateResponse.user.address:
      type: object
      properties:
        country:
          type: string
          description: string representing the the user's country. two-letter uppercase
            country code in ISO 3166-1 alpha-2 format
        city:
          type: string
          description: user's city
        zip:
          type: string
          description: postal code
    model.JsonOrderCreateResponse.item:
      type: object
      properties:
        id:
          type: string
          description: item identifier
        object:
          type: string
          description: item type
        sku:
          type: string
          description: item sku identifier
        name:
          type: string
          description: item name
        description:
          type: string
          description: item description
        amount:
          type: number
          description: item price
        currency:
          type: string
          description: item price currency. three-letter ISO 4217 currency code, in
            uppercase.
        images:
          type: array
          description: list of urls to item images
          items:
            type: string
        url:
          type: object
          description: url to item on project site
        metadata:
          type: object
          properties: {}
          description: object contain item metadata
        code:
          type: string
          description: item code
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        platform_id:
          type: string
          description: item platform identifier
    model.JsonOrderCreateResponse:
      type: object
      properties:
        id:
          type: string
          description: order unique identifier
        payment_form_url:
          type: string
          description: url to payment form
    model.PaymentFormDataResponse:
      type: object
      properties:
        account:
          type: string
          description: |
            user account, may be null
        has_vat:
          type: boolean
          description: |
            flag to show VAT commission amount in payment form
        vat:
          type: number
          description: VAT amount
        amount:
          type: number
          description: order amount without VAT
        total_amount:
          type: number
          description: total order amount with VAT
        currency:
          type: string
          description: order currency
        user_address_data_required:
          type: boolean
          description: flag to get information about user real geo position
        id:
          type: string
          description: |
            order unique identifier
        payment_methods:
          type: array
          description: |
            contain data about payment methods
          items:
            $ref: '#/components/schemas/model.PaymentMethodJsonOrderResponse'
        project:
          $ref: '#/components/schemas/model.ProjectJsonOrderResponse'
        token:
          type: string
          description: |
            access token to websocket private chanel
        user_ip_data:
          $ref: '#/components/schemas/model.JsonOrderCreateResponse.user.address'
        items:
          type: array
          description: list of buyed items in order
          items:
            $ref: '#/components/schemas/model.JsonOrderCreateResponse.item'
        cookie:
          type: string
          description: value to set to cookie for user identification. if user was
            identified by other data than value can be empty.
        email:
          type: string
          description: user email
        description:
          type: string
          description: order description
        country_payments_allowed:
          type: boolean
          description: true is payments from user country is allowed
        country_change_allowed:
          type: boolean
          description: true if user can change self country if payments from his country
            disallow
        platforms:
          type: array
          description: list of supported platforms if this payment with type key (for
            other types this field can be empty)
          items:
            type: string
    model.Name:
      type: object
      properties:
        en:
          type: string
          description: |
            english name
        ru:
          type: string
          description: |
            russian name
    model.OrderCreatePaymentRequest:
      type: object
      properties:
        address:
          type: string
          description: |
            user wallet address in crypto payment system. required only for crypto payment
        card_holder:
          type: string
          description: |
            bank card card holder name. required only for bank card payment
        cvv:
          type: integer
          description: |
            bank card cvv code. required only for bank card payment
        ewallet:
          type: string
          description: |
            user account in ewallet payment system. required only for ewallet payment
        month:
          type: integer
          description: |
            month of expire date of user bank card. required only for bank card payment
        order_id:
          type: string
          description: |
            unique identifier of order on PSP (P1) side
        pan:
          type: string
          description: |
            user bank card number. required only for bank card payment
        payment_method_id:
          type: string
          description: |
            unique identifier of payment method by PSP (P1) classifier
        year:
          type: integer
          description: |
            year of expire date of user bank card. required only for bank card payment
    order.project:
      type: object
      properties:
        id:
          type: string
          description: project unique identifier
        merchant_id:
          type: string
          description: project merchant unique identifier
        url_success:
          type: string
          description: url for redirect user after successfully completed payment
        url_fail:
          type: string
          description: url for redirect user after failed payment
        send_notify_email:
          type: boolean
          description: flag to send notification emails by "notify_emails" list after
            successfully completed payment
        notify_emails:
          type: array
          description: emails list to send notification email after successfully completed
            payment
          items:
            type: string
        secret_key:
          type: string
          description: project secret key
        url_check_account:
          type: string
          description: callback url to check payment requisites
        url_process_payment:
          type: string
          description: callback url to send payment complete request
        callback_protocol:
          type: string
          description: 'type of callback notification protocol. now available next
                values: empty - notification request not send, order just mark as successfully
                complete; default - notification request send by PaySuper notification
                protocol;'
    order.payment_method.card:
      type: object
      properties:
        first6:
          type: string
          description: string representing the first 6 digits of the card. Available
            only for a card method
        last4:
          type: string
          description: string representing the last 4 digits of the card. Available
            only for a card method
        masked:
          type: string
          description: masked pan of bank card
        expiry_month:
          type: string
          description: month of expiration bank card
        expiry_year:
          type: string
          description: year of expiration bank card
        brand:
          type: string
          description: bank card brand
        fingerprint:
          type: string
          description: string representing the internal fingerprint for given card
        secure3d:
          type: boolean
          description: true is 3DS secure was used during payment
    order.payment_method.wallet:
      type: object
      properties:
        brand:
          type: string
          description: name of payment system
        account:
          type: string
          description: payer wallet number in payment system
    order.payment_method.crypto_currency:
      type: object
      properties:
        brand:
          type: string
          description: name of crypto currency system
        address:
          type: string
          description: payer address in crypto cyrrency system
    order.payment_method:
      type: object
      properties:
        title:
          type: string
          description: payment method name
        external_id:
          type: string
          description: payment method identifier in payment system
        payment_system_id:
          type: string
          description: payment system identifier
        saved:
          type: boolean
          description: true is payment method was saved by user for future usage
        card:
          $ref: '#/components/schemas/order.payment_method.card'
        wallet:
          $ref: '#/components/schemas/order.payment_method.wallet'
        crypto_currency:
          $ref: '#/components/schemas/order.payment_method.crypto_currency'
    order.user.address:
      type: object
      properties:
        country:
          type: string
          description: string representing the the user's country. two-letter uppercase
            country code in ISO 3166-1 alpha-2 format
        city:
          type: string
          description: user's city
        postal_code:
          type: string
          description: postal code
        state:
          type: string
          description: state name
    order.user:
      type: object
      properties:
        id:
          type: string
          description: customer identity identifier
        object:
          type: string
          description: constant with object name
        external_id:
          type: string
          description: user identifier in project
        name:
          type: string
          description: user name
        email:
          type: string
          description: user email
        email_verified:
          type: boolean
          description: true is email was verified
        phone:
          type: string
          description: user phone
        phone_verified:
          type: boolean
          description: true is phone was verified
        ip:
          type: string
          description: user ip address
        locale:
          type: string
          description: user's locale. two-letter code in lowercase
        address:
          $ref: '#/components/schemas/order.user.address'
        metadata:
          type: object
          properties: {}
          description: set of key-value pairs that attached to an object on create
            order state
        notify_new_region:
          type: boolean
          description: true is user wanting to receiving notification when paysuper
            will work in user's region
        notify_new_region_email:
          type: string
          description: user's email to send notification email when paysuper starting
            work in user's region
    order.money:
      type: object
      properties:
        amount:
          type: number
          description: entry amount
        currency:
          type: string
          description: entry currency. three-letter ISO 4217 currency code, in uppercase.
    order.public:
      type: object
      properties:
        uuid:
          type: string
          description: order unique identifier
        total_payment_amount:
          type: number
          description: payment amount
        currency:
          type: string
          description: payment currency. three-letter ISO 4217 currency code, in uppercase.
        project:
          $ref: '#/components/schemas/order.project'
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        transaction:
          type: string
          description: unique identifier for the transaction in payment system
        transaction_date:
          $ref: '#/components/schemas/ProtobufTimestamp'
        payment_method:
          $ref: '#/components/schemas/order.payment_method'
        country_code:
          type: string
          description: string representing the the user's country. two-letter uppercase
            country code in ISO 3166-1 alpha-2 format
        merchant_id:
          type: string
          description: project merchant unique identifier
        locale:
          type: string
          description: user's locale. two-letter code in lowercase
        status:
          type: string
          description: 'string representing the order current status. possible statuses:
                created - the order created but not processed yet; canceled - the order
                was canceled and money refunded to user; rejected - the order was rejected
                by payment system with any reasons; processed - the order was processed
                in payment system;'
        user:
          $ref: '#/components/schemas/order.user'
        billing_address:
          $ref: '#/components/schemas/order.user.address'
        type:
          type: string
          description: constant with object type
        is_vat_deduction:
          type: boolean
          description: true is vat deduction
        gross_revenue:
          $ref: '#/components/schemas/order.money'
        tax_fee:
          $ref: '#/components/schemas/order.money'
        tax_fee_currency_exchange_fee:
          $ref: '#/components/schemas/order.money'
        tax_fee_total:
          $ref: '#/components/schemas/order.money'
        method_fee_total:
          $ref: '#/components/schemas/order.money'
        method_fee_tariff:
          $ref: '#/components/schemas/order.money'
        method_fixed_fee_tariff:
          $ref: '#/components/schemas/order.money'
        paysuper_fixed_fee:
          $ref: '#/components/schemas/order.money'
        fees_total:
          $ref: '#/components/schemas/order.money'
        fees_total_local:
          $ref: '#/components/schemas/order.money'
        net_revenue:
          $ref: '#/components/schemas/order.money'
        refund_gross_revenue:
          $ref: '#/components/schemas/order.money'
        method_refund_fee_tariff:
          $ref: '#/components/schemas/order.money'
        merchant_refund_fixed_fee_tariff:
          $ref: '#/components/schemas/order.money'
        refund_tax_fee:
          $ref: '#/components/schemas/order.money'
        refund_tax_fee_currency_exchange_fee:
          $ref: '#/components/schemas/order.money'
        paysuper_refund_tax_fee_currency_exchange_fee:
          $ref: '#/components/schemas/order.money'
        refund_reverse_revenue:
          $ref: '#/components/schemas/order.money'
        refund_fees_total:
          $ref: '#/components/schemas/order.money'
        refund_fees_total_local:
          $ref: '#/components/schemas/order.money'
        items:
          type: array
          description: list of buyed items in order
          items:
            $ref: '#/components/schemas/model.JsonOrderCreateResponse.item'
        issuer:
          $ref: '#/components/schemas/order.issuer'
        merchant_payout_currency:
          type: string
          description: merchant payout currency
        parent:
          $ref: '#/components/schemas/order.parent'
        refund:
          $ref: '#/components/schemas/order.refund'
        cancellation:
          $ref: '#/components/schemas/order.cancellation'
        operating_company_id:
          type: string
          description: merchant operating company id
        refund_allowed:
          type: string
          description: refund allowed flag
    order.parent:
      type: object
      properties:
        id:
          type: string
          description: parent order id
        uuid:
          type: string
          description: parent order uuid
    order.refund:
      type: object
      properties:
        amount:
          type: number
          description: refund amount
        currency:
          type: string
          description: refund currency
        reason:
          type: string
          description: refund reason
        code:
          type: string
          description: refund code
        receipt_number:
          type: string
          description: refund receipt_number
        receipt_url:
          type: string
          description: refund receipt_url
    order.cancellation:
      type: object
      properties:
        reason:
          type: string
          description: refund reason
        code:
          type: string
          description: refund code
    order.list.public:
      type: object
      properties:
        count:
          type: integer
          description: total count of selected orders
        items:
          type: array
          description: array of selected orders
          items:
            $ref: '#/components/schemas/order.public'
    order.issuer:
      type: object
      properties:
        url:
          type: string
          description: referrer full url
        embedded:
          type: boolean
          description: flag of embedded form
        reference:
          type: string
          description: reference id
        reference_type:
          type: string
          description: reference type
        utm_source:
          type: string
          description: utm_source value
        utm_medium:
          type: string
          description: utm_medium value
        utm_campaign:
          type: string
          description: utm_campaign value
        referrer_host:
          type: string
          description: referrer host
    order.create.request.user:
      type: object
      properties:
        external_id:
          type: string
          description: user identifier on project side
        name:
          type: string
          description: user name
        email:
          type: string
          description: user email
        email_verified:
          type: boolean
          description: user email was verified by project
        phone:
          type: string
          description: user phone
        phone_verified:
          type: boolean
          description: user phone was verified by project
        ip:
          type: string
          description: user ip address
        locale:
          type: string
          description: user's locale. two-letter code in lowercase
        address:
          $ref: '#/components/schemas/order.BillingAddress'
        metadata:
          type: object
          properties: {}
          description: object can contain any other information about user. object
            must contain only string values.
    model.OrderScalar:
      required:
        - project
        - type
      type: object
      properties:
        account:
          type: string
          description: user unique account in project
        amount:
          type: number
          description: order amount. if payment type is simple this field is required
        currency:
          type: string
          description: amount currency. three-letter ISO 4217 currency code, in uppercase.
            if payment type is simple this field is required
        description:
          type: string
          description: order description
        order_id:
          type: string
          description: unique order identifier on project side. this field not required,
            BUT we're recommend send this field always
        project:
          type: string
          description: project unique identifier in PaySuper
        url_fail:
          type: string
          description: url for redirect user after failed payment. this field can
            be send if it allowed in project admin panel
        url_success:
          type: string
          description: url for redirect user after successfully completed payment.
            this field can be send if it allowed in project admin panel
        type:
          type: string
          description: 'order type. now available next types: simple, product and
                key'
          enum:
            - simple
            - product
            - key
            - virtual_currency
        products:
          type: array
          description: list of products (or key products) of project which customer
            want to buy. if payment type is product or key this field is required.
          items:
            type: string
        platform_id:
          type: string
          description: platform identifier for which customer buy key products. if
            payment type is key this field is required.
          enum:
            - steam
            - gog
            - uplay
            - origin
            - psn
            - xbox
            - nintendo
            - itch
            - egs
        token:
          type: string
          description: pre-created customer payment token. if sending pre-created
            token other request parameters not required.
        user:
          $ref: '#/components/schemas/order.create.request.user'
        is_buy_for_virtual_currency:
          type: boolean
          description: flag indicates that order should be processed using virtual
            currency
    model.PaymentMethodJsonOrderResponse:
      type: object
      properties:
        account_regexp:
          type: string
          description: |
            regexp mask for check main requisite of payment method
        group_alias:
          type: string
          description: |
            payment method group alias
        icon:
          type: string
          description: |
            url to payment method icon
        id:
          type: string
          description: |
            payment method unique identifier
        name:
          type: string
          description: |
            payment method name
        type:
          type: string
          description: |
            payment method type. allowed: bank_card, ewallet, crypto
    model.Project:
      type: object
      properties:
        id:
          type: string
          description: |
            unique project identifier
        merchant_id:
          type: string
          description: project merchant id
        image:
          type: string
          description: url to project logo
        callback_currency:
          type: string
          description: currency to send payment notification
        callback_protocol:
          type: string
          description: |
            protocol identifier to send payment notification. Now available: default, empty
        create_invoice_allowed_urls:
          type: array
          description: |
            list of urls rom which you can send a request to create an order
          items:
            type: string
        status:
          type: integer
          description: 'project status. now available: 0 - new project; 1 - project
                successfully complete integration tests; 2 - project fail one or more
                integration test; 3 - project in production; 4 - project deleted'
        allow_dynamic_notify_urls:
          type: boolean
          description: |
            is allow send dynamic notification urls in request to create an order
        allow_dynamic_redirect_urls:
          type: boolean
          description: |
            is allow send dynamic user's redirect urls in request to create an order
        limits_currency:
          type: string
          description: currency for amount's limit
        max_payment_amount:
          type: number
          description: |
            maximal amount allowed for create order
        min_payment_amount:
          type: number
          description: |
            minimal amount allowed for create order
        name:
          type: object
          properties: {}
          description: 'project names map in other language: {"en": "project name",
                "ru": "имя проекта"}'
        notify_emails:
          type: array
          description: |
            list of emails to send notifications about successfully completed payment operations
          items:
            type: string
        is_products_checkout:
          type: boolean
          description: |
            is allow create order only with amounts from products list
        secret_key:
          type: string
          description: |
            secret key for create check hash for request about order statuses changes
        send_notify_email:
          type: boolean
          description: |
            is allow send notifications about successfully completed payment operations to user's emails
        url_check_account:
          type: string
          description: |
            default url to send request for verification payment data to project
        url_process_payment:
          type: string
          description: |
            default url to send request for notification about successfully completed payment to project
        url_redirect_fail:
          type: string
          description: |
            default url to redirect user after failed payment
        url_redirect_success:
          type: string
          description: |
            default url to redirect user after successfully completed payment
        products_count:
          type: integer
          description: count of project's products
        created_at:
          type: object
          properties: {}
          description: date of create merchant in system in unix timestamp
        updated_at:
          type: object
          properties: {}
          description: date of update merchant in system in unix timestamp
        localizations:
          type: array
          description: languages for product to localize
          items:
            type: string
        full_description:
          type: object
          additionalProperties:
            type: string
          description: localized full description for product
        short_description:
          type: object
          additionalProperties:
            type: string
          description: localized short description for product
        cover:
          type: object
          properties:
            images:
              type: object
              additionalProperties:
                type: string
              example:
                en: en_image
                ru: ru_image
            use_one_for_all:
              type: boolean
        virtual_currency:
          $ref: '#/components/schemas/model.VirtualCurrency'
    model.VirtualCurrency:
      type: object
      properties:
        logo:
          type: string
        name:
          type: string
          example: ""
        success_message:
          type: string
          example: ""
        min_purchase_value:
          type: number
          format: double
        max_purchase_value:
          type: number
          format: double
        sell_count_type:
          type: string
          enum:
            - fractional
            - integral
        prices:
          type: array
          items:
            $ref: '#/components/schemas/product.Price'
    model.ProjectJsonOrderResponse:
      type: object
      properties:
        name:
          type: string
          description: |
            project name
        url_fail:
          type: string
          description: |
            url to redirect user after failed payment. may be NULL if not set in project settings
        url_success:
          type: string
          description: |
            url to redirect user after successfully completed payment. may be NULL if not set in project settings
    payment_system.PaymentResponse:
      type: object
      properties:
        error:
          type: string
        redirect_url:
          type: string
    taxes.TaxRate:
      required:
        - country
        - rate
      type: object
      properties:
        id:
          type: string
        country:
          type: string
        city:
          type: string
        state:
          type: string
        zip:
          type: string
        rate:
          type: number
    report_file.CreateReportFileParams:
      required:
        - file_type
        - params
        - report_type
      type: object
      properties:
        merchant_id:
          type: string
        file_type:
          type: string
        report_type:
          type: string
        template:
          type: string
        params:
          type: object
          properties: {}
    report_file.CreateReportFileResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        file_id:
          type: string
    payment_method.PaymentMethodParams:
      required:
        - currency
      type: object
      properties:
        currency:
          type: string
        terminal_id:
          type: string
        secret:
          type: string
        secret_callback:
          type: string
    payment_method.PostProductMethod:
      required:
        - external_id
        - name
        - payment_system_id
      type: object
      properties:
        name:
          type: string
          description: Name of method
        group_alias:
          type: string
          description: Name of group for currency type
        external_id:
          type: string
          description: External id
        currencies:
          type: array
          description: List of currency int codes
          items:
            type: integer
        min_payment_amount:
          type: integer
          description: Minimal payment amount
        max_payment_amount:
          type: integer
          description: Maximum payment amount
        type:
          type: string
          description: Type of payment method
        account_regexp:
          type: string
          description: Regular expression for validation
        is_active:
          type: boolean
          description: Active or not
        payment_system_id:
          type: string
          description: Payment system identifier
        test_settings:
          type: array
          description: List of test settings
          items:
            $ref: '#/components/schemas/payment_method.PaymentMethodParams'
        production_settings:
          type: array
          description: List of production settings
          items:
            $ref: '#/components/schemas/payment_method.PaymentMethodParams'
    payment_method.PutProductMethod:
      required:
        - external_id
        - id
        - name
        - payment_system_id
      type: object
      properties:
        id:
          type: string
          description: Payment method identifier
        name:
          type: string
          description: Name of method
        group_alias:
          type: string
          description: Name of group for currency type
        external_id:
          type: string
          description: External id
        currencies:
          type: array
          description: List of currency int codes
          items:
            type: integer
        min_payment_amount:
          type: integer
          description: Minimal payment amount
        max_payment_amount:
          type: integer
          description: Maximum payment amount
        type:
          type: string
          description: Type of payment method
        account_regexp:
          type: string
          description: Regular expression for validation
        is_active:
          type: boolean
          description: Active or not
        payment_system_id:
          type: string
          description: Payment system identifier
        test_settings:
          type: array
          description: List of test settings
          items:
            $ref: '#/components/schemas/payment_method.PaymentMethodParams'
        production_settings:
          type: array
          description: List of production settings
          items:
            $ref: '#/components/schemas/payment_method.PaymentMethodParams'
    payment_method.UpdatePaymentMethodParams:
      required:
        - id
        - params
        - payment_system_id
      type: object
      properties:
        id:
          type: string
          description: Payment method identifier
        payment_system_id:
          type: string
          description: Payment system identifier
        params:
          $ref: '#/components/schemas/payment_method.PaymentMethodParams'
    onboarding.Contacts.Authorized:
      required:
        - email
        - name
        - phone
        - position
      type: object
      properties:
        name:
          type: string
          description: person full name
        email:
          type: string
          description: person email
        phone:
          type: string
          description: person contact phone
        position:
          type: string
          description: person position in company
    onboarding.Contacts.Technical:
      required:
        - email
        - name
        - phone
      type: object
      properties:
        name:
          type: string
          description: person full name
        email:
          type: string
          description: person email
        phone:
          type: string
          description: person contact phone
    onboarding.Company:
      required:
        - address
        - alternative_name
        - city
        - country
        - name
        - state
        - website
        - zip
      type: object
      properties:
        name:
          type: string
          description: name
        alternative_name:
          type: string
          description: brand
        website:
          type: string
          description: website url
        country:
          type: string
          description: destination country 2 letter code by ISO 3166-1
        state:
          type: string
          description: destination state or region
        zip:
          type: string
          description: destination zip code
        city:
          type: string
          description: destination city
        address:
          type: string
          description: destination address
        address_additional:
          type: string
          description: additional company address
        registration_number:
          type: string
          description: company registration number
        tax_id:
          type: string
          description: company tax identifier
    onboarding.Contacts:
      required:
        - authorized
        - technical
      type: object
      properties:
        authorized:
          $ref: '#/components/schemas/onboarding.Contacts.Authorized'
        technical:
          $ref: '#/components/schemas/onboarding.Contacts.Technical'
    onboarding.Banking:
      required:
        - account_number
        - address
        - name
        - swift
      type: object
      properties:
        name:
          type: string
          description: bank name
        address:
          type: string
          description: bank address
        account_number:
          type: string
          description: merchant accounting number in bank
        swift:
          type: string
          description: bank SWIFT code
        details:
          type: string
          description: any details abount merchant accounting bank
        correspondent_account:
          type: string
          description: bank correspondent account
    onboarding.Merchant.LastPayout:
      type: object
      properties:
        date:
          type: integer
          description: date in unix timestamp when was last payout to merchant
        amount:
          type: number
          description: last payout amount to merchant
    onboarding.Tariff.Item:
      type: object
      properties:
        method_percent_fee:
          type: number
          description: payment method fee in percents
        method_fixed_fee:
          type: number
          description: payment method fixed fee in particular currency
        method_fixed_fee_currency:
          type: string
          description: currency of payment method fixed fee.  letters code by ISO
            4217
        is_paid_by_merchant:
          type: boolean
          description: if true than commission will to take from merchant
    onboarding.Tariff.Payment:
      type: object
      properties:
        min_amount:
          type: number
          description: min payment amount
        max_amount:
          type: number
          description: max payment amount
        method_name:
          type: string
          description: payment method name
        method_percent_fee:
          type: number
          description: payment method fee in percents
        method_fixed_fee:
          type: number
          description: payment method fixed fee in particular currency
        method_fixed_fee_currency:
          type: string
          description: currency of payment method fixed fee.  letters code by ISO
            4217
        ps_percent_fee:
          type: number
          description: paysuper fee in percents
        ps_fixed_fee:
          type: number
          description: paysuper fixed fee in particular currency
        ps_fixed_fee_currency:
          type: string
          description: currency of paysuper fixed fee.  letters code by ISO 4217
        merchant_home_region:
          type: string
          description: merchant region name
        payer_regions:
          type: string
          description: payer region name
    onboarding.Tariff:
      type: object
      properties:
        payment:
          $ref: '#/components/schemas/onboarding.Tariff.Payment'
        refund:
          $ref: '#/components/schemas/onboarding.Tariff.Item'
        chargeback:
          $ref: '#/components/schemas/onboarding.Tariff.Item'
        payout:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/onboarding.Tariff.Item'
          description: payout tariff
          example:
            RUB:
              method_percent_fee: 0
              method_fixed_fee: 1000
              method_fixed_fee_currency: RUB
              is_paid_by_merchant: true
            USD:
              method_percent_fee: 0
              method_fixed_fee: 10
              method_fixed_fee_currency: USD
              is_paid_by_merchant: true
        minimal_payout:
          type: object
          additionalProperties:
            type: number
          description: minimal payout amount
          example:
            RUB: 10000
            USD: 100
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
    onboarding.Tariff.Set.Request:
      type: object
      properties:
        home_region:
          type: string
          description: 'merchant home region name. possible values: asia, europe,
                latin_america, russia_and_cis, worldwide'
        merchant_operations_type:
          type: string
          description: merchant operations type. possible values are low-risk, high-risk
    onboarding.Merchant.user:
      type: object
      properties:
        id:
          type: string
          description: user identifier
        email:
          type: string
          description: user email
        first_name:
          type: string
          description: user first name
        last_name:
          type: string
          description: user last name
        profile_id:
          type: string
          description: user primary onboarding profile identifier
        registration_date:
          $ref: '#/components/schemas/ProtobufTimestamp'
    onboarding.Merchant.tariffs:
      type: object
      properties:
        home_region:
          type: string
          description: merchant tariff home region
          enum:
            - asia
            - europe
            - latin_america
            - russia_and_cis
            - worldwide
    onboarding.Merchant:
      type: object
      properties:
        id:
          type: string
          description: merchant unique identifier in system
        company:
          $ref: '#/components/schemas/onboarding.Company'
        contacts:
          $ref: '#/components/schemas/onboarding.Contacts'
        banking:
          $ref: '#/components/schemas/onboarding.Banking'
        status:
          type: integer
          description: merchant status in system
        created_at:
          type: integer
          description: date of create merchant in system in unix timestamp
        updated_at:
          type: integer
          description: date of update merchant in system in unix timestamp
        first_payment_at:
          type: integer
          description: date when was first payment by some merchant project in system
            in unix timestamp
        last_payout:
          $ref: '#/components/schemas/onboarding.Merchant.LastPayout'
        is_signed:
          type: boolean
          description: agreement between merchant and system fully signed
        payment_methods:
          type: object
          properties: {}
          description: list of payment methods activated to merchant
        agreement_type:
          type: integer
          description: 'type of agreement which merchant selected. possible values:
                0 - type not select; 1 - paper agreement; 2 - e-sign agreement;'
        agreement_sent_via_mail:
          type: boolean
          description: mark agreement as sent via post
        mail_tracking_link:
          type: string
          description: link to tracking package with agreement in post
        agreement_template:
          type: string
          description: license agreement template identifier in hellosign
        received_date:
          $ref: '#/components/schemas/ProtobufTimestamp'
        status_last_updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        has_projects:
          type: boolean
          description: true is merchant has created projects
        user:
          $ref: '#/components/schemas/onboarding.Merchant.user'
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
        operating_company_id:
          type: string
          description: id of operation company for which this cost is applicable
        tariff:
          $ref: '#/components/schemas/onboarding.Merchant.tariffs'
    onboarding.Merchant.ChangeStatus:
      required:
        - status
      type: object
      properties:
        status:
          type: integer
          description: 'new status identifier of merchant. possible statuses: 5 -
                deleted, 6 - rejected'
        message:
          type: string
          description: string description to new status
    payment_method.ChangePaymentMethodResponse:
      required:
        - status
      type: object
      properties:
        status:
          type: integer
          description: status as result of operation
        message:
          type: string
          description: string description for error message
    payment_method.ChangePaymentMethodParamsResponse:
      required:
        - status
      type: object
      properties:
        status:
          type: integer
          description: status as result of operation
        message:
          type: string
          description: string description for error message
    price_group.CurrencyRegion:
      type: object
      properties:
        id:
          type: string
          description: price group identifier
        region:
          type: string
          description: name of region
        currency:
          type: string
          description: code of currency
    price_group.CurrencyListResponse:
      type: object
      properties:
        regions:
          $ref: '#/components/schemas/price_group.Regions'
    price_group.Regions:
      type: object
      properties:
        currency:
          type: string
          description: name of currency
        region:
          $ref: '#/components/schemas/price_group.Region'
    price_group.Region:
      type: object
      properties:
        region:
          type: string
          description: name of region
        country:
          type: array
          items:
            type: string
          description: list of countries
    price_group.RecommendedPriceResponse:
      type: object
      properties:
        recommended_price:
          $ref: '#/components/schemas/price_group.RecommendedPrice'
    price_group.RecommendedPrice:
      type: object
      properties:
        region:
          type: string
          description: name of region
        currency:
          type: string
          description: name of currency
        amount:
          type: number
          description: recommended amount
    price_group.RecommendedPriceTableResponse:
      type: object
      properties:
        ranges:
          $ref: '#/components/schemas/price_group.RecommendedPriceTableItem'
    price_group.RecommendedPriceTableItem:
      type: object
      properties:
        from:
          type: integer
          description: start point of range
        to:
          type: integer
          description: end point of range
    onboarding.Merchant.Notification.Statuses:
      type: object
      properties:
        from:
          type: integer
          description: status before changes
        to:
          type: integer
          description: status after changes
    onboarding.Merchant.Notification:
      type: object
      properties:
        id:
          type: string
          description: notification unique identifier in system
        title:
          type: string
          description: notification title
        message:
          type: string
          description: notification message
        merchant_id:
          type: string
          description: merchant identifier who must recieve notification
        user_id:
          type: string
          description: user identifier who send notification
        is_system:
          type: boolean
          description: notification generated automaticaly
        is_read:
          type: boolean
          description: receiver read notification
        statuses:
          $ref: '#/components/schemas/onboarding.Merchant.Notification.Statuses'
        created_at:
          type: integer
          description: dete of create notification in unix timestamp format
        updated_at:
          type: integer
          description: dete of last update notification in unix timestamp format
    onboarding.Merchant.Notifications:
      type: object
      properties:
        count:
          type: integer
          description: total number of filtered notifications
        items:
          $ref: '#/components/schemas/onboarding.Merchant.Notification'
    onboarding.Merchant.Notification.CreateRequest:
      required:
        - message
        - title
      type: object
      properties:
        title:
          type: string
          description: notification title
        message:
          type: string
          description: notification message
    order.Refund:
      type: object
      properties:
        id:
          type: string
          description: refund unique identifier
        order_id:
          type: string
          description: order unique identifier for which the refund was created
        external_id:
          type: string
          description: refund unique identifier on payment system side
        amount:
          type: number
          description: refund amount
        creator_id:
          type: string
          description: user identifier who created refund
        reason:
          type: string
          description: reason to refund
        currency:
          type: string
          description: refund currency
        status:
          type: integer
          description: 'refund status. available statuses: 0 - refund was created;
                1 - refund rejected on payment system side; 2 - refund in processing on
                payment system side; 3 - refund successfully completed;'
        created_at:
          type: integer
          description: dete of create notification in unix timestamp format
        updated_at:
          type: integer
          description: dete of last update notification in unix timestamp format
    order.Refund.CreateRequest:
      required:
        - amount
      type: object
      properties:
        amount:
          type: number
          description: refund amount
        reason:
          type: string
          description: reason to refund
    onboarding.Merchant.ChangeAgreementDataRequest:
      type: object
      properties:
        has_psp_signature:
          type: boolean
          description: flag for set peysuper signature on the agreement
        has_merchant_signature:
          type: boolean
          description: flag for set merchant signature on the agreement
    onboarding.Merchant.PrintableAgreementData.Metadata:
      required:
        - content_type
        - extension
        - name
        - size
      type: object
      properties:
        name:
          type: string
          description: agreement file name
        extension:
          type: string
          description: agreement file extension
        content_type:
          type: string
          description: agreement file content type
        size:
          type: integer
          description: agreement file size in Kb
    onboarding.Merchant.PrintableAgreementData.Response:
      type: object
      properties:
        url:
          type: string
          description: link to download printable agreement
        metadata:
          $ref: '#/components/schemas/onboarding.Merchant.PrintableAgreementData.Metadata'
    onboarding.Merchant.ChangeAgreementType.Request:
      required:
        - agreement_type
      type: object
      properties:
        agreement_type:
          type: integer
          description: 'type of agreement which merchant selected. possible values:
                1 - paper agreement; 2 - e-sign agreement;'
    projects.CreateRequest:
      type: object
      properties:
        merchant_id:
          type: string
          description: project merchant id
        image:
          type: string
          description: url to project logo
        callback_currency:
          type: string
          description: currency to send payment notification
        callback_protocol:
          type: string
          description: 'protocol identifier to send payment notification. Now available:
                default, empty'
        create_invoice_allowed_urls:
          type: array
          description: list of urls rom which you can send a request to create an
            order
          items:
            type: string
        allow_dynamic_notify_urls:
          type: boolean
          description: is allow send dynamic notification urls in request to create
            an order
        allow_dynamic_redirect_urls:
          type: boolean
          description: is allow send dynamic user's redirect urls in request to create
            an order
        limits_currency:
          type: string
          description: currency for amount's limit
        max_payment_amount:
          type: number
          description: maximal amount allowed for create order
        min_payment_amount:
          type: number
          description: minimal amount allowed for create order
        name:
          type: object
          properties: {}
          description: 'project names map in other language: {"en": "project name",
                "ru": "имя проекта"}'
        notify_emails:
          type: array
          description: list of emails to send notifications about successfully completed
            payment operations
          items:
            type: string
        is_products_checkout:
          type: boolean
          description: is allow create order only with amounts from products list
        secret_key:
          type: string
          description: secret key for create check hash for request about order statuses
            changes
        send_notify_email:
          type: boolean
          description: is allow send notifications about successfully completed payment
            operations to user's emails
        url_check_account:
          type: string
          description: default url to send request for verification payment data to
            project
        url_process_payment:
          type: string
          description: |
            default url to send request for notification about successfully completed payment to project
        url_redirect_fail:
          type: string
          description: default url to redirect user after failed payment
        url_redirect_success:
          type: string
          description: default url to redirect user after successfully completed payment
    order.BillingAddress:
      type: object
      properties:
        country:
          type: string
          description: 2 chars country code in upper registry by ISO 3166-1
        city:
          type: string
          description: city name
        postal_code:
          type: string
          description: zip code
        state:
          type: string
          description: state code by ISO 3166-2
    token.TokenRequest.ValueVerified:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: parameter value
        verified:
          type: boolean
          description: 'is parameter was verified in project side. for example: user
                verify email'
    token.TokenRequest.Value:
      required:
        - value
      type: object
      properties:
        value:
          type: string
          description: parameter value
    token.TokenRequest.User:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: user identifier in project
        email:
          $ref: '#/components/schemas/token.TokenRequest.ValueVerified'
        phone:
          $ref: '#/components/schemas/token.TokenRequest.ValueVerified'
        name:
          $ref: '#/components/schemas/token.TokenRequest.Value'
        ip:
          $ref: '#/components/schemas/token.TokenRequest.Value'
        locale:
          $ref: '#/components/schemas/token.TokenRequest.Value'
        address:
          $ref: '#/components/schemas/order.BillingAddress'
        metadata:
          type: object
          properties: {}
          description: object can contain any other information about user. object
            must contain only string values.
    token.TokenRequest.Settings.ReturnUrl:
      type: object
      properties:
        success:
          type: string
          description: url to redirect user after payment was successfully completed
        fail:
          type: string
          description: url to redirect user after payment failed
    token.TokenRequest.Settings:
      required:
        - project_id
        - type
      type: object
      properties:
        project_id:
          type: string
          description: project identifier
        return_url:
          $ref: '#/components/schemas/token.TokenRequest.Settings.ReturnUrl'
        currency:
          type: string
          description: '3 characters currency code in upper registry by ISO 4217.
                this field is required if payment type is simple. WARNING: this field
                is disallowed if creating payment token with types product or key'
        amount:
          type: number
          description: 'payment amount. this field is required if payment type is
                simple. WARNING: this field is disallowed if creating payment token with
                types product or key'
        products_ids:
          type: array
          description: 'array of products identifiers or key products identifiers.
                this field is required if payment types are product or key. WARNING: this
                field is disallowed if creating payment token with type simple'
          items:
            type: string
        description:
          type: string
          description: payment description
        type:
          type: string
          description: 'payment type. now available next values: simple, product,
                key'
        metadata:
          type: object
          properties: {}
          description: object can contain any other information about payment. object
            must contain only string values. this object will return in project notification
            about payment.
        is_buy_for_virtual_currency:
          type: boolean
          description: flag indicates that order should be processed using virtual
            currency
    token.TokenRequest:
      required:
        - settings
        - user
      type: object
      properties:
        user:
          $ref: '#/components/schemas/token.TokenRequest.User'
        settings:
          $ref: '#/components/schemas/token.TokenRequest.Settings'
    token.TokenResponse:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: payment token
        payment_form_url:
          type: string
          description: url to payment form
    product.Price:
      type: object
      properties:
        amount:
          type: number
          description: price
        currency:
          type: string
          description: currency
        region:
          type: string
          description: region
        is_virtual_currency:
          type: boolean
          description: virtual currency flag
    product.PutPrice:
      required:
        - id
        - prices
      type: object
      properties:
        id:
          type: string
          description: id of product
        prices:
          type: array
          description: list of prices
          items:
            $ref: '#/components/schemas/product.Price'
    userProfile.personal:
      type: object
      properties:
        first_name:
          type: string
          description: user first name
        last_name:
          type: string
          description: user last name
        position:
          type: string
          description: user position in company
    userProfile.help:
      type: object
      properties:
        product_promotion_and_development:
          type: boolean
          description: User need help with product promotion and development
        released_game_promotion:
          type: boolean
          description: User need help with games promotion that have already been
            released
        international_sales:
          type: boolean
          description: User need help with international sales
        other:
          type: boolean
          description: User need help with other problems
    RangeInt:
      type: object
      properties:
        from:
          type: integer
          description: range start value
        to:
          type: integer
          description: range end value
    userProfile.company.monetization:
      type: object
      properties:
        paid_subscription:
          type: boolean
          description: company monetisation from buy paid subscription by company
            users
        in_game_advertising:
          type: boolean
          description: company monetisation from buy in game advertising
        in_game_purchases:
          type: boolean
          description: company monetisation from buy in game purchases by company
            users
        premium_access:
          type: boolean
          description: company monetisation from buy premium access by company users
        other:
          type: boolean
          description: company monetisation from other activities
    userProfile.company.platforms:
      type: object
      properties:
        pc_mac:
          type: boolean
          description: PC/MacOs
        game_console:
          type: boolean
          description: game console
        mobile_device:
          type: boolean
          description: mobile device
        web_browser:
          type: boolean
          description: web browsers
        other:
          type: boolean
          description: other platforms
    userProfile.company:
      type: object
      properties:
        company_name:
          type: string
          description: company name
        website:
          type: string
          description: company website url
        annual_income:
          $ref: '#/components/schemas/RangeInt'
        number_of_employees:
          $ref: '#/components/schemas/RangeInt'
        kind_of_activity:
          type: string
          description: 'company kind of activity. available values: develop_and_publish_your_games,
                publish_games_of_other_companies, publish_your_games_through_other_publishers,
                other'
        monetization:
          $ref: '#/components/schemas/userProfile.company.monetization'
        platforms:
          $ref: '#/components/schemas/userProfile.company.platforms'
    ProtobufTimestamp:
      type: object
      properties:
        seconds:
          type: integer
          description: time in unix timestamp
        nanos:
          type: integer
          description: time nano seconds
    userProfile.request:
      type: object
      properties:
        personal:
          $ref: '#/components/schemas/userProfile.personal'
        help:
          $ref: '#/components/schemas/userProfile.help'
        company:
          $ref: '#/components/schemas/userProfile.company'
        last_step:
          type: string
          description: identifier of wizard last step which user ended
    userProfile.response:
      type: object
      properties:
        personal:
          $ref: '#/components/schemas/userProfile.personal'
        help:
          $ref: '#/components/schemas/userProfile.help'
        company:
          $ref: '#/components/schemas/userProfile.company'
        last_step:
          type: string
          description: identifier of wizard last step which user ended
        centrifugo_token:
          type: string
          description: user authorisation token to connect to centrifigo channel
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
    userCommonProfile:
      type: object
      properties:
        user_profile:
          $ref: '#/components/schemas/userProfile.response'
        user_role:
          $ref: '#/components/schemas/UserRole'
        permissions:
          $ref: '#/components/schemas/userRolePermission'
        merchant:
          $ref: '#/components/schemas/onboarding.Merchant'
    userRolePermission:
      type: object
      properties:
        name:
          type: string
        access:
          type: string
    pageReview.request:
      required:
        - review
        - url
      type: object
      properties:
        review:
          type: string
          description: user review about page
        url:
          type: string
          description: URL address of page
    user.confirmEmail.request:
      required:
        - token
      type: object
      properties:
        token:
          type: string
          description: email confirmation token
    onboarding.merchant.fillStatus.Steps:
      type: object
      properties:
        company:
          type: boolean
          description: step company basic info complete
        contacts:
          type: boolean
          description: step company contacts complete
        banking:
          type: boolean
          description: step company banking complete
        tariff:
          type: boolean
          description: step tariff complete
    onboarding.merchant.fillStatus:
      type: object
      properties:
        status:
          type: string
          description: 'fill status. possible values: draft, life'
        steps:
          $ref: '#/components/schemas/onboarding.merchant.fillStatus.Steps'
        complete_steps_count:
          type: integer
          description: count of complete steps
    onboarding.merchant.signatureResponse:
      type: object
      properties:
        sign_url:
          type: string
          description: URL of the signature page to display in the embedded iFrame
        expires_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
    onboarding.cost.payment.system:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        name:
          type: string
          description: payment method name
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        percent:
          type: number
          description: percent fee
        fix_amount:
          type: number
          description: fixed fee in particular currency
        fix_amount_currency:
          type: string
          description: currency of fixed fee.  letters code by ISO 4217
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        is_active:
          type: boolean
          description: true is cost record is active
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
        operating_company_id:
          type: string
          description: id of operation company for which this cost is applicable
    onboarding.cost.payment.system.create:
      required:
        - fix_amount_currency
        - mcc_code
        - name
        - operating_company_id
        - percent
        - region
      type: object
      properties:
        name:
          type: string
          description: payment method name
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        percent:
          type: number
          description: percent fee
        fix_amount:
          type: number
          description: fixed fee in particular currency
        fix_amount_currency:
          type: string
          description: currency of fixed fee.  letters code by ISO 4217
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
        operating_company_id:
          type: string
          description: id of operation company for which this cost is applicable
    onboarding.cost.payment.system.all:
      type: object
      properties:
        items:
          type: array
          description: array of system payment costs
          items:
            $ref: '#/components/schemas/onboarding.cost.payment.system'
    onboarding.cost.money_back.system.all:
      type: object
      properties:
        items:
          type: array
          description: array of system money back costs
          items:
            $ref: '#/components/schemas/onboarding.cost.money_back.system'
    onboarding.cost.payment.merchant:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        merchant_id:
          type: string
          description: merchant identifier
        name:
          type: string
          description: payment method name
        payout_currency:
          type: string
          description: payout currency. 3 lettre code by ISO 4217
        min_amount:
          type: number
          description: payment min amount in payout currency
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        method_percent:
          type: number
          description: payment method fee in percents
        method_fix_amount:
          type: number
          description: payment method fixed fee in particular currency
        method_fix_amount_currency:
          type: string
          description: currency of payment method fixed fee. 3-letters code by ISO
            4217
        ps_percent:
          type: number
          description: paysuper fixed fee in particular currency
        ps_fixed_fee:
          type: number
          description: paysuper fixed fee in particular currency
        ps_fixed_fee_currency:
          type: string
          description: currency of paysuper fixed fee. 3-letters code by ISO 4217
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        is_active:
          type: boolean
          description: true is rates record active for merchant
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
    onboarding.cost.payment.merchant.create:
      required:
        - mcc_code
        - method_fix_amount_currency
        - method_percent
        - min_amount
        - name
        - payout_currency
        - ps_fixed_fee_currency
        - ps_percent
        - region
      type: object
      properties:
        name:
          type: string
          description: payment method name
        payout_currency:
          type: string
          description: payout currency. 3 lettre code by ISO 4217
        min_amount:
          type: number
          description: payment min amount in payout currency
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        method_percent:
          type: number
          description: payment method fee in percents
        method_fix_amount:
          type: number
          description: payment method fixed fee in particular currency
        method_fix_amount_currency:
          type: string
          description: currency of payment method fixed fee. 3-letters code by ISO
            4217
        ps_percent:
          type: number
          description: paysuper fixed fee in particular currency
        ps_fixed_fee:
          type: number
          description: paysuper fixed fee in particular currency
        ps_fixed_fee_currency:
          type: string
          description: currency of paysuper fixed fee. 3-letters code by ISO 4217
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
    onboarding.cost.money_back.system:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        name:
          type: string
          description: payment method name
        payout_currency:
          type: string
          description: payout currency. 3 lettre code by ISO 4217
        undo_reason:
          type: string
          description: 'money back type. available values: refund, reversal, chargeback'
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        days_from:
          type: number
          description: number of days after payment operation
        payment_stage:
          type: number
          description: payment stage
        percent:
          type: number
          description: payment method fee in percents
        fix_amount:
          type: number
          description: payment method fixed fee
        fix_amount_currency:
          type: string
          description: payment method fixed fee currency
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        is_active:
          type: boolean
          description: true is rates record is active
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
        operating_company_id:
          type: string
          description: id of operation company for which this cost is applicable
    onboarding.cost.money_back.system.create:
      required:
        - mcc_code
        - name
        - operating_company_id
        - payout_currency
        - region
        - undo_reason
      type: object
      properties:
        name:
          type: string
          description: payment method name
        payout_currency:
          type: string
          description: payout currency. 3 lettre code by ISO 4217
        undo_reason:
          type: string
          description: 'money back type. available values: refund, reversal, chargeback'
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        days_from:
          type: number
          description: number of days after payment operation
        payment_stage:
          type: number
          description: payment stage
        percent:
          type: number
          description: payment method fee in percents
        fix_amount:
          type: number
          description: payment method fixed fee
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
        operating_company_id:
          type: string
          description: id of operation company for which this cost is applicable
    onboarding.cost.money_back.merchant:
      type: object
      properties:
        id:
          type: string
          description: unique identifier
        merchant_id:
          type: string
          description: merchant identifier
        name:
          type: string
          description: payment method name
        payout_currency:
          type: string
          description: payout currency. 3 lettre code by ISO 4217
        undo_reason:
          type: string
          description: 'money back type. available values: refund, reversal, chargeback'
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        days_from:
          type: number
          description: number of days after payment operation
        payment_stage:
          type: number
          description: payment stage
        percent:
          type: number
          description: payment method fee in percents
        fix_amount:
          type: number
          description: payment method fixed fee in particular currency
        fix_amount_currency:
          type: string
          description: currency of payment method fixed fee.  letters code by ISO
            4217
        is_paid_by_merchant:
          type: boolean
          description: if true than commission will to take from merchant when money
            back operation will be processing
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        is_active:
          type: boolean
          description: true is rates record is active
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
    onboarding.cost.money_back.merchant.create:
      required:
        - fix_amount_currency
        - mcc_code
        - name
        - payout_currency
        - percent
        - region
        - undo_reason
      type: object
      properties:
        name:
          type: string
          description: payment method name
        payout_currency:
          type: string
          description: payout currency. 3 lettre code by ISO 4217
        undo_reason:
          type: string
          description: 'money back type. available values: refund, reversal, chargeback'
        region:
          type: string
          description: region name
        country:
          type: string
          description: two-letter country code by ISO 3166-1
        days_from:
          type: number
          description: number of days after payment operation
        payment_stage:
          type: number
          description: payment stage
        percent:
          type: number
          description: payment method fee in percents
        fix_amount:
          type: number
          description: payment method fixed fee in particular currency
        fix_amount_currency:
          type: string
          description: currency of payment method fixed fee.  letters code by ISO
            4217
        is_paid_by_merchant:
          type: boolean
          description: if true than commission will to take from merchant when money
            back operation will be processing
        mcc_code:
          type: string
          description: mcc code value, for which this cost is applicable
    onboarding.cost.payment.merchant.all:
      type: object
      properties:
        items:
          type: array
          description: array of merchant payment costs
          items:
            $ref: '#/components/schemas/onboarding.cost.payment.merchant'
    onboarding.cost.money_back.merchant.all:
      type: object
      properties:
        items:
          type: array
          description: array of merchant payment costs
          items:
            $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
    dashboard.main_reports.chart.float:
      type: object
      properties:
        label:
          type: string
          description: 'point label. for example: if period to get report equal month
                then point label will be equal one day'
        value:
          type: number
          description: point value
    dashboard.main_reports.chart.integer:
      type: object
      properties:
        label:
          type: string
          description: 'point label. for example: if period to get report equal month
                then point label will be equal one day'
        value:
          type: integer
          description: point value
    dashboard.main_reports.amount_with_chart:
      type: object
      properties:
        amount_current:
          type: number
          description: total amount calculated for current report
        amount_previous:
          type: number
          description: total amount calculated for previous report
        currency:
          type: string
          description: report amount currency.  three-letter ISO 4217 currency code,
            in uppercase.
        chart:
          type: array
          description: array contain objects for chart drawing
          items:
            $ref: '#/components/schemas/dashboard.main_reports.chart.float'
    dashboard.main_reports.total_transactions:
      type: object
      properties:
        count_current:
          type: integer
          description: total count of transactions by current period
        count_previous:
          type: integer
          description: total count of transactions by previous period
        chart:
          type: array
          description: array contain objects for chart drawing
          items:
            $ref: '#/components/schemas/dashboard.main_reports.chart.integer'
    dashboard.main_reports:
      type: object
      properties:
        gross_revenue:
          $ref: '#/components/schemas/dashboard.main_reports.amount_with_chart'
        vat:
          $ref: '#/components/schemas/dashboard.main_reports.amount_with_chart'
        total_transactions:
          $ref: '#/components/schemas/dashboard.main_reports.total_transactions'
        arpu:
          $ref: '#/components/schemas/dashboard.main_reports.amount_with_chart'
    dashboard.revenue_dynamics.item:
      type: object
      properties:
        label:
          type: string
          description: 'point label. for example: if period to get report equal month
                then point label will be equal one day'
        amount:
          type: number
          description: revenue amount for label
        count:
          type: integer
          description: transactions count for label
    dashboard.revenue_dynamics:
      type: object
      properties:
        currency:
          type: string
          description: amount currency. three-letter ISO 4217 currency code, in uppercase.
        items:
          type: array
          description: array of points
          items:
            $ref: '#/components/schemas/dashboard.revenue_dynamics.item'
    dashboard.base.revenue_by_country.top:
      type: object
      properties:
        country:
          type: string
          description: country, two-letter uppercase country code in ISO 3166-1 alpha-2
            format
        amount:
          type: number
          description: amount by country
    dashboard.base.chart:
      type: object
      properties:
        label:
          type: string
          description: 'point label. for example: if period to get report equal month
                then point label will be equal one day'
        amount:
          type: number
          description: amount for label
    dashboard.base.revenue_by_country:
      type: object
      properties:
        top:
          type: array
          description: array of objects with information about top 5 countries by
            revenue by period
          items:
            $ref: '#/components/schemas/dashboard.base.revenue_by_country.top'
        total_current:
          type: number
          description: total revenue amount by current period
        total_previous:
          type: number
          description: total revenue amount by previous period
        currency:
          type: string
          description: amount currency. three-letter ISO 4217 currency code, in uppercase.
        chart:
          $ref: '#/components/schemas/dashboard.base.chart'
    dashboard.base.sales_today.top.item:
      type: object
      properties:
        name:
          type: string
          description: sold item name
        count:
          type: integer
          description: item total count which were sold in period
    dashboard.base.sales_today:
      type: object
      properties:
        top:
          type: array
          description: array of objects with information about top 5 merchant products
            (projects) which were sold in period
          items:
            $ref: '#/components/schemas/dashboard.base.sales_today.top.item'
        total_current:
          type: integer
          description: items total count which were sold by chosen period
        total_previous:
          type: integer
          description: items total count which were sold by previous period to chosen
            period
        chart:
          type: array
          description: array contain objects for chart drawing
          items:
            $ref: '#/components/schemas/dashboard.main_reports.chart.integer'
    dashboard.base.sources.top.item:
      type: object
      properties:
        name:
          type: string
          description: url of issuer
        count:
          type: integer
          description: total count
    dashboard.base.sources:
      type: object
      properties:
        top:
          type: array
          description: array of objects with information about top 5 issuers url
          items:
            $ref: '#/components/schemas/dashboard.base.sources.top.item'
        total_current:
          type: integer
          description: transactions total count by chosen period
        total_previous:
          type: integer
          description: transactions total count by previous period to chosen period
        chart:
          type: array
          description: array contain objects for chart drawing
          items:
            $ref: '#/components/schemas/dashboard.main_reports.chart.integer'
    dashboard.base:
      type: object
      properties:
        revenue_by_country:
          $ref: '#/components/schemas/dashboard.base.revenue_by_country'
        sales_today:
          $ref: '#/components/schemas/dashboard.base.sales_today'
        sources:
          $ref: '#/components/schemas/dashboard.base.sources'
    merchant_balance:
      type: object
      properties:
        merchant_id:
          type: string
          description: merchant identificator
        currency:
          type: string
          description: currency
        debit:
          type: number
          description: balance debit
        credit:
          type: string
          description: balance credit
        rolling_reserve:
          type: number
          description: current rooling reserve balance
        total:
          type: number
          description: total amount
        created_at:
          type: string
          description: last update date
    billingPayoutDocument:
      type: object
      properties:
        id:
          type: string
          description: document id
        source_id:
          type: array
          description: royalty reports id
          items:
            type: string
        transaction:
          type: string
          description: transaction id
        total_fees:
          type: number
          description: total_fees
          format: double
        balance:
          type: number
          description: amount
          format: double
        currency:
          type: string
          description: currency
        status:
          type: string
          description: status, one of skip pending in_progress paid canceled failed
        description:
          type: string
          description: description
        destination:
          $ref: '#/components/schemas/onboarding.Banking'
        created_at:
          type: string
          description: creation date
          format: date-time
        updated_at:
          type: string
          description: update date
          format: date-time
        arrival_date:
          type: string
          description: arrival date
          format: date-time
        failure_code:
          type: string
          description: failure code, one of account_closed account_frozen account_restricted
            destination_bank_invalid could_not_process declined insufficient_funds
            invalid_account_number incorrect_account_holder_name invalid_currency
        failure_message:
          type: string
          description: failure message
        failure_transaction:
          type: string
          description: failure transaction
        merchant_id:
          type: string
          description: merchant identificator
        period_from:
          type: string
          description: payout period start
          format: date-time
        period_to:
          type: string
          description: payout period end
          format: date-time
        operating_company_id:
          type: string
          description: operating company id
    payout_documents_list:
      type: object
      properties:
        count:
          type: number
          description: number of found documents
        items:
          type: array
          description: array with documents
          items:
            $ref: '#/components/schemas/billingPayoutDocument'
    payout_documents_create:
      type: object
      properties:
        merchant_id:
          type: string
          description: merchant identificator to create payout document for
        description:
          type: string
          description: document description
    payout_documents_update:
      type: object
      properties:
        transaction:
          type: string
          description: transaction id
        status:
          type: string
          description: status, one of skip pending in_progress paid canceled failed
        failure_code:
          type: string
          description: failure code, one of account_closed account_frozen account_restricted
            destination_bank_invalid could_not_process declined insufficient_funds
            invalid_account_number incorrect_account_holder_name invalid_currency
        failure_message:
          type: string
          description: failure message
        failure_transaction:
          type: string
          description: failure transaction
    price:
      type: object
      properties:
        amount:
          type: number
          description: price amount
        currency:
          type: string
          description: price currency. three-letter ISO 4217 currency code, in uppercase.
        region:
          type: string
          description: 'region name for this price. available regions: oceania, eu,
                cis, north_europe, north_africa, polynesia, north_america, central_africa,
                south_europe, antarctica, south_america, south_asia, caribbean, west_asia,
                central_america, west_africa, southern_africa, southeast_asia, east_africa,
                east_asia, micronesia, west_europe, latin_america, melanesia, russia,
                sub_saharan_africa, south_africa'
    product:
      type: object
      properties:
        id:
          type: string
          description: product identifier
        project_id:
          type: string
          description: project identifier for which created product
        object:
          type: string
          description: system constant conteined returning object type. for product
            object always must be - product
        type:
          type: string
          description: product type
        sku:
          type: string
          description: product sku (simple slug name)
        name:
          type: object
          properties: {}
          description: 'product names map in other language: {"en": "project name",
                "ru": "имя проекта"}'
        default_currency:
          type: string
          description: default currency for selling product. three-letter ISO 4217
            currency code, in uppercase.
        enabled:
          type: boolean
          description: true is product is enabled
        prices:
          type: array
          description: array of available prices for product
          items:
            $ref: '#/components/schemas/price'
        description:
          type: object
          properties: {}
          description: 'product short descriptions map in other language: {"en": "project
                short description", "ru": "короткое описание проекта"}'
        long_description:
          type: object
          properties: {}
          description: 'product long descriptions map in other language: {"en": "project
                long description", "ru": "длинное описание проекта"}'
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        images:
          type: array
          description: array of product images. if images not set then field can be
            null
          items:
            type: string
        url:
          type: string
          description: url to product on project side
        metadata:
          type: object
          properties: {}
          description: object can contain any other information about product. object
            must contain only string values
        billing_type:
          type: string
          description: Type of billing
          enum:
            - real
            - virtual
    product.create_or_update:
      type: object
      properties:
        project_id:
          type: string
          description: project identifier for which created product
        object:
          type: string
          description: system constant conteined returning object type. for product
            object always must be - product
        type:
          type: string
          description: product type
        sku:
          type: string
          description: product sku (simple slug name)
        name:
          type: object
          properties: {}
          description: 'product names map in other language: {"en": "project name",
                "ru": "имя проекта"}'
        default_currency:
          type: string
          description: default currency for selling product. three-letter ISO 4217
            currency code, in uppercase.
        enabled:
          type: boolean
          description: true is product is enabled
        prices:
          type: array
          description: array of available prices for product
          items:
            $ref: '#/components/schemas/price'
        description:
          type: object
          properties: {}
          description: 'product short descriptions map in other language: {"en": "project
                short description", "ru": "короткое описание проекта"}'
        long_description:
          type: object
          properties: {}
          description: 'product long descriptions map in other language: {"en": "project
                long description", "ru": "длинное описание проекта"}'
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        images:
          type: array
          description: array of product images. if images not set then field can be
            null
          items:
            type: string
        url:
          type: string
          description: url to product on project side
        metadata:
          type: object
          properties: {}
          description: object can contain any other information about product. object
            must contain only string values
    billingRoyaltyReport:
      type: object
      properties:
        id:
          type: string
          description: report id
        merchant_id:
          type: string
          description: merchant id
        created_at:
          type: string
          description: date of report creation
          format: date-time
        updated_at:
          type: string
          description: date of report last update
          format: date-time
        payout_date:
          type: string
          description: date when report was paid
          format: date-time
        status:
          type: string
          description: status of report
        period_from:
          type: string
          description: start of report time period
          format: date-time
        period_to:
          type: string
          description: end of report time period
          format: date-time
        accept_expire_at:
          type: string
          description: date when report will be auto-accepted, if merchant didn't
            accept or start a dispute yet
          format: date-time
        accepted_at:
          type: string
          description: date when report was accepted
          format: date-time
        totals:
          $ref: '#/components/schemas/billingRoyaltyReportTotals'
        currency:
          type: string
          description: currency of report
        summary:
          $ref: '#/components/schemas/billingRoyaltyReportSummary'
        dispute_reason:
          type: string
          description: reason of dispute (if it was started)
        dispute_started_at:
          type: string
          description: date of dispute beginning (if it was started)
          format: date-time
        dispute_closed_at:
          type: string
          description: date of dispute resolve (if it was started)
          format: date-time
        is_auto_accepted:
          type: boolean
          description: flag of auto-acceptance
          format: boolean
        payout_document_id:
          type: string
          description: cross-link to payout invoice, that includes this royalty report
        operating_company_id:
          type: string
          description: operating company id
    billingRoyaltyReportCorrectionItem:
      type: object
      properties:
        accounting_entry_id:
          type: string
          description: linked accounting entry id
        amount:
          type: number
          description: amount of correction
          format: double
        currency:
          type: string
          description: currency
        reason:
          type: string
          description: reason if correction
        entry_date:
          type: string
          description: date of correction
          format: date-time
    billingRoyaltyReportProductSummaryItem:
      type: object
      properties:
        product:
          type: string
          description: product or project name
        region:
          type: string
          description: country ISO Alpha2 code
        total_transactions:
          type: integer
          description: total number of transactions for current product/project in
            current country (including sales and returns)
          format: int32
        sales_count:
          type: integer
          description: number of sales for current product/project in current country
          format: int32
        gross_sales_amount:
          type: number
          description: gross amount of sales for current product/project in current
            country
          format: double
        returns_count:
          type: integer
          description: number of returns for current product/project in current country
          format: int32
        gross_returns_amount:
          type: number
          description: gross amount of returns for current product/project in current
            country
          format: double
        gross_total_amount:
          type: number
          description: resulting gross amount for current product/project in current
            country (sales minus returns)
          format: double
        total_fees:
          type: number
          description: fees amount for current product/project in current country
          format: double
        total_vat:
          type: number
          description: vat amount for current product/project in current country
          format: double
        payout_amount:
          type: number
          description: payout amount for current product/project in current country
          format: double
    billingRoyaltyReportSummary:
      type: object
      properties:
        products_items:
          type: array
          description: summary details for each product/project and country
          items:
            $ref: '#/components/schemas/billingRoyaltyReportProductSummaryItem'
        products_total:
          $ref: '#/components/schemas/billingRoyaltyReportProductSummaryItem'
        corrections:
          type: array
          description: list of corrections applied (if any)
          items:
            $ref: '#/components/schemas/billingRoyaltyReportCorrectionItem'
        rolling_reserves:
          type: array
          description: list of rolling reserves applied (if any)
          items:
            $ref: '#/components/schemas/billingRoyaltyReportCorrectionItem'
    billingRoyaltyReportTotals:
      type: object
      properties:
        transactions_count:
          type: integer
          description: total transactions count (including sales and returns)
          format: int32
        fee_amount:
          type: number
          description: fees amount
          format: double
        vat_amount:
          type: number
          description: vat amount
          format: double
        payout_amount:
          type: number
          description: payput amount
          format: double
        rolling_reserve_amount:
          type: number
          description: applied rolling reserve total amount
          format: double
        correction_amount:
          type: number
          description: applied corrections total amount
          format: double
    grpcChangeRoyaltyReport:
      required:
        - reason
      type: object
      properties:
        status:
          type: string
          description: new report status
        reason:
          type: string
          description: correction reason
        correction:
          $ref: '#/components/schemas/grpcChangeRoyaltyReportCorrection'
    grpcChangeRoyaltyReportCorrection:
      required:
        - amount
        - reason
      type: object
      properties:
        amount:
          type: number
          description: correction amount (in report's currency)
          format: double
        reason:
          type: string
          description: correction reason
    grpcRoyaltyReportsPaginate:
      type: object
      properties:
        count:
          type: integer
          description: total items count
          format: int32
        items:
          type: array
          description: royalty reports
          items:
            $ref: '#/components/schemas/billingRoyaltyReport'
    grpcPaylinksPaginate:
      type: object
      properties:
        count:
          title: total found paylinks counter
          type: integer
          format: int32
        items:
          title: paylikns
          type: array
          items:
            $ref: '#/components/schemas/paylinkPaylink'
    paylinkGroupStatCommon:
      type: object
      properties:
        top:
          type: array
          description: top items of grouping stat data
          items:
            $ref: '#/components/schemas/paylinkStatCommon'
        total:
          $ref: '#/components/schemas/paylinkStatCommon'
    paylinkPaylink:
      type: object
      properties:
        id:
          type: string
          description: paylink id
        object:
          type: string
          description: object type
        products:
          type: array
          description: list of products included to paylink
          items:
            type: string
        expires_at:
          type: string
          description: expiration date
          format: date-time
        created_at:
          type: string
          description: creation date
          format: date-time
        updated_at:
          type: string
          description: last updation date
          format: date-time
        merchant_id:
          type: string
          description: paylink merchant id"
        project_id:
          type: string
          description: paylink project id"
        name:
          type: string
          description: paylink name
        is_expired:
          type: boolean
          description: is expired flag
          format: boolean
        visits:
          type: integer
          description: total visits count
          format: int32
        no_expiry_date:
          type: boolean
          description: no expiry date flag
          format: boolean
        products_type:
          type: string
          description: products type
        total_transactions:
          type: integer
          description: total transactions count
          format: int32
        sales_count:
          type: integer
          description: sales count
          format: int32
        returns_count:
          type: integer
          description: returns count
          format: int32
        conversion:
          type: number
          description: conversion (sales per visits relation)
          format: double
        gross_sales_amount:
          type: number
          description: gross sales amount
          format: double
        gross_returns_amount:
          type: number
          description: gross returns amount
          format: double
        gross_total_amount:
          type: number
          description: gross total amount
          format: double
        transactions_currency:
          type: string
          description: transactions currency ISO code
    paylinkStatCommon:
      type: object
      properties:
        paylink_id:
          type: string
          description: paylink id
        visits:
          type: integer
          description: total visits count
          format: int32
        total_transactions:
          type: integer
          description: total transactions count
          format: int32
        sales_count:
          type: integer
          description: sales count
          format: int32
        returns_count:
          type: integer
          description: returns count
          format: int32
        gross_sales_amount:
          type: number
          description: gross sales amount
          format: double
        gross_returns_amount:
          type: number
          description: gross returns amount
          format: double
        gross_total_amount:
          type: number
          description: gross total amount
          format: double
        transactions_currency:
          type: string
          description: transactions currency ISO code
        conversion:
          type: number
          description: conversion, optional
          format: double
        country_code:
          type: string
          description: country iso code A2, optional
        date:
          type: string
          description: date yyyy-mm-dd, optional
        referrer_host:
          type: string
          description: referrer host value, optional
        utm:
          $ref: '#/components/schemas/paylinkUtm'
    paylinkUtm:
      type: object
      properties:
        utm_source:
          type: string
          description: utm_source value
        utm_medium:
          type: string
          description: utm_medium value
        utm_campaign:
          type: string
          description: utm_campaign value
    createPaylinkRequest:
      type: object
      properties:
        id:
          type: string
          description: paylink id, optional, used only for edit existing paylink
        products:
          type: array
          description: list of products included to paylink
          items:
            type: string
        expires_at:
          type: number
          description: expiration date as unix timestamp
        project_id:
          type: string
          description: paylink project id"
        name:
          type: string
          description: paylink name
        no_expiry_date:
          type: boolean
          description: no expiry date flag
          format: boolean
        products_type:
          type: string
          description: products type
    billingVatReport:
      type: object
      properties:
        id:
          type: string
          description: vat report id
        country:
          type: string
          description: country ISO A2 code
        vat_rate:
          type: number
          description: rate value of VAT
          format: double
        currency:
          type: string
          description: vat currency ISO code
        transactions_count:
          type: integer
          description: total transactions count in period
          format: int32
        gross_revenue:
          type: number
          description: gross revenue amount in period
          format: double
        vat_amount:
          type: number
          description: vat amount in period
          format: double
        fees_amount:
          type: number
          description: fees amount in period
          format: double
        deduction_amount:
          type: number
          description: deduction amount in period
          format: double
        correction_amount:
          type: number
          description: manual correction amount in period
          format: double
        status:
          type: string
          description: status
        country_annual_turnover:
          type: number
          description: annual turnover for country
          format: double
        world_annual_turnover:
          type: number
          description: world annual turnover
          format: double
        amounts_approximate:
          type: boolean
          description: flag of non-final amounts due to currency exchange rates delay
          format: boolean
        date_from:
          type: string
          description: period start date
          format: date-time
        date_to:
          type: string
          description: period end date
          format: date-time
        pay_until_date:
          type: string
          description: VAT payment deadline date
          format: date-time
        created_at:
          type: string
          description: report creation date
          format: date-time
        updated_at:
          type: string
          description: report last update date
          format: date-time
        paid_at:
          type: string
          description: date of payment
          format: date-time
        operating_company_id:
          type: string
          description: operating company id
    grpcVatReportsPaginate:
      type: object
      properties:
        count:
          type: integer
          description: total reports count
          format: int32
        items:
          type: array
          description: reports
          items:
            $ref: '#/components/schemas/billingVatReport'
    saved_card.remove.request:
      required:
        - cookie
        - id
      type: object
      properties:
        id:
          type: string
          description: saved card identifier
        cookie:
          type: string
          description: customer cookie value got on payment form data
    operating_company:
      type: object
      properties:
        id:
          type: string
          description: operating company id
        name:
          type: string
          description: operating company name
        country:
          type: string
          description: country
        registration_number:
          type: string
          description: registration_number
        registration_date:
          type: string
          description: registration date
        vat_number:
          type: string
          description: vat_number
        email:
          type: string
          description: company email
        address:
          type: string
          description: address
        vat_address:
          type: string
          description: address for VAT purposes
        signatory_name:
          type: string
          description: signatory_name
        signatory_position:
          type: string
          description: signatory_position
        banking_details:
          type: string
          description: banking_details
        payment_countries:
          type: array
          description: banking_details
          items:
            type: string
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
    operating_company_list:
      type: object
      properties:
        items:
          type: array
          description: list of operating companies
          items:
            $ref: '#/components/schemas/operating_company'
    payment_min_limit_system:
      type: object
      properties:
        currency:
          type: string
          description: limit currency
        amount:
          type: string
          description: limit value
        created_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
        updated_at:
          $ref: '#/components/schemas/ProtobufTimestamp'
    payment_min_limit_system_list:
      type: object
      properties:
        items:
          type: array
          description: list of payment minimum limits system
          items:
            $ref: '#/components/schemas/payment_min_limit_system'
    InviteUserAdmin:
      type: object
      properties:
        email:
          type: string
          description: Email on which to send an invitation
          example: test@paysuper.com
        role:
          type: string
          description: Role of user (system_risk_manager, system_financial, system_support,
            system_view_only)
          example: support
    InviteUserResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        role:
          type: object
          properties: {}
    ResendInviteAdmin:
      type: object
      properties:
        email:
          type: string
          description: Email of invite
          example: test@paysuper.com
    EmptyResponseWithStatus:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
    ListUsersResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserRole'
    AcceptInvite:
      type: object
      properties:
        token:
          type: string
          description: Invitation token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    AcceptInviteResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        role:
          type: object
          properties: {}
          description: User role
    CheckInviteToken:
      type: object
      properties:
        token:
          type: string
          description: Invitation token
          example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    CheckInviteTokenResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        role_id:
          type: string
          description: Identifier of invitation
        role_type:
          type: string
          description: 'Type of invitation: admin or merchant'
          example: admin
    InviteUserMerchant:
      type: object
      properties:
        email:
          type: string
          description: Email on which to send an invitation
          example: test@paysuper.com
        role:
          type: string
          description: Role of user (merchant_developer, merchant_accounting, merchant_support,
            merchant_view_only)
          example: support
    ResendInviteMerchant:
      type: object
      properties:
        email:
          type: string
          description: Email of invite identifier
          example: test@paysuper.com
    UserRole:
      type: object
      properties:
        id:
          type: string
          description: User role identifier
          example: 507f1f77bcf86cd799439011
        merchantId:
          type: string
          description: Merchant identifier (only for merchant users)
          example: 507f1f77bcf86cd799439011
        role:
          type: string
          description: Role of user
          example: developer
        status:
          type: string
          description: 'Status of invitation: invited or approved'
          example: invited
        userId:
          type: string
          description: User identifier
          example: 507f1f77bcf86cd799439011
        firstName:
          type: string
          description: First name of user
          example: John
        lastName:
          type: string
          description: Last name of user
          example: Malkovich
        email:
          type: string
          description: Email of user
          example: test@paysuper.com
        createdAt:
          type: string
          description: Date of creation
          example: developer
        updatedAt:
          type: string
          description: Date of updating
          example: developer
    UserRoleResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        role:
          type: object
          properties: {}
          description: User role
    ListRoleType:
      type: array
      items:
        $ref: '#/components/schemas/ListRoleTypeItem'
    ListRoleTypeItem:
      type: object
      properties:
        id:
          type: string
          description: Role identity
          example: owner
        name:
          type: string
          description: Role name
          example: Owner
    UpdateUserRoleRequest:
      type: object
      properties:
        email:
          type: string
          description: User identity
          example: test@paysuper.com
    MerchantsForUserResponse:
      type: object
      properties:
        status:
          type: number
        message:
          type: string
        role:
          type: object
          properties: {}
          description: User role
    MerchantsForUser:
      type: object
      properties:
        id:
          type: string
          description: Merchant identity
          example: 507f1f77bcf86cd799439011
        name:
          type: string
          description: Merchant name
          example: R&K
    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Key:
      type: object
      properties:
        id:
          type: string
          description: Internal id of key in database
        code:
          type: string
          description: Code for activation
          example: AAAA-BBBB-CCCC-XXXX
        key_product_id:
          type: string
          description: Id of key product
        platform_id:
          type: string
          description: Id of platform
          example: steam
        order_id:
          type: string
          description: Id of order when redeemed, can be null
        created_at:
          type: string
          description: Date and time when key have been added
          format: 'date-time'
        redeemed_at:
          type: string
          description: Date and time when key have been redemed
          format: 'date-time'
        reserved_to:
          type: string
          description: Date and time before key is not available for reserving
          format: 'date-time'
    KeysCountResponse:
      type: object
      properties:
        count:
          type: integer
          description: Total count of keys for product and platform
    KeysProcessed:
      type: object
      properties:
        total_count:
          type: integer
          description: Total count of keys for product and platform
        keys_processed:
          type: integer
          description: Count of keys have been processed
    KeyPlatform:
      type: object
      properties:
        id:
          type: string
          example: gog
        name:
          type: string
          example: Good old games.com
        eula_url:
          type: string
          example: http://www.example.com
        activation_url:
          type: string
          example: http://www.example.com
        count:
          type: number
          description: count of available keys. (used only in merchant listings)
        prices:
          type: array
          items:
            $ref: '#/components/schemas/KeyProductPrice'
    KeyProductPrice:
      type: object
      properties:
        region:
          type: string
          example: EUR
        amount:
          type: number
          format: float
          example: 29.99
        currency:
          type: string
          example: EUR
          enum:
            - EUR
            - USD
            - RUB
    Platform:
      type: object
      properties:
        id:
          type: string
          example:
            steam
        name:
          type: string
          example:
            Steam
    UpdateKeyProduct:
      type: object
      description: Model for updating or creating key product
      properties:
        name:
          type: object
          additionalProperties:
            type: string
          description: name of product
          example:
            en: Best Game Ever
            ru: Лучшая игра
        object:
          type: string
        project_id:
          type: string
          description: Id of project
        description:
          type: object
          additionalProperties:
            type: string
          description: description of description
          example:
            en: Description here
            ru: Описание тут
        long_description:
          type: object
          additionalProperties:
            type: string
          description: long description of description
          example:
            en: Description here
            ru: Описание тут
        sku:
          type: string
          description: sku of product (unique in project)
        cover:
          $ref: '#/components/schemas/ImageCollection'
        url:
          type: string
        enabled:
          type: boolean
        default_currency:
          type: string
          example: USD
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/KeyPlatform'
        pricing:
          description: Pricing mode (currency, manual, steam or default)
          type: string
          example: steam
    KeyProductInfo:
      type: object
      properties:
        id:
          type: string
          description: id of product
        project_id:
          type: string
          description: Id of project
        name:
          type: string
          description: Localized name of product
        description:
          type: string
          description: Localized description of description
        long_description:
          type: string
          description: Localized long description of description
        images:
          type: array
          items:
            type: string
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/KeyPlatformInfo'
        pricing:
          type: string
          description: Pricing mode (currency, manual, steam or default)
          example: steam
    KeyPlatformInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: object
          properties:
            amount:
              type: number
            currency:
              type: string
              example: USD
            region:
              type: string
              example: USD
            is_fallback:
              type: boolean
              description: Flag indicates that price was calculated in default currency instead of specified
    KeyProduct:
      type: object
      properties:
        id:
          type: string
          description: id of product
        merchant_id:
          type: string
          description: Id of merchant
        project_id:
          type: string
          description: Id of project
        name:
          type: object
          additionalProperties:
            type: string
          description: name of product
        description:
          type: object
          additionalProperties:
            type: string
          description: description of description
        long_description:
          type: object
          additionalProperties:
            type: string
          description: long description of description
        created_at:
          type: string
          format: 'date-time'
        updated_at:
          type: string
          format: 'date-time'
        sku:
          type: string
          description: sku of product
        cover:
          $ref: '#/components/schemas/ImageCollection'
        url:
          type: string
        enabled:
          type: boolean
        default_currency:
          type: string
          example: USD
        platforms:
          type: array
          items:
            $ref: '#/components/schemas/KeyPlatform'
        published_at:
          description: Date and time when product has been published. May be null
          type: string
          format: 'date-time'
        pricing:
          description: Pricing mode (currency, manual, steam or default)
          type: string
          example: 'steam'
        billing_type:
          description: Type of billing
          type: string
          enum:
            - real
            - virtual
    ImageCollection:
      type: object
      properties:
        images:
          type: object
          additionalProperties:
            type: string
          example:
            en: "http://example.com"
            ru: "http://example.com"
            de: "http://example.com"
          description: Localized images
        use_one_for_all:
          type: boolean
          description: Use "en" as default image for all
          example: true
