# Common schemas
model.Error:
  type: object
  properties:
    message:
      type: string
      description: |
        text error description
    code:
      type: string
      description: error code

# Public schemas
model.Country:
  type: object
  properties:
    code_a2:
      type: string
      description: |
        2 chars ISO 3166-1 country code
    code_a3:
      type: string
      description: |
        3 chars ISO 3166-1 country code
    code_int:
      type: integer
      description: |
        numeric ISO 3166-1 country code
    created_at:
      type: string
      description: |
        date of create country in system
    is_active:
      type: boolean
      description: |
        is country active
    name:
      $ref: '#/components/schemas/model.Name'
model.JsonOrderCreateResponse.user.address:
  type: object
  properties:
    country:
      type: string
      description: string representing the the user's country. two-letter uppercase
        country code in ISO 3166-1 alpha-2 format
    city:
      type: string
      description: user's city
    zip:
      type: string
      description: postal code
model.JsonOrderCreateResponse.item:
  type: object
  properties:
    id:
      type: string
      description: item identifier
    object:
      type: string
      description: item type
    sku:
      type: string
      description: item sku identifier
    name:
      type: string
      description: item name
    description:
      type: string
      description: item description
    amount:
      type: number
      description: item price
    currency:
      type: string
      description: item price currency. three-letter ISO 4217 currency code, in
        uppercase.
    images:
      type: array
      description: list of urls to item images
      items:
        type: string
    url:
      type: object
      description: url to item on project site
    metadata:
      type: object
      properties: {}
      description: object contain item metadata
    code:
      type: string
      description: item code
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    platform_id:
      type: string
      description: item platform identifier
model.JsonOrderCreateResponse:
  type: object
  properties:
    id:
      type: string
      description: order unique identifier
    payment_form_url:
      type: string
      description: url to payment form
model.PaymentFormDataResponse:
  type: object
  properties:
    account:
      type: string
      description: |
        user account, may be null
    has_vat:
      type: boolean
      description: |
        flag to show VAT commission amount in payment form
    vat:
      type: number
      description: VAT amount
    amount:
      type: number
      description: order amount without VAT
    total_amount:
      type: number
      description: total order amount with VAT
    currency:
      type: string
      description: order currency
    user_address_data_required:
      type: boolean
      description: flag to get information about user real geo position
    id:
      type: string
      description: |
        order unique identifier
    payment_methods:
      type: array
      description: |
        contain data about payment methods
      items:
        $ref: '#/components/schemas/model.PaymentMethodJsonOrderResponse'
    project:
      $ref: '#/components/schemas/model.ProjectJsonOrderResponse'
    token:
      type: string
      description: |
        access token to websocket private chanel
    user_ip_data:
      $ref: '#/components/schemas/model.JsonOrderCreateResponse.user.address'
    items:
      type: array
      description: list of buyed items in order
      items:
        $ref: '#/components/schemas/model.JsonOrderCreateResponse.item'
    cookie:
      type: string
      description: value to set to cookie for user identification. if user was
        identified by other data than value can be empty.
    email:
      type: string
      description: user email
    description:
      type: string
      description: order description
    country_payments_allowed:
      type: boolean
      description: true is payments from user country is allowed
    country_change_allowed:
      type: boolean
      description: true if user can change self country if payments from his country
        disallow
    platforms:
      type: array
      description: list of supported platforms if this payment with type key (for
        other types this field can be empty)
      items:
        type: string
model.Name:
  type: object
  properties:
    en:
      type: string
      description: |
        english name
    ru:
      type: string
      description: |
        russian name
model.OrderCreatePaymentRequest:
  type: object
  properties:
    address:
      type: string
      description: |
        user wallet address in crypto payment system. required only for crypto payment
    card_holder:
      type: string
      description: |
        bank card card holder name. required only for bank card payment
    cvv:
      type: integer
      description: |
        bank card cvv code. required only for bank card payment
    ewallet:
      type: string
      description: |
        user account in ewallet payment system. required only for ewallet payment
    month:
      type: integer
      description: |
        month of expire date of user bank card. required only for bank card payment
    order_id:
      type: string
      description: |
        unique identifier of order on PSP (P1) side
    pan:
      type: string
      description: |
        user bank card number. required only for bank card payment
    payment_method_id:
      type: string
      description: |
        unique identifier of payment method by PSP (P1) classifier
    year:
      type: integer
      description: |
        year of expire date of user bank card. required only for bank card payment
order.project:
  type: object
  properties:
    id:
      type: string
      description: project unique identifier
    merchant_id:
      type: string
      description: project merchant unique identifier
    url_success:
      type: string
      description: url for redirect user after successfully completed payment
    url_fail:
      type: string
      description: url for redirect user after failed payment
    send_notify_email:
      type: boolean
      description: flag to send notification emails by "notify_emails" list after
        successfully completed payment
    notify_emails:
      type: array
      description: emails list to send notification email after successfully completed
        payment
      items:
        type: string
    secret_key:
      type: string
      description: project secret key
    url_check_account:
      type: string
      description: callback url to check payment requisites
    url_process_payment:
      type: string
      description: callback url to send payment complete request
    callback_protocol:
      type: string
      description: 'type of callback notification protocol. now available next
            values: empty - notification request not send, order just mark as successfully
            complete; default - notification request send by PaySuper notification
            protocol;'
order.payment_method.card:
  type: object
  properties:
    first6:
      type: string
      description: string representing the first 6 digits of the card. Available
        only for a card method
    last4:
      type: string
      description: string representing the last 4 digits of the card. Available
        only for a card method
    masked:
      type: string
      description: masked pan of bank card
    expiry_month:
      type: string
      description: month of expiration bank card
    expiry_year:
      type: string
      description: year of expiration bank card
    brand:
      type: string
      description: bank card brand
    fingerprint:
      type: string
      description: string representing the internal fingerprint for given card
    secure3d:
      type: boolean
      description: true is 3DS secure was used during payment
order.payment_method.wallet:
  type: object
  properties:
    brand:
      type: string
      description: name of payment system
    account:
      type: string
      description: payer wallet number in payment system
order.payment_method.crypto_currency:
  type: object
  properties:
    brand:
      type: string
      description: name of crypto currency system
    address:
      type: string
      description: payer address in crypto cyrrency system
order.payment_method:
  type: object
  properties:
    title:
      type: string
      description: payment method name
    external_id:
      type: string
      description: payment method identifier in payment system
    payment_system_id:
      type: string
      description: payment system identifier
    saved:
      type: boolean
      description: true is payment method was saved by user for future usage
    card:
      $ref: '#/components/schemas/order.payment_method.card'
    wallet:
      $ref: '#/components/schemas/order.payment_method.wallet'
    crypto_currency:
      $ref: '#/components/schemas/order.payment_method.crypto_currency'
order.user.address:
  type: object
  properties:
    country:
      type: string
      description: string representing the the user's country. two-letter uppercase
        country code in ISO 3166-1 alpha-2 format
    city:
      type: string
      description: user's city
    postal_code:
      type: string
      description: postal code
    state:
      type: string
      description: state name
order.user:
  type: object
  properties:
    id:
      type: string
      description: customer identity identifier
    object:
      type: string
      description: constant with object name
    external_id:
      type: string
      description: user identifier in project
    name:
      type: string
      description: user name
    email:
      type: string
      description: user email
    email_verified:
      type: boolean
      description: true is email was verified
    phone:
      type: string
      description: user phone
    phone_verified:
      type: boolean
      description: true is phone was verified
    ip:
      type: string
      description: user ip address
    locale:
      type: string
      description: user's locale. two-letter code in lowercase
    address:
      $ref: '#/components/schemas/order.user.address'
    metadata:
      type: object
      properties: {}
      description: set of key-value pairs that attached to an object on create
        order state
    notify_new_region:
      type: boolean
      description: true is user wanting to receiving notification when paysuper
        will work in user's region
    notify_new_region_email:
      type: string
      description: user's email to send notification email when paysuper starting
        work in user's region
order.money:
  type: object
  properties:
    amount:
      type: number
      description: entry amount
    currency:
      type: string
      description: entry currency. three-letter ISO 4217 currency code, in uppercase.
order.public:
  type: object
  properties:
    uuid:
      type: string
      description: order unique identifier
    total_payment_amount:
      type: number
      description: payment amount
    currency:
      type: string
      description: payment currency. three-letter ISO 4217 currency code, in uppercase.
    project:
      $ref: '#/components/schemas/order.project'
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    transaction:
      type: string
      description: unique identifier for the transaction in payment system
    transaction_date:
      $ref: '#/components/schemas/ProtobufTimestamp'
    payment_method:
      $ref: '#/components/schemas/order.payment_method'
    country_code:
      type: string
      description: string representing the the user's country. two-letter uppercase
        country code in ISO 3166-1 alpha-2 format
    merchant_id:
      type: string
      description: project merchant unique identifier
    locale:
      type: string
      description: user's locale. two-letter code in lowercase
    status:
      type: string
      description: 'string representing the order current status. possible statuses:
            created - the order created but not processed yet; canceled - the order
            was canceled and money refunded to user; rejected - the order was rejected
            by payment system with any reasons; processed - the order was processed
            in payment system;'
    user:
      $ref: '#/components/schemas/order.user'
    billing_address:
      $ref: '#/components/schemas/order.user.address'
    type:
      type: string
      description: constant with object type
    is_vat_deduction:
      type: boolean
      description: true is vat deduction
    gross_revenue:
      $ref: '#/components/schemas/order.money'
    tax_fee:
      $ref: '#/components/schemas/order.money'
    tax_fee_currency_exchange_fee:
      $ref: '#/components/schemas/order.money'
    tax_fee_total:
      $ref: '#/components/schemas/order.money'
    method_fee_total:
      $ref: '#/components/schemas/order.money'
    method_fee_tariff:
      $ref: '#/components/schemas/order.money'
    method_fixed_fee_tariff:
      $ref: '#/components/schemas/order.money'
    paysuper_fixed_fee:
      $ref: '#/components/schemas/order.money'
    fees_total:
      $ref: '#/components/schemas/order.money'
    fees_total_local:
      $ref: '#/components/schemas/order.money'
    net_revenue:
      $ref: '#/components/schemas/order.money'
    refund_gross_revenue:
      $ref: '#/components/schemas/order.money'
    method_refund_fee_tariff:
      $ref: '#/components/schemas/order.money'
    merchant_refund_fixed_fee_tariff:
      $ref: '#/components/schemas/order.money'
    refund_tax_fee:
      $ref: '#/components/schemas/order.money'
    refund_tax_fee_currency_exchange_fee:
      $ref: '#/components/schemas/order.money'
    paysuper_refund_tax_fee_currency_exchange_fee:
      $ref: '#/components/schemas/order.money'
    refund_reverse_revenue:
      $ref: '#/components/schemas/order.money'
    refund_fees_total:
      $ref: '#/components/schemas/order.money'
    refund_fees_total_local:
      $ref: '#/components/schemas/order.money'
    items:
      type: array
      description: list of buyed items in order
      items:
        $ref: '#/components/schemas/model.JsonOrderCreateResponse.item'
    issuer:
      $ref: '#/components/schemas/order.issuer'
    merchant_payout_currency:
      type: string
      description: merchant payout currency
    parent:
      $ref: '#/components/schemas/order.parent'
    refund:
      $ref: '#/components/schemas/order.refund'
    cancellation:
      $ref: '#/components/schemas/order.cancellation'
    operating_company_id:
      type: string
      description: merchant operating company id
    refund_allowed:
      type: string
      description: refund allowed flag
order.parent:
  type: object
  properties:
    id:
      type: string
      description: parent order id
    uuid:
      type: string
      description: parent order uuid
order.refund:
  type: object
  properties:
    amount:
      type: number
      description: refund amount
    currency:
      type: string
      description: refund currency
    reason:
      type: string
      description: refund reason
    code:
      type: string
      description: refund code
    receipt_number:
      type: string
      description: refund receipt_number
    receipt_url:
      type: string
      description: refund receipt_url
order.cancellation:
  type: object
  properties:
    reason:
      type: string
      description: refund reason
    code:
      type: string
      description: refund code
order.list.public:
  type: object
  properties:
    count:
      type: integer
      description: total count of selected orders
    items:
      type: array
      description: array of selected orders
      items:
        $ref: '#/components/schemas/order.public'
order.issuer:
  type: object
  properties:
    url:
      type: string
      description: referrer full url
    embedded:
      type: boolean
      description: flag of embedded form
    reference:
      type: string
      description: reference id
    reference_type:
      type: string
      description: reference type
    utm_source:
      type: string
      description: utm_source value
    utm_medium:
      type: string
      description: utm_medium value
    utm_campaign:
      type: string
      description: utm_campaign value
    referrer_host:
      type: string
      description: referrer host
order.create.request.user:
  type: object
  properties:
    external_id:
      type: string
      description: user identifier on project side
    name:
      type: string
      description: user name
    email:
      type: string
      description: user email
    email_verified:
      type: boolean
      description: user email was verified by project
    phone:
      type: string
      description: user phone
    phone_verified:
      type: boolean
      description: user phone was verified by project
    ip:
      type: string
      description: user ip address
    locale:
      type: string
      description: user's locale. two-letter code in lowercase
    address:
      $ref: '#/components/schemas/order.BillingAddress'
    metadata:
      type: object
      properties: {}
      description: object can contain any other information about user. object
        must contain only string values.
model.OrderScalar:
  required:
    - project
    - type
  type: object
  properties:
    account:
      type: string
      description: user unique account in project
    amount:
      type: number
      description: order amount. if payment type is simple this field is required
    currency:
      type: string
      description: amount currency. three-letter ISO 4217 currency code, in uppercase.
        if payment type is simple this field is required
    description:
      type: string
      description: order description
    order_id:
      type: string
      description: unique order identifier on project side. this field not required,
        BUT we're recommend send this field always
    project:
      type: string
      description: project unique identifier in PaySuper
    url_fail:
      type: string
      description: url for redirect user after failed payment. this field can
        be send if it allowed in project admin panel
    url_success:
      type: string
      description: url for redirect user after successfully completed payment.
        this field can be send if it allowed in project admin panel
    type:
      type: string
      description: 'order type. now available next types: simple, product and
            key'
      enum:
        - simple
        - product
        - key
        - virtual_currency
    products:
      type: array
      description: list of products (or key products) of project which customer
        want to buy. if payment type is product or key this field is required.
      items:
        type: string
    platform_id:
      type: string
      description: platform identifier for which customer buy key products. if
        payment type is key this field is required.
      enum:
        - steam
        - gog
        - uplay
        - origin
        - psn
        - xbox
        - nintendo
        - itch
        - egs
    token:
      type: string
      description: pre-created customer payment token. if sending pre-created
        token other request parameters not required.
    user:
      $ref: '#/components/schemas/order.create.request.user'
    is_buy_for_virtual_currency:
      type: boolean
      description: flag indicates that order should be processed using virtual
        currency
model.PaymentMethodJsonOrderResponse:
  type: object
  properties:
    account_regexp:
      type: string
      description: |
        regexp mask for check main requisite of payment method
    group_alias:
      type: string
      description: |
        payment method group alias
    icon:
      type: string
      description: |
        url to payment method icon
    id:
      type: string
      description: |
        payment method unique identifier
    name:
      type: string
      description: |
        payment method name
    type:
      type: string
      description: |
        payment method type. allowed: bank_card, ewallet, crypto
model.Project:
  type: object
  properties:
    id:
      type: string
      description: |
        unique project identifier
    merchant_id:
      type: string
      description: project merchant id
    image:
      type: string
      description: url to project logo
    callback_currency:
      type: string
      description: currency to send payment notification
    callback_protocol:
      type: string
      description: |
        protocol identifier to send payment notification. Now available: default, empty
    create_invoice_allowed_urls:
      type: array
      description: |
        list of urls rom which you can send a request to create an order
      items:
        type: string
    status:
      type: integer
      description: 'project status. now available: 0 - new project; 1 - project
            successfully complete integration tests; 2 - project fail one or more
            integration test; 3 - project in production; 4 - project deleted'
    allow_dynamic_notify_urls:
      type: boolean
      description: |
        is allow send dynamic notification urls in request to create an order
    allow_dynamic_redirect_urls:
      type: boolean
      description: |
        is allow send dynamic user's redirect urls in request to create an order
    limits_currency:
      type: string
      description: currency for amount's limit
    max_payment_amount:
      type: number
      description: |
        maximal amount allowed for create order
    min_payment_amount:
      type: number
      description: |
        minimal amount allowed for create order
    name:
      type: object
      properties: {}
      description: 'project names map in other language: {"en": "project name",
            "ru": "имя проекта"}'
    notify_emails:
      type: array
      description: |
        list of emails to send notifications about successfully completed payment operations
      items:
        type: string
    is_products_checkout:
      type: boolean
      description: |
        is allow create order only with amounts from products list
    secret_key:
      type: string
      description: |
        secret key for create check hash for request about order statuses changes
    send_notify_email:
      type: boolean
      description: |
        is allow send notifications about successfully completed payment operations to user's emails
    url_check_account:
      type: string
      description: |
        default url to send request for verification payment data to project
    url_process_payment:
      type: string
      description: |
        default url to send request for notification about successfully completed payment to project
    url_redirect_fail:
      type: string
      description: |
        default url to redirect user after failed payment
    url_redirect_success:
      type: string
      description: |
        default url to redirect user after successfully completed payment
    products_count:
      type: integer
      description: count of project's products
    created_at:
      type: object
      properties: {}
      description: date of create merchant in system in unix timestamp
    updated_at:
      type: object
      properties: {}
      description: date of update merchant in system in unix timestamp
    localizations:
      type: array
      description: languages for product to localize
      items:
        type: string
    full_description:
      type: object
      additionalProperties:
        type: string
      description: localized full description for product
    short_description:
      type: object
      additionalProperties:
        type: string
      description: localized short description for product
    cover:
      type: object
      properties:
        images:
          type: object
          additionalProperties:
            type: string
          example:
            en: en_image
            ru: ru_image
        use_one_for_all:
          type: boolean
    virtual_currency:
      $ref: '#/components/schemas/model.VirtualCurrency'
model.VirtualCurrency:
  type: object
  properties:
    logo:
      type: string
    name:
      type: string
      example: ""
    success_message:
      type: string
      example: ""
    min_purchase_value:
      type: number
      format: double
    max_purchase_value:
      type: number
      format: double
    sell_count_type:
      type: string
      enum:
        - fractional
        - integral
    prices:
      type: array
      items:
        $ref: '#/components/schemas/product.Price'
model.ProjectJsonOrderResponse:
  type: object
  properties:
    name:
      type: string
      description: |
        project name
    url_fail:
      type: string
      description: |
        url to redirect user after failed payment. may be NULL if not set in project settings
    url_success:
      type: string
      description: |
        url to redirect user after successfully completed payment. may be NULL if not set in project settings
payment_system.PaymentResponse:
  type: object
  properties:
    error:
      type: string
    redirect_url:
      type: string
taxes.TaxRate:
  required:
    - country
    - rate
  type: object
  properties:
    id:
      type: string
    country:
      type: string
    city:
      type: string
    state:
      type: string
    zip:
      type: string
    rate:
      type: number
report_file.CreateReportFileParams:
  required:
    - file_type
    - params
    - report_type
  type: object
  properties:
    merchant_id:
      type: string
    file_type:
      type: string
    report_type:
      type: string
    template:
      type: string
    params:
      type: object
      properties: {}
report_file.CreateReportFileResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    file_id:
      type: string
payment_method.PaymentMethodParams:
  required:
    - currency
  type: object
  properties:
    currency:
      type: string
    terminal_id:
      type: string
    secret:
      type: string
    secret_callback:
      type: string
payment_method.PostProductMethod:
  required:
    - external_id
    - name
    - payment_system_id
  type: object
  properties:
    name:
      type: string
      description: Name of method
    group_alias:
      type: string
      description: Name of group for currency type
    external_id:
      type: string
      description: External id
    currencies:
      type: array
      description: List of currency int codes
      items:
        type: integer
    min_payment_amount:
      type: integer
      description: Minimal payment amount
    max_payment_amount:
      type: integer
      description: Maximum payment amount
    type:
      type: string
      description: Type of payment method
    account_regexp:
      type: string
      description: Regular expression for validation
    is_active:
      type: boolean
      description: Active or not
    payment_system_id:
      type: string
      description: Payment system identifier
    test_settings:
      type: array
      description: List of test settings
      items:
        $ref: '#/components/schemas/payment_method.PaymentMethodParams'
    production_settings:
      type: array
      description: List of production settings
      items:
        $ref: '#/components/schemas/payment_method.PaymentMethodParams'
payment_method.PutProductMethod:
  required:
    - external_id
    - id
    - name
    - payment_system_id
  type: object
  properties:
    id:
      type: string
      description: Payment method identifier
    name:
      type: string
      description: Name of method
    group_alias:
      type: string
      description: Name of group for currency type
    external_id:
      type: string
      description: External id
    currencies:
      type: array
      description: List of currency int codes
      items:
        type: integer
    min_payment_amount:
      type: integer
      description: Minimal payment amount
    max_payment_amount:
      type: integer
      description: Maximum payment amount
    type:
      type: string
      description: Type of payment method
    account_regexp:
      type: string
      description: Regular expression for validation
    is_active:
      type: boolean
      description: Active or not
    payment_system_id:
      type: string
      description: Payment system identifier
    test_settings:
      type: array
      description: List of test settings
      items:
        $ref: '#/components/schemas/payment_method.PaymentMethodParams'
    production_settings:
      type: array
      description: List of production settings
      items:
        $ref: '#/components/schemas/payment_method.PaymentMethodParams'
payment_method.UpdatePaymentMethodParams:
  required:
    - id
    - params
    - payment_system_id
  type: object
  properties:
    id:
      type: string
      description: Payment method identifier
    payment_system_id:
      type: string
      description: Payment system identifier
    params:
      $ref: '#/components/schemas/payment_method.PaymentMethodParams'
onboarding.Contacts.Authorized:
  required:
    - email
    - name
    - phone
    - position
  type: object
  properties:
    name:
      type: string
      description: person full name
    email:
      type: string
      description: person email
    phone:
      type: string
      description: person contact phone
    position:
      type: string
      description: person position in company
onboarding.Contacts.Technical:
  required:
    - email
    - name
    - phone
  type: object
  properties:
    name:
      type: string
      description: person full name
    email:
      type: string
      description: person email
    phone:
      type: string
      description: person contact phone
onboarding.Company:
  required:
    - address
    - alternative_name
    - city
    - country
    - name
    - state
    - website
    - zip
  type: object
  properties:
    name:
      type: string
      description: name
    alternative_name:
      type: string
      description: brand
    website:
      type: string
      description: website url
    country:
      type: string
      description: destination country 2 letter code by ISO 3166-1
    state:
      type: string
      description: destination state or region
    zip:
      type: string
      description: destination zip code
    city:
      type: string
      description: destination city
    address:
      type: string
      description: destination address
    address_additional:
      type: string
      description: additional company address
    registration_number:
      type: string
      description: company registration number
    tax_id:
      type: string
      description: company tax identifier
onboarding.Contacts:
  required:
    - authorized
    - technical
  type: object
  properties:
    authorized:
      $ref: '#/components/schemas/onboarding.Contacts.Authorized'
    technical:
      $ref: '#/components/schemas/onboarding.Contacts.Technical'
onboarding.Banking:
  required:
    - account_number
    - address
    - name
    - swift
  type: object
  properties:
    name:
      type: string
      description: bank name
    address:
      type: string
      description: bank address
    account_number:
      type: string
      description: merchant accounting number in bank
    swift:
      type: string
      description: bank SWIFT code
    details:
      type: string
      description: any details abount merchant accounting bank
    correspondent_account:
      type: string
      description: bank correspondent account
onboarding.Merchant.LastPayout:
  type: object
  properties:
    date:
      type: integer
      description: date in unix timestamp when was last payout to merchant
    amount:
      type: number
      description: last payout amount to merchant
onboarding.Tariff.Item:
  type: object
  properties:
    method_percent_fee:
      type: number
      description: payment method fee in percents
    method_fixed_fee:
      type: number
      description: payment method fixed fee in particular currency
    method_fixed_fee_currency:
      type: string
      description: currency of payment method fixed fee.  letters code by ISO
        4217
    is_paid_by_merchant:
      type: boolean
      description: if true than commission will to take from merchant
onboarding.Tariff.Payment:
  type: object
  properties:
    min_amount:
      type: number
      description: min payment amount
    max_amount:
      type: number
      description: max payment amount
    method_name:
      type: string
      description: payment method name
    method_percent_fee:
      type: number
      description: payment method fee in percents
    method_fixed_fee:
      type: number
      description: payment method fixed fee in particular currency
    method_fixed_fee_currency:
      type: string
      description: currency of payment method fixed fee.  letters code by ISO
        4217
    ps_percent_fee:
      type: number
      description: paysuper fee in percents
    ps_fixed_fee:
      type: number
      description: paysuper fixed fee in particular currency
    ps_fixed_fee_currency:
      type: string
      description: currency of paysuper fixed fee.  letters code by ISO 4217
    merchant_home_region:
      type: string
      description: merchant region name
    payer_regions:
      type: string
      description: payer region name
onboarding.Tariff:
  type: object
  properties:
    payment:
      $ref: '#/components/schemas/onboarding.Tariff.Payment'
    refund:
      $ref: '#/components/schemas/onboarding.Tariff.Item'
    chargeback:
      $ref: '#/components/schemas/onboarding.Tariff.Item'
    payout:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/onboarding.Tariff.Item'
      description: payout tariff
      example:
        RUB:
          method_percent_fee: 0
          method_fixed_fee: 1000
          method_fixed_fee_currency: RUB
          is_paid_by_merchant: true
        USD:
          method_percent_fee: 0
          method_fixed_fee: 10
          method_fixed_fee_currency: USD
          is_paid_by_merchant: true
    minimal_payout:
      type: object
      additionalProperties:
        type: number
      description: minimal payout amount
      example:
        RUB: 10000
        USD: 100
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
onboarding.Tariff.Set.Request:
  type: object
  properties:
    home_region:
      type: string
      description: 'merchant home region name. possible values: asia, europe,
            latin_america, russia_and_cis, worldwide'
    merchant_operations_type:
      type: string
      description: merchant operations type. possible values are low-risk, high-risk
onboarding.Merchant.user:
  type: object
  properties:
    id:
      type: string
      description: user identifier
    email:
      type: string
      description: user email
    first_name:
      type: string
      description: user first name
    last_name:
      type: string
      description: user last name
    profile_id:
      type: string
      description: user primary onboarding profile identifier
    registration_date:
      $ref: '#/components/schemas/ProtobufTimestamp'
onboarding.Merchant.tariffs:
  type: object
  properties:
    home_region:
      type: string
      description: merchant tariff home region
      enum:
        - asia
        - europe
        - latin_america
        - russia_and_cis
        - worldwide
onboarding.Merchant:
  type: object
  properties:
    id:
      type: string
      description: merchant unique identifier in system
    company:
      $ref: '#/components/schemas/onboarding.Company'
    contacts:
      $ref: '#/components/schemas/onboarding.Contacts'
    banking:
      $ref: '#/components/schemas/onboarding.Banking'
    status:
      type: integer
      description: merchant status in system
    created_at:
      type: integer
      description: date of create merchant in system in unix timestamp
    updated_at:
      type: integer
      description: date of update merchant in system in unix timestamp
    first_payment_at:
      type: integer
      description: date when was first payment by some merchant project in system
        in unix timestamp
    last_payout:
      $ref: '#/components/schemas/onboarding.Merchant.LastPayout'
    is_signed:
      type: boolean
      description: agreement between merchant and system fully signed
    payment_methods:
      type: object
      properties: {}
      description: list of payment methods activated to merchant
    agreement_type:
      type: integer
      description: 'type of agreement which merchant selected. possible values:
            0 - type not select; 1 - paper agreement; 2 - e-sign agreement;'
    agreement_sent_via_mail:
      type: boolean
      description: mark agreement as sent via post
    mail_tracking_link:
      type: string
      description: link to tracking package with agreement in post
    agreement_template:
      type: string
      description: license agreement template identifier in hellosign
    received_date:
      $ref: '#/components/schemas/ProtobufTimestamp'
    status_last_updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    has_projects:
      type: boolean
      description: true is merchant has created projects
    user:
      $ref: '#/components/schemas/onboarding.Merchant.user'
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
    operating_company_id:
      type: string
      description: id of operation company for which this cost is applicable
    tariff:
      $ref: '#/components/schemas/onboarding.Merchant.tariffs'
onboarding.Merchant.ChangeStatus:
  required:
    - status
  type: object
  properties:
    status:
      type: integer
      description: 'new status identifier of merchant. possible statuses: 5 -
            deleted, 6 - rejected'
    message:
      type: string
      description: string description to new status
payment_method.ChangePaymentMethodResponse:
  required:
    - status
  type: object
  properties:
    status:
      type: integer
      description: status as result of operation
    message:
      type: string
      description: string description for error message
payment_method.ChangePaymentMethodParamsResponse:
  required:
    - status
  type: object
  properties:
    status:
      type: integer
      description: status as result of operation
    message:
      type: string
      description: string description for error message
price_group.CurrencyRegion:
  type: object
  properties:
    id:
      type: string
      description: price group identifier
    region:
      type: string
      description: name of region
    currency:
      type: string
      description: code of currency
price_group.CurrencyListResponse:
  type: object
  properties:
    regions:
      $ref: '#/components/schemas/price_group.Regions'
price_group.Regions:
  type: object
  properties:
    currency:
      type: string
      description: name of currency
    region:
      $ref: '#/components/schemas/price_group.Region'
price_group.Region:
  type: object
  properties:
    region:
      type: string
      description: name of region
    country:
      type: array
      description: list of countries
price_group.RecommendedPriceResponse:
  type: object
  properties:
    recommended_price:
      $ref: '#/components/schemas/price_group.RecommendedPrice'
price_group.RecommendedPrice:
  type: object
  properties:
    region:
      type: string
      description: name of region
    currency:
      type: string
      description: name of currency
    amount:
      type: number
      description: recommended amount
price_group.RecommendedPriceTableResponse:
  type: object
  properties:
    ranges:
      $ref: '#/components/schemas/price_group.RecommendedPriceTableItem'
price_group.RecommendedPriceTableItem:
  type: object
  properties:
    from:
      type: integer
      description: start point of range
    to:
      type: integer
      description: end point of range
onboarding.Merchant.Notification.Statuses:
  type: object
  properties:
    from:
      type: integer
      description: status before changes
    to:
      type: integer
      description: status after changes
onboarding.Merchant.Notification:
  type: object
  properties:
    id:
      type: string
      description: notification unique identifier in system
    title:
      type: string
      description: notification title
    message:
      type: string
      description: notification message
    merchant_id:
      type: string
      description: merchant identifier who must recieve notification
    user_id:
      type: string
      description: user identifier who send notification
    is_system:
      type: boolean
      description: notification generated automaticaly
    is_read:
      type: boolean
      description: receiver read notification
    statuses:
      $ref: '#/components/schemas/onboarding.Merchant.Notification.Statuses'
    created_at:
      type: integer
      description: dete of create notification in unix timestamp format
    updated_at:
      type: integer
      description: dete of last update notification in unix timestamp format
onboarding.Merchant.Notifications:
  type: object
  properties:
    count:
      type: integer
      description: total number of filtered notifications
    items:
      $ref: '#/components/schemas/onboarding.Merchant.Notification'
onboarding.Merchant.Notification.CreateRequest:
  required:
    - message
    - title
  type: object
  properties:
    title:
      type: string
      description: notification title
    message:
      type: string
      description: notification message
order.Refund:
  type: object
  properties:
    id:
      type: string
      description: refund unique identifier
    order_id:
      type: string
      description: order unique identifier for which the refund was created
    external_id:
      type: string
      description: refund unique identifier on payment system side
    amount:
      type: number
      description: refund amount
    creator_id:
      type: string
      description: user identifier who created refund
    reason:
      type: string
      description: reason to refund
    currency:
      type: string
      description: refund currency
    status:
      type: integer
      description: 'refund status. available statuses: 0 - refund was created;
            1 - refund rejected on payment system side; 2 - refund in processing on
            payment system side; 3 - refund successfully completed;'
    created_at:
      type: integer
      description: dete of create notification in unix timestamp format
    updated_at:
      type: integer
      description: dete of last update notification in unix timestamp format
order.Refund.CreateRequest:
  required:
    - amount
  type: object
  properties:
    amount:
      type: number
      description: refund amount
    reason:
      type: string
      description: reason to refund
onboarding.Merchant.ChangeAgreementDataRequest:
  type: object
  properties:
    has_psp_signature:
      type: boolean
      description: flag for set peysuper signature on the agreement
    has_merchant_signature:
      type: boolean
      description: flag for set merchant signature on the agreement
onboarding.Merchant.PrintableAgreementData.Metadata:
  required:
    - content_type
    - extension
    - name
    - size
  type: object
  properties:
    name:
      type: string
      description: agreement file name
    extension:
      type: string
      description: agreement file extension
    content_type:
      type: string
      description: agreement file content type
    size:
      type: integer
      description: agreement file size in Kb
onboarding.Merchant.PrintableAgreementData.Response:
  type: object
  properties:
    url:
      type: string
      description: link to download printable agreement
    metadata:
      $ref: '#/components/schemas/onboarding.Merchant.PrintableAgreementData.Metadata'
onboarding.Merchant.ChangeAgreementType.Request:
  required:
    - agreement_type
  type: object
  properties:
    agreement_type:
      type: integer
      description: 'type of agreement which merchant selected. possible values:
            1 - paper agreement; 2 - e-sign agreement;'
projects.CreateRequest:
  type: object
  properties:
    merchant_id:
      type: string
      description: project merchant id
    image:
      type: string
      description: url to project logo
    callback_currency:
      type: string
      description: currency to send payment notification
    callback_protocol:
      type: string
      description: 'protocol identifier to send payment notification. Now available:
            default, empty'
    create_invoice_allowed_urls:
      type: array
      description: list of urls rom which you can send a request to create an
        order
      items:
        type: string
    allow_dynamic_notify_urls:
      type: boolean
      description: is allow send dynamic notification urls in request to create
        an order
    allow_dynamic_redirect_urls:
      type: boolean
      description: is allow send dynamic user's redirect urls in request to create
        an order
    limits_currency:
      type: string
      description: currency for amount's limit
    max_payment_amount:
      type: number
      description: maximal amount allowed for create order
    min_payment_amount:
      type: number
      description: minimal amount allowed for create order
    name:
      type: object
      properties: {}
      description: 'project names map in other language: {"en": "project name",
            "ru": "имя проекта"}'
    notify_emails:
      type: array
      description: list of emails to send notifications about successfully completed
        payment operations
      items:
        type: string
    is_products_checkout:
      type: boolean
      description: is allow create order only with amounts from products list
    secret_key:
      type: string
      description: secret key for create check hash for request about order statuses
        changes
    send_notify_email:
      type: boolean
      description: is allow send notifications about successfully completed payment
        operations to user's emails
    url_check_account:
      type: string
      description: default url to send request for verification payment data to
        project
    url_process_payment:
      type: string
      description: |
        default url to send request for notification about successfully completed payment to project
    url_redirect_fail:
      type: string
      description: default url to redirect user after failed payment
    url_redirect_success:
      type: string
      description: default url to redirect user after successfully completed payment
order.BillingAddress:
  type: object
  properties:
    country:
      type: string
      description: 2 chars country code in upper registry by ISO 3166-1
    city:
      type: string
      description: city name
    postal_code:
      type: string
      description: zip code
    state:
      type: string
      description: state code by ISO 3166-2
token.TokenRequest.ValueVerified:
  required:
    - value
  type: object
  properties:
    value:
      type: string
      description: parameter value
    verified:
      type: boolean
      description: 'is parameter was verified in project side. for example: user
            verify email'
token.TokenRequest.Value:
  required:
    - value
  type: object
  properties:
    value:
      type: string
      description: parameter value
token.TokenRequest.User:
  required:
    - id
  type: object
  properties:
    id:
      type: string
      description: user identifier in project
    email:
      $ref: '#/components/schemas/token.TokenRequest.ValueVerified'
    phone:
      $ref: '#/components/schemas/token.TokenRequest.ValueVerified'
    name:
      $ref: '#/components/schemas/token.TokenRequest.Value'
    ip:
      $ref: '#/components/schemas/token.TokenRequest.Value'
    locale:
      $ref: '#/components/schemas/token.TokenRequest.Value'
    address:
      $ref: '#/components/schemas/order.BillingAddress'
    metadata:
      type: object
      properties: {}
      description: object can contain any other information about user. object
        must contain only string values.
token.TokenRequest.Settings.ReturnUrl:
  type: object
  properties:
    success:
      type: string
      description: url to redirect user after payment was successfully completed
    fail:
      type: string
      description: url to redirect user after payment failed
token.TokenRequest.Settings:
  required:
    - project_id
    - type
  type: object
  properties:
    project_id:
      type: string
      description: project identifier
    return_url:
      $ref: '#/components/schemas/token.TokenRequest.Settings.ReturnUrl'
    currency:
      type: string
      description: '3 characters currency code in upper registry by ISO 4217.
            this field is required if payment type is simple. WARNING: this field
            is disallowed if creating payment token with types product or key'
    amount:
      type: number
      description: 'payment amount. this field is required if payment type is
            simple. WARNING: this field is disallowed if creating payment token with
            types product or key'
    products_ids:
      type: array
      description: 'array of products identifiers or key products identifiers.
            this field is required if payment types are product or key. WARNING: this
            field is disallowed if creating payment token with type simple'
      items:
        type: string
    description:
      type: string
      description: payment description
    type:
      type: string
      description: 'payment type. now available next values: simple, product,
            key'
    metadata:
      type: object
      properties: {}
      description: object can contain any other information about payment. object
        must contain only string values. this object will return in project notification
        about payment.
    is_buy_for_virtual_currency:
      type: boolean
      description: flag indicates that order should be processed using virtual
        currency
token.TokenRequest:
  required:
    - settings
    - user
  type: object
  properties:
    user:
      $ref: '#/components/schemas/token.TokenRequest.User'
    settings:
      $ref: '#/components/schemas/token.TokenRequest.Settings'
token.TokenResponse:
  required:
    - token
  type: object
  properties:
    token:
      type: string
      description: payment token
    payment_form_url:
      type: string
      description: url to payment form
product.Price:
  type: object
  properties:
    amount:
      type: number
      description: price
    currency:
      type: string
      description: currency
    region:
      type: string
      description: region
    is_virtual_currency:
      type: boolean
      description: virtual currency flag
product.PutPrice:
  required:
    - id
    - prices
  type: object
  properties:
    id:
      type: string
      description: id of product
    prices:
      type: array
      description: list of prices
      items:
        $ref: '#/components/schemas/product.Price'
userProfile.personal:
  type: object
  properties:
    first_name:
      type: string
      description: user first name
    last_name:
      type: string
      description: user last name
    position:
      type: string
      description: user position in company
userProfile.help:
  type: object
  properties:
    product_promotion_and_development:
      type: boolean
      description: User need help with product promotion and development
    released_game_promotion:
      type: boolean
      description: User need help with games promotion that have already been
        released
    international_sales:
      type: boolean
      description: User need help with international sales
    other:
      type: boolean
      description: User need help with other problems
RangeInt:
  type: object
  properties:
    from:
      type: integer
      description: range start value
    to:
      type: integer
      description: range end value
userProfile.company.monetization:
  type: object
  properties:
    paid_subscription:
      type: boolean
      description: company monetisation from buy paid subscription by company
        users
    in_game_advertising:
      type: boolean
      description: company monetisation from buy in game advertising
    in_game_purchases:
      type: boolean
      description: company monetisation from buy in game purchases by company
        users
    premium_access:
      type: boolean
      description: company monetisation from buy premium access by company users
    other:
      type: boolean
      description: company monetisation from other activities
userProfile.company.platforms:
  type: object
  properties:
    pc_mac:
      type: boolean
      description: PC/MacOs
    game_console:
      type: boolean
      description: game console
    mobile_device:
      type: boolean
      description: mobile device
    web_browser:
      type: boolean
      description: web browsers
    other:
      type: boolean
      description: other platforms
userProfile.company:
  type: object
  properties:
    company_name:
      type: string
      description: company name
    website:
      type: string
      description: company website url
    annual_income:
      $ref: '#/components/schemas/RangeInt'
    number_of_employees:
      $ref: '#/components/schemas/RangeInt'
    kind_of_activity:
      type: string
      description: 'company kind of activity. available values: develop_and_publish_your_games,
            publish_games_of_other_companies, publish_your_games_through_other_publishers,
            other'
    monetization:
      $ref: '#/components/schemas/userProfile.company.monetization'
    platforms:
      $ref: '#/components/schemas/userProfile.company.platforms'
ProtobufTimestamp:
  type: object
  properties:
    seconds:
      type: integer
      description: time in unix timestamp
    nanos:
      type: integer
      description: time nano seconds
userProfile.request:
  type: object
  properties:
    personal:
      $ref: '#/components/schemas/userProfile.personal'
    help:
      $ref: '#/components/schemas/userProfile.help'
    company:
      $ref: '#/components/schemas/userProfile.company'
    last_step:
      type: string
      description: identifier of wizard last step which user ended
userProfile.response:
  type: object
  properties:
    personal:
      $ref: '#/components/schemas/userProfile.personal'
    help:
      $ref: '#/components/schemas/userProfile.help'
    company:
      $ref: '#/components/schemas/userProfile.company'
    last_step:
      type: string
      description: identifier of wizard last step which user ended
    centrifugo_token:
      type: string
      description: user authorisation token to connect to centrifigo channel
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
userCommonProfile:
  type: object
  properties:
    user_profile:
      $ref: '#/components/schemas/userProfile.response'
    user_role:
      $ref: '#/components/schemas/UserRole'
    permissions:
      $ref: '#/components/schemas/userRolePermission'
    merchant:
      $ref: '#/components/schemas/onboarding.Merchant'
userRolePermission:
  type: object
  properties:
    name:
      type: string
    access:
      type: string
pageReview.request:
  required:
    - review
    - url
  type: object
  properties:
    review:
      type: string
      description: user review about page
    url:
      type: string
      description: URL address of page
user.confirmEmail.request:
  required:
    - token
  type: object
  properties:
    token:
      type: string
      description: email confirmation token
onboarding.merchant.fillStatus.Steps:
  type: object
  properties:
    company:
      type: boolean
      description: step company basic info complete
    contacts:
      type: boolean
      description: step company contacts complete
    banking:
      type: boolean
      description: step company banking complete
    tariff:
      type: boolean
      description: step tariff complete
onboarding.merchant.fillStatus:
  type: object
  properties:
    status:
      type: string
      description: 'fill status. possible values: draft, life'
    steps:
      $ref: '#/components/schemas/onboarding.merchant.fillStatus.Steps'
    complete_steps_count:
      type: integer
      description: count of complete steps
onboarding.merchant.signatureResponse:
  type: object
  properties:
    sign_url:
      type: string
      description: URL of the signature page to display in the embedded iFrame
    expires_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
onboarding.cost.payment.system:
  type: object
  properties:
    id:
      type: string
      description: unique identifier
    name:
      type: string
      description: payment method name
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    percent:
      type: number
      description: percent fee
    fix_amount:
      type: number
      description: fixed fee in particular currency
    fix_amount_currency:
      type: string
      description: currency of fixed fee.  letters code by ISO 4217
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    is_active:
      type: boolean
      description: true is cost record is active
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
    operating_company_id:
      type: string
      description: id of operation company for which this cost is applicable
onboarding.cost.payment.system.create:
  required:
    - fix_amount_currency
    - mcc_code
    - name
    - operating_company_id
    - percent
    - region
  type: object
  properties:
    name:
      type: string
      description: payment method name
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    percent:
      type: number
      description: percent fee
    fix_amount:
      type: number
      description: fixed fee in particular currency
    fix_amount_currency:
      type: string
      description: currency of fixed fee.  letters code by ISO 4217
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
    operating_company_id:
      type: string
      description: id of operation company for which this cost is applicable
onboarding.cost.payment.system.all:
  type: object
  properties:
    items:
      type: array
      description: array of system payment costs
      items:
        $ref: '#/components/schemas/onboarding.cost.payment.system'
onboarding.cost.money_back.system.all:
  type: object
  properties:
    items:
      type: array
      description: array of system money back costs
      items:
        $ref: '#/components/schemas/onboarding.cost.money_back.system'
onboarding.cost.payment.merchant:
  type: object
  properties:
    id:
      type: string
      description: unique identifier
    merchant_id:
      type: string
      description: merchant identifier
    name:
      type: string
      description: payment method name
    payout_currency:
      type: string
      description: payout currency. 3 lettre code by ISO 4217
    min_amount:
      type: number
      description: payment min amount in payout currency
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    method_percent:
      type: number
      description: payment method fee in percents
    method_fix_amount:
      type: number
      description: payment method fixed fee in particular currency
    method_fix_amount_currency:
      type: string
      description: currency of payment method fixed fee. 3-letters code by ISO
        4217
    ps_percent:
      type: number
      description: paysuper fixed fee in particular currency
    ps_fixed_fee:
      type: number
      description: paysuper fixed fee in particular currency
    ps_fixed_fee_currency:
      type: string
      description: currency of paysuper fixed fee. 3-letters code by ISO 4217
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    is_active:
      type: boolean
      description: true is rates record active for merchant
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
onboarding.cost.payment.merchant.create:
  required:
    - mcc_code
    - method_fix_amount_currency
    - method_percent
    - min_amount
    - name
    - payout_currency
    - ps_fixed_fee_currency
    - ps_percent
    - region
  type: object
  properties:
    name:
      type: string
      description: payment method name
    payout_currency:
      type: string
      description: payout currency. 3 lettre code by ISO 4217
    min_amount:
      type: number
      description: payment min amount in payout currency
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    method_percent:
      type: number
      description: payment method fee in percents
    method_fix_amount:
      type: number
      description: payment method fixed fee in particular currency
    method_fix_amount_currency:
      type: string
      description: currency of payment method fixed fee. 3-letters code by ISO
        4217
    ps_percent:
      type: number
      description: paysuper fixed fee in particular currency
    ps_fixed_fee:
      type: number
      description: paysuper fixed fee in particular currency
    ps_fixed_fee_currency:
      type: string
      description: currency of paysuper fixed fee. 3-letters code by ISO 4217
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
onboarding.cost.money_back.system:
  type: object
  properties:
    id:
      type: string
      description: unique identifier
    name:
      type: string
      description: payment method name
    payout_currency:
      type: string
      description: payout currency. 3 lettre code by ISO 4217
    undo_reason:
      type: string
      description: 'money back type. available values: refund, reversal, chargeback'
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    days_from:
      type: number
      description: number of days after payment operation
    payment_stage:
      type: number
      description: payment stage
    percent:
      type: number
      description: payment method fee in percents
    fix_amount:
      type: number
      description: payment method fixed fee
    fix_amount_currency:
      type: string
      description: payment method fixed fee currency
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    is_active:
      type: boolean
      description: true is rates record is active
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
    operating_company_id:
      type: string
      description: id of operation company for which this cost is applicable
onboarding.cost.money_back.system.create:
  required:
    - mcc_code
    - name
    - operating_company_id
    - payout_currency
    - region
    - undo_reason
  type: object
  properties:
    name:
      type: string
      description: payment method name
    payout_currency:
      type: string
      description: payout currency. 3 lettre code by ISO 4217
    undo_reason:
      type: string
      description: 'money back type. available values: refund, reversal, chargeback'
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    days_from:
      type: number
      description: number of days after payment operation
    payment_stage:
      type: number
      description: payment stage
    percent:
      type: number
      description: payment method fee in percents
    fix_amount:
      type: number
      description: payment method fixed fee
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
    operating_company_id:
      type: string
      description: id of operation company for which this cost is applicable
onboarding.cost.money_back.merchant:
  type: object
  properties:
    id:
      type: string
      description: unique identifier
    merchant_id:
      type: string
      description: merchant identifier
    name:
      type: string
      description: payment method name
    payout_currency:
      type: string
      description: payout currency. 3 lettre code by ISO 4217
    undo_reason:
      type: string
      description: 'money back type. available values: refund, reversal, chargeback'
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    days_from:
      type: number
      description: number of days after payment operation
    payment_stage:
      type: number
      description: payment stage
    percent:
      type: number
      description: payment method fee in percents
    fix_amount:
      type: number
      description: payment method fixed fee in particular currency
    fix_amount_currency:
      type: string
      description: currency of payment method fixed fee.  letters code by ISO
        4217
    is_paid_by_merchant:
      type: boolean
      description: if true than commission will to take from merchant when money
        back operation will be processing
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    is_active:
      type: boolean
      description: true is rates record is active
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
onboarding.cost.money_back.merchant.create:
  required:
    - fix_amount_currency
    - mcc_code
    - name
    - payout_currency
    - percent
    - region
    - undo_reason
  type: object
  properties:
    name:
      type: string
      description: payment method name
    payout_currency:
      type: string
      description: payout currency. 3 lettre code by ISO 4217
    undo_reason:
      type: string
      description: 'money back type. available values: refund, reversal, chargeback'
    region:
      type: string
      description: region name
    country:
      type: string
      description: two-letter country code by ISO 3166-1
    days_from:
      type: number
      description: number of days after payment operation
    payment_stage:
      type: number
      description: payment stage
    percent:
      type: number
      description: payment method fee in percents
    fix_amount:
      type: number
      description: payment method fixed fee in particular currency
    fix_amount_currency:
      type: string
      description: currency of payment method fixed fee.  letters code by ISO
        4217
    is_paid_by_merchant:
      type: boolean
      description: if true than commission will to take from merchant when money
        back operation will be processing
    mcc_code:
      type: string
      description: mcc code value, for which this cost is applicable
onboarding.cost.payment.merchant.all:
  type: object
  properties:
    items:
      type: array
      description: array of merchant payment costs
      items:
        $ref: '#/components/schemas/onboarding.cost.payment.merchant'
onboarding.cost.money_back.merchant.all:
  type: object
  properties:
    items:
      type: array
      description: array of merchant payment costs
      items:
        $ref: '#/components/schemas/onboarding.cost.money_back.merchant'
dashboard.main_reports.chart.float:
  type: object
  properties:
    label:
      type: string
      description: 'point label. for example: if period to get report equal month
            then point label will be equal one day'
    value:
      type: number
      description: point value
dashboard.main_reports.chart.integer:
  type: object
  properties:
    label:
      type: string
      description: 'point label. for example: if period to get report equal month
            then point label will be equal one day'
    value:
      type: integer
      description: point value
dashboard.main_reports.amount_with_chart:
  type: object
  properties:
    amount_current:
      type: number
      description: total amount calculated for current report
    amount_previous:
      type: number
      description: total amount calculated for previous report
    currency:
      type: string
      description: report amount currency.  three-letter ISO 4217 currency code,
        in uppercase.
    chart:
      type: array
      description: array contain objects for chart drawing
      items:
        $ref: '#/components/schemas/dashboard.main_reports.chart.float'
dashboard.main_reports.total_transactions:
  type: object
  properties:
    count_current:
      type: integer
      description: total count of transactions by current period
    count_previous:
      type: integer
      description: total count of transactions by previous period
    chart:
      type: array
      description: array contain objects for chart drawing
      items:
        $ref: '#/components/schemas/dashboard.main_reports.chart.integer'
dashboard.main_reports:
  type: object
  properties:
    gross_revenue:
      $ref: '#/components/schemas/dashboard.main_reports.amount_with_chart'
    vat:
      $ref: '#/components/schemas/dashboard.main_reports.amount_with_chart'
    total_transactions:
      $ref: '#/components/schemas/dashboard.main_reports.total_transactions'
    arpu:
      $ref: '#/components/schemas/dashboard.main_reports.amount_with_chart'
dashboard.revenue_dynamics.item:
  type: object
  properties:
    label:
      type: string
      description: 'point label. for example: if period to get report equal month
            then point label will be equal one day'
    amount:
      type: number
      description: revenue amount for label
    count:
      type: integer
      description: transactions count for label
dashboard.revenue_dynamics:
  type: object
  properties:
    currency:
      type: string
      description: amount currency. three-letter ISO 4217 currency code, in uppercase.
    items:
      type: array
      description: array of points
      items:
        $ref: '#/components/schemas/dashboard.revenue_dynamics.item'
dashboard.base.revenue_by_country.top:
  type: object
  properties:
    country:
      type: string
      description: country, two-letter uppercase country code in ISO 3166-1 alpha-2
        format
    amount:
      type: number
      description: amount by country
dashboard.base.chart:
  type: object
  properties:
    label:
      type: string
      description: 'point label. for example: if period to get report equal month
            then point label will be equal one day'
    amount:
      type: number
      description: amount for label
dashboard.base.revenue_by_country:
  type: object
  properties:
    top:
      type: array
      description: array of objects with information about top 5 countries by
        revenue by period
      items:
        $ref: '#/components/schemas/dashboard.base.revenue_by_country.top'
    total_current:
      type: number
      description: total revenue amount by current period
    total_previous:
      type: number
      description: total revenue amount by previous period
    currency:
      type: string
      description: amount currency. three-letter ISO 4217 currency code, in uppercase.
    chart:
      $ref: '#/components/schemas/dashboard.base.chart'
dashboard.base.sales_today.top.item:
  type: object
  properties:
    name:
      type: string
      description: sold item name
    count:
      type: integer
      description: item total count which were sold in period
dashboard.base.sales_today:
  type: object
  properties:
    top:
      type: array
      description: array of objects with information about top 5 merchant products
        (projects) which were sold in period
      items:
        $ref: '#/components/schemas/dashboard.base.sales_today.top.item'
    total_current:
      type: integer
      description: items total count which were sold by chosen period
    total_previous:
      type: integer
      description: items total count which were sold by previous period to chosen
        period
    chart:
      type: array
      description: array contain objects for chart drawing
      items:
        $ref: '#/components/schemas/dashboard.main_reports.chart.integer'
dashboard.base.sources.top.item:
  type: object
  properties:
    name:
      type: string
      description: url of issuer
    count:
      type: integer
      description: total count
dashboard.base.sources:
  type: object
  properties:
    top:
      type: array
      description: array of objects with information about top 5 issuers url
      items:
        $ref: '#/components/schemas/dashboard.base.sources.top.item'
    total_current:
      type: integer
      description: transactions total count by chosen period
    total_previous:
      type: integer
      description: transactions total count by previous period to chosen period
    chart:
      type: array
      description: array contain objects for chart drawing
      items:
        $ref: '#/components/schemas/dashboard.main_reports.chart.integer'
dashboard.base:
  type: object
  properties:
    revenue_by_country:
      $ref: '#/components/schemas/dashboard.base.revenue_by_country'
    sales_today:
      $ref: '#/components/schemas/dashboard.base.sales_today'
    sources:
      $ref: '#/components/schemas/dashboard.base.sources'
merchant_balance:
  type: object
  properties:
    merchant_id:
      type: string
      description: merchant identificator
    currency:
      type: string
      description: currency
    debit:
      type: number
      description: balance debit
    credit:
      type: string
      description: balance credit
    rolling_reserve:
      type: number
      description: current rooling reserve balance
    total:
      type: number
      description: total amount
    created_at:
      type: string
      description: last update date
billingPayoutDocument:
  type: object
  properties:
    id:
      type: string
      description: document id
    source_id:
      type: array
      description: royalty reports id
      items:
        type: string
    transaction:
      type: string
      description: transaction id
    total_fees:
      type: number
      description: total_fees
      format: double
    balance:
      type: number
      description: amount
      format: double
    currency:
      type: string
      description: currency
    status:
      type: string
      description: status, one of skip pending in_progress paid canceled failed
    description:
      type: string
      description: description
    destination:
      $ref: '#/components/schemas/onboarding.Banking'
    created_at:
      type: string
      description: creation date
      format: date-time
    updated_at:
      type: string
      description: update date
      format: date-time
    arrival_date:
      type: string
      description: arrival date
      format: date-time
    failure_code:
      type: string
      description: failure code, one of account_closed account_frozen account_restricted
        destination_bank_invalid could_not_process declined insufficient_funds
        invalid_account_number incorrect_account_holder_name invalid_currency
    failure_message:
      type: string
      description: failure message
    failure_transaction:
      type: string
      description: failure transaction
    merchant_id:
      type: string
      description: merchant identificator
    period_from:
      type: string
      description: payout period start
      format: date-time
    period_to:
      type: string
      description: payout period end
      format: date-time
    operating_company_id:
      type: string
      description: operating company id
payout_documents_list:
  type: object
  properties:
    count:
      type: number
      description: number of found documents
    items:
      type: array
      description: array with documents
      items:
        $ref: '#/components/schemas/billingPayoutDocument'
payout_documents_create:
  type: object
  properties:
    merchant_id:
      type: string
      description: merchant identificator to create payout document for
    description:
      type: string
      description: document description
payout_documents_update:
  type: object
  properties:
    transaction:
      type: string
      description: transaction id
    status:
      type: string
      description: status, one of skip pending in_progress paid canceled failed
    failure_code:
      type: string
      description: failure code, one of account_closed account_frozen account_restricted
        destination_bank_invalid could_not_process declined insufficient_funds
        invalid_account_number incorrect_account_holder_name invalid_currency
    failure_message:
      type: string
      description: failure message
    failure_transaction:
      type: string
      description: failure transaction
price:
  type: object
  properties:
    amount:
      type: number
      description: price amount
    currency:
      type: string
      description: price currency. three-letter ISO 4217 currency code, in uppercase.
    region:
      type: string
      description: 'region name for this price. available regions: oceania, eu,
            cis, north_europe, north_africa, polynesia, north_america, central_africa,
            south_europe, antarctica, south_america, south_asia, caribbean, west_asia,
            central_america, west_africa, southern_africa, southeast_asia, east_africa,
            east_asia, micronesia, west_europe, latin_america, melanesia, russia,
            sub_saharan_africa, south_africa'
product:
  type: object
  properties:
    id:
      type: string
      description: product identifier
    project_id:
      type: string
      description: project identifier for which created product
    object:
      type: string
      description: system constant conteined returning object type. for product
        object always must be - product
    type:
      type: string
      description: product type
    sku:
      type: string
      description: product sku (simple slug name)
    name:
      type: object
      properties: {}
      description: 'product names map in other language: {"en": "project name",
            "ru": "имя проекта"}'
    default_currency:
      type: string
      description: default currency for selling product. three-letter ISO 4217
        currency code, in uppercase.
    enabled:
      type: boolean
      description: true is product is enabled
    prices:
      type: array
      description: array of available prices for product
      items:
        $ref: '#/components/schemas/price'
    description:
      type: object
      properties: {}
      description: 'product short descriptions map in other language: {"en": "project
            short description", "ru": "короткое описание проекта"}'
    long_description:
      type: object
      properties: {}
      description: 'product long descriptions map in other language: {"en": "project
            long description", "ru": "длинное описание проекта"}'
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    images:
      type: array
      description: array of product images. if images not set then field can be
        null
      items:
        type: string
    url:
      type: string
      description: url to product on project side
    metadata:
      type: object
      properties: {}
      description: object can contain any other information about product. object
        must contain only string values
    billing_type:
      type: string
      description: Type of billing
      enum:
        - real
        - virtual
product.create_or_update:
  type: object
  properties:
    project_id:
      type: string
      description: project identifier for which created product
    object:
      type: string
      description: system constant conteined returning object type. for product
        object always must be - product
    type:
      type: string
      description: product type
    sku:
      type: string
      description: product sku (simple slug name)
    name:
      type: object
      properties: {}
      description: 'product names map in other language: {"en": "project name",
            "ru": "имя проекта"}'
    default_currency:
      type: string
      description: default currency for selling product. three-letter ISO 4217
        currency code, in uppercase.
    enabled:
      type: boolean
      description: true is product is enabled
    prices:
      type: array
      description: array of available prices for product
      items:
        $ref: '#/components/schemas/price'
    description:
      type: object
      properties: {}
      description: 'product short descriptions map in other language: {"en": "project
            short description", "ru": "короткое описание проекта"}'
    long_description:
      type: object
      properties: {}
      description: 'product long descriptions map in other language: {"en": "project
            long description", "ru": "длинное описание проекта"}'
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    images:
      type: array
      description: array of product images. if images not set then field can be
        null
      items:
        type: string
    url:
      type: string
      description: url to product on project side
    metadata:
      type: object
      properties: {}
      description: object can contain any other information about product. object
        must contain only string values
billingRoyaltyReport:
  type: object
  properties:
    id:
      type: string
      description: report id
    merchant_id:
      type: string
      description: merchant id
    created_at:
      type: string
      description: date of report creation
      format: date-time
    updated_at:
      type: string
      description: date of report last update
      format: date-time
    payout_date:
      type: string
      description: date when report was paid
      format: date-time
    status:
      type: string
      description: status of report
    period_from:
      type: string
      description: start of report time period
      format: date-time
    period_to:
      type: string
      description: end of report time period
      format: date-time
    accept_expire_at:
      type: string
      description: date when report will be auto-accepted, if merchant didn't
        accept or start a dispute yet
      format: date-time
    accepted_at:
      type: string
      description: date when report was accepted
      format: date-time
    totals:
      $ref: '#/components/schemas/billingRoyaltyReportTotals'
    currency:
      type: string
      description: currency of report
    summary:
      $ref: '#/components/schemas/billingRoyaltyReportSummary'
    dispute_reason:
      type: string
      description: reason of dispute (if it was started)
    dispute_started_at:
      type: string
      description: date of dispute beginning (if it was started)
      format: date-time
    dispute_closed_at:
      type: string
      description: date of dispute resolve (if it was started)
      format: date-time
    is_auto_accepted:
      type: boolean
      description: flag of auto-acceptance
      format: boolean
    payout_document_id:
      type: string
      description: cross-link to payout invoice, that includes this royalty report
    operating_company_id:
      type: string
      description: operating company id
billingRoyaltyReportCorrectionItem:
  type: object
  properties:
    accounting_entry_id:
      type: string
      description: linked accounting entry id
    amount:
      type: number
      description: amount of correction
      format: double
    currency:
      type: string
      description: currency
    reason:
      type: string
      description: reason if correction
    entry_date:
      type: string
      description: date of correction
      format: date-time
billingRoyaltyReportProductSummaryItem:
  type: object
  properties:
    product:
      type: string
      description: product or project name
    region:
      type: string
      description: country ISO Alpha2 code
    total_transactions:
      type: integer
      description: total number of transactions for current product/project in
        current country (including sales and returns)
      format: int32
    sales_count:
      type: integer
      description: number of sales for current product/project in current country
      format: int32
    gross_sales_amount:
      type: number
      description: gross amount of sales for current product/project in current
        country
      format: double
    returns_count:
      type: integer
      description: number of returns for current product/project in current country
      format: int32
    gross_returns_amount:
      type: number
      description: gross amount of returns for current product/project in current
        country
      format: double
    gross_total_amount:
      type: number
      description: resulting gross amount for current product/project in current
        country (sales minus returns)
      format: double
    total_fees:
      type: number
      description: fees amount for current product/project in current country
      format: double
    total_vat:
      type: number
      description: vat amount for current product/project in current country
      format: double
    payout_amount:
      type: number
      description: payout amount for current product/project in current country
      format: double
billingRoyaltyReportSummary:
  type: object
  properties:
    products_items:
      type: array
      description: summary details for each product/project and country
      items:
        $ref: '#/components/schemas/billingRoyaltyReportProductSummaryItem'
    products_total:
      $ref: '#/components/schemas/billingRoyaltyReportProductSummaryItem'
    corrections:
      type: array
      description: list of corrections applied (if any)
      items:
        $ref: '#/components/schemas/billingRoyaltyReportCorrectionItem'
    rolling_reserves:
      type: array
      description: list of rolling reserves applied (if any)
      items:
        $ref: '#/components/schemas/billingRoyaltyReportCorrectionItem'
billingRoyaltyReportTotals:
  type: object
  properties:
    transactions_count:
      type: integer
      description: total transactions count (including sales and returns)
      format: int32
    fee_amount:
      type: number
      description: fees amount
      format: double
    vat_amount:
      type: number
      description: vat amount
      format: double
    payout_amount:
      type: number
      description: payput amount
      format: double
    rolling_reserve_amount:
      type: number
      description: applied rolling reserve total amount
      format: double
    correction_amount:
      type: number
      description: applied corrections total amount
      format: double
grpcChangeRoyaltyReport:
  required:
    - reason
  type: object
  properties:
    status:
      type: string
      description: new report status
    reason:
      type: string
      description: correction reason
    correction:
      $ref: '#/components/schemas/grpcChangeRoyaltyReportCorrection'
grpcChangeRoyaltyReportCorrection:
  required:
    - amount
    - reason
  type: object
  properties:
    amount:
      type: number
      description: correction amount (in report's currency)
      format: double
    reason:
      type: string
      description: correction reason
grpcRoyaltyReportsPaginate:
  type: object
  properties:
    count:
      type: integer
      description: total items count
      format: int32
    items:
      type: array
      description: royalty reports
      items:
        $ref: '#/components/schemas/billingRoyaltyReport'
grpcPaylinksPaginate:
  type: object
  properties:
    count:
      title: total found paylinks counter
      type: integer
      format: int32
    items:
      title: paylikns
      type: array
      items:
        $ref: '#/components/schemas/paylinkPaylink'
paylinkGroupStatCommon:
  type: object
  properties:
    top:
      type: array
      description: top items of grouping stat data
      items:
        $ref: '#/components/schemas/paylinkStatCommon'
    total:
      $ref: '#/components/schemas/paylinkStatCommon'
paylinkPaylink:
  type: object
  properties:
    id:
      type: string
      description: paylink id
    object:
      type: string
      description: object type
    products:
      type: array
      description: list of products included to paylink
      items:
        type: string
    expires_at:
      type: string
      description: expiration date
      format: date-time
    created_at:
      type: string
      description: creation date
      format: date-time
    updated_at:
      type: string
      description: last updation date
      format: date-time
    merchant_id:
      type: string
      description: paylink merchant id"
    project_id:
      type: string
      description: paylink project id"
    name:
      type: string
      description: paylink name
    is_expired:
      type: boolean
      description: is expired flag
      format: boolean
    visits:
      type: integer
      description: total visits count
      format: int32
    no_expiry_date:
      type: boolean
      description: no expiry date flag
      format: boolean
    products_type:
      type: string
      description: products type
    total_transactions:
      type: integer
      description: total transactions count
      format: int32
    sales_count:
      type: integer
      description: sales count
      format: int32
    returns_count:
      type: integer
      description: returns count
      format: int32
    conversion:
      type: number
      description: conversion (sales per visits relation)
      format: double
    gross_sales_amount:
      type: number
      description: gross sales amount
      format: double
    gross_returns_amount:
      type: number
      description: gross returns amount
      format: double
    gross_total_amount:
      type: number
      description: gross total amount
      format: double
    transactions_currency:
      type: string
      description: transactions currency ISO code
paylinkStatCommon:
  type: object
  properties:
    paylink_id:
      type: string
      description: paylink id
    visits:
      type: integer
      description: total visits count
      format: int32
    total_transactions:
      type: integer
      description: total transactions count
      format: int32
    sales_count:
      type: integer
      description: sales count
      format: int32
    returns_count:
      type: integer
      description: returns count
      format: int32
    gross_sales_amount:
      type: number
      description: gross sales amount
      format: double
    gross_returns_amount:
      type: number
      description: gross returns amount
      format: double
    gross_total_amount:
      type: number
      description: gross total amount
      format: double
    transactions_currency:
      type: string
      description: transactions currency ISO code
    conversion:
      type: number
      description: conversion, optional
      format: double
    country_code:
      type: string
      description: country iso code A2, optional
    date:
      type: string
      description: date yyyy-mm-dd, optional
    referrer_host:
      type: string
      description: referrer host value, optional
    utm:
      $ref: '#/components/schemas/paylinkUtm'
paylinkUtm:
  type: object
  properties:
    utm_source:
      type: string
      description: utm_source value
    utm_medium:
      type: string
      description: utm_medium value
    utm_campaign:
      type: string
      description: utm_campaign value
createPaylinkRequest:
  type: object
  properties:
    id:
      type: string
      description: paylink id, optional, used only for edit existing paylink
    products:
      type: array
      description: list of products included to paylink
      items:
        type: string
    expires_at:
      type: number
      description: expiration date as unix timestamp
    project_id:
      type: string
      description: paylink project id"
    name:
      type: string
      description: paylink name
    no_expiry_date:
      type: boolean
      description: no expiry date flag
      format: boolean
    products_type:
      type: string
      description: products type
billingVatReport:
  type: object
  properties:
    id:
      type: string
      description: vat report id
    country:
      type: string
      description: country ISO A2 code
    vat_rate:
      type: number
      description: rate value of VAT
      format: double
    currency:
      type: string
      description: vat currency ISO code
    transactions_count:
      type: integer
      description: total transactions count in period
      format: int32
    gross_revenue:
      type: number
      description: gross revenue amount in period
      format: double
    vat_amount:
      type: number
      description: vat amount in period
      format: double
    fees_amount:
      type: number
      description: fees amount in period
      format: double
    deduction_amount:
      type: number
      description: deduction amount in period
      format: double
    correction_amount:
      type: number
      description: manual correction amount in period
      format: double
    status:
      type: string
      description: status
    country_annual_turnover:
      type: number
      description: annual turnover for country
      format: double
    world_annual_turnover:
      type: number
      description: world annual turnover
      format: double
    amounts_approximate:
      type: boolean
      description: flag of non-final amounts due to currency exchange rates delay
      format: boolean
    date_from:
      type: string
      description: period start date
      format: date-time
    date_to:
      type: string
      description: period end date
      format: date-time
    pay_until_date:
      type: string
      description: VAT payment deadline date
      format: date-time
    created_at:
      type: string
      description: report creation date
      format: date-time
    updated_at:
      type: string
      description: report last update date
      format: date-time
    paid_at:
      type: string
      description: date of payment
      format: date-time
    operating_company_id:
      type: string
      description: operating company id
grpcVatReportsPaginate:
  type: object
  properties:
    count:
      type: integer
      description: total reports count
      format: int32
    items:
      type: array
      description: reports
      items:
        $ref: '#/components/schemas/billingVatReport'
saved_card.remove.request:
  required:
    - cookie
    - id
  type: object
  properties:
    id:
      type: string
      description: saved card identifier
    cookie:
      type: string
      description: customer cookie value got on payment form data
operating_company:
  type: object
  properties:
    id:
      type: string
      description: operating company id
    name:
      type: string
      description: operating company name
    country:
      type: string
      description: country
    registration_number:
      type: string
      description: registration_number
    registration_date:
      type: string
      description: registration date
    vat_number:
      type: string
      description: vat_number
    email:
      type: string
      description: company email
    address:
      type: string
      description: address
    vat_address:
      type: string
      description: address for VAT purposes
    signatory_name:
      type: string
      description: signatory_name
    signatory_position:
      type: string
      description: signatory_position
    banking_details:
      type: string
      description: banking_details
    payment_countries:
      type: array
      description: banking_details
      items:
        type: string
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
operating_company_list:
  type: object
  properties:
    items:
      type: array
      description: list of operating companies
      items:
        $ref: '#/components/schemas/operating_company'
payment_min_limit_system:
  type: object
  properties:
    currency:
      type: string
      description: limit currency
    amount:
      type: string
      description: limit value
    created_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
    updated_at:
      $ref: '#/components/schemas/ProtobufTimestamp'
payment_min_limit_system_list:
  type: object
  properties:
    items:
      type: array
      description: list of payment minimum limits system
      items:
        $ref: '#/components/schemas/payment_min_limit_system'
InviteUserAdmin:
  type: object
  properties:
    email:
      type: string
      description: Email on which to send an invitation
      example: test@paysuper.com
    role:
      type: string
      description: Role of user (system_risk_manager, system_financial, system_support,
        system_view_only)
      example: support
InviteUserResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    role:
      type: object
      properties: {}
ResendInviteAdmin:
  type: object
  properties:
    email:
      type: string
      description: Email of invite
      example: test@paysuper.com
EmptyResponseWithStatus:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
ListUsersResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    users:
      type: array
      items:
        $ref: '#/components/schemas/UserRole'
AcceptInvite:
  type: object
  properties:
    token:
      type: string
      description: Invitation token
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
AcceptInviteResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    role:
      type: object
      properties: {}
      description: User role
CheckInviteToken:
  type: object
  properties:
    token:
      type: string
      description: Invitation token
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
CheckInviteTokenResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    role_id:
      type: string
      description: Identifier of invitation
    role_type:
      type: string
      description: 'Type of invitation: admin or merchant'
      example: admin
InviteUserMerchant:
  type: object
  properties:
    email:
      type: string
      description: Email on which to send an invitation
      example: test@paysuper.com
    role:
      type: string
      description: Role of user (merchant_developer, merchant_accounting, merchant_support,
        merchant_view_only)
      example: support
ResendInviteMerchant:
  type: object
  properties:
    email:
      type: string
      description: Email of invite identifier
      example: test@paysuper.com
UserRole:
  type: object
  properties:
    id:
      type: string
      description: User role identifier
      example: 507f1f77bcf86cd799439011
    merchantId:
      type: string
      description: Merchant identifier (only for merchant users)
      example: 507f1f77bcf86cd799439011
    role:
      type: string
      description: Role of user
      example: developer
    status:
      type: string
      description: 'Status of invitation: invited or approved'
      example: invited
    userId:
      type: string
      description: User identifier
      example: 507f1f77bcf86cd799439011
    firstName:
      type: string
      description: First name of user
      example: John
    lastName:
      type: string
      description: Last name of user
      example: Malkovich
    email:
      type: string
      description: Email of user
      example: test@paysuper.com
    createdAt:
      type: string
      description: Date of creation
      example: developer
    updatedAt:
      type: string
      description: Date of updating
      example: developer
UserRoleResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    role:
      type: object
      properties: {}
      description: User role
ListRoleType:
  type: array
  items:
    $ref: '#/components/schemas/ListRoleTypeItem'
ListRoleTypeItem:
  type: object
  properties:
    id:
      type: string
      description: Role identity
      example: owner
    name:
      type: string
      description: Role name
      example: Owner
UpdateUserRoleRequest:
  type: object
  properties:
    email:
      type: string
      description: User identity
      example: test@paysuper.com
MerchantsForUserResponse:
  type: object
  properties:
    status:
      type: number
    message:
      type: string
    role:
      type: object
      properties: {}
      description: User role
MerchantsForUser:
  type: object
  properties:
    id:
      type: string
      description: Merchant identity
      example: 507f1f77bcf86cd799439011
    name:
      type: string
      description: Merchant name
      example: R&K
Error:
  type: object
  properties:
    code:
      type: string
    message:
      type: string
  required:
    - code
    - message
Key:
  type: object
  properties:
    id:
      type: string
      description: Internal id of key in database
    code:
      type: string
      description: Code for activation
      example: AAAA-BBBB-CCCC-XXXX
    key_product_id:
      type: string
      description: Id of key product
    platform_id:
      type: string
      description: Id of platform
      example: steam
    order_id:
      type: string
      description: Id of order when redeemed, can be null
    created_at:
      type: string
      description: Date and time when key have been added
      format: 'date-time'
    redeemed_at:
      type: string
      description: Date and time when key have been redemed
      format: 'date-time'
    reserved_to:
      type: string
      description: Date and time before key is not available for reserving
      format: 'date-time'
KeysCountResponse:
  type: object
  properties:
    count:
      type: integer
      description: Total count of keys for product and platform
KeysProcessed:
  type: object
  properties:
    total_count:
      type: integer
      description: Total count of keys for product and platform
    keys_processed:
      type: integer
      description: Count of keys have been processed
KeyPlatform:
  type: object
  properties:
    id:
      type: string
      example: gog
    name:
      type: string
      example: Good old games.com
    eula_url:
      type: string
      example: http://www.example.com
    activation_url:
      type: string
      example: http://www.example.com
    count:
      type: number
      description: count of available keys. (used only in merchant listings)
    prices:
      type: array
      items:
        $ref: '#/components/schemas/KeyProductPrice'
KeyProductPrice:
  type: object
  properties:
    region:
      type: string
      example: EUR
    amount:
      type: number
      format: float
      example: 29.99
    currency:
      type: string
      example: EUR
      enum:
        - EUR
        - USD
        - RUB
Platform:
  type: object
  properties:
    id:
      type: string
      example:
        steam
    name:
      type: string
      example:
        Steam
UpdateKeyProduct:
  type: object
  description: Model for updating or creating key product
  properties:
    name:
      type: object
      additionalProperties:
        type: string
      description: name of product
      example:
        en: Best Game Ever
        ru: Лучшая игра
    object:
      type: string
    project_id:
      type: string
      description: Id of project
    description:
      type: object
      additionalProperties:
        type: string
      description: description of description
      example:
        en: Description here
        ru: Описание тут
    long_description:
      type: object
      additionalProperties:
        type: string
      description: long description of description
      example:
        en: Description here
        ru: Описание тут
    sku:
      type: string
      description: sku of product (unique in project)
    cover:
      $ref: '#/components/schemas/ImageCollection'
    url:
      type: string
    enabled:
      type: boolean
    default_currency:
      type: string
      example: USD
    platforms:
      type: array
      items:
        $ref: '#/components/schemas/KeyPlatform'
    pricing:
      description: Pricing mode (currency, manual, steam or default)
      type: string
      example: steam
KeyProductInfo:
  type: object
  properties:
    id:
      type: string
      description: id of product
    project_id:
      type: string
      description: Id of project
    name:
      type: string
      description: Localized name of product
    description:
      type: string
      description: Localized description of description
    long_description:
      type: string
      description: Localized long description of description
    images:
      type: array
      items:
        type: string
    platforms:
      type: array
      items:
        $ref: '#/components/schemas/KeyPlatformInfo'
    pricing:
      type: string
      description: Pricing mode (currency, manual, steam or default)
      example: steam
KeyPlatformInfo:
  type: object
  properties:
    id:
      type: string
    name:
      type: string
    price:
      type: object
      properties:
        amount:
          type: number
        currency:
          type: string
          example: USD
        region:
          type: string
          example: USD
        is_fallback:
          type: boolean
          description: Flag indicates that price was calculated in default currency instead of specified
KeyProduct:
  type: object
  properties:
    id:
      type: string
      description: id of product
    merchant_id:
      type: string
      description: Id of merchant
    project_id:
      type: string
      description: Id of project
    name:
      type: object
      additionalProperties:
        type: string
      description: name of product
    description:
      type: object
      additionalProperties:
        type: string
      description: description of description
    long_description:
      type: object
      additionalProperties:
        type: string
      description: long description of description
    created_at:
      type: string
      format: 'date-time'
    updated_at:
      type: string
      format: 'date-time'
    sku:
      type: string
      description: sku of product
    cover:
      $ref: '#/components/schemas/ImageCollection'
    url:
      type: string
    enabled:
      type: boolean
    default_currency:
      type: string
      example: USD
    platforms:
      type: array
      items:
        $ref: '#/components/schemas/KeyPlatform'
    published_at:
      description: Date and time when product has been published. May be null
      type: string
      format: 'date-time'
    pricing:
      description: Pricing mode (currency, manual, steam or default)
      type: string
      example: 'steam'
    billing_type:
      description: Type of billing
      type: string
      enum:
        - real
        - virtual
ImageCollection:
  type: object
  properties:
    images:
      type: object
      additionalProperties:
        type: string
      example:
        en: "http://example.com"
        ru: "http://example.com"
        de: "http://example.com"
      description: Localized images
    use_one_for_all:
      type: boolean
      description: Use "en" as default image for all
      example: true